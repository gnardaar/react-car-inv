{"version":3,"sources":["components/Navbar/Navbar.tsx","components/Home/Home.tsx","api/server.ts","redux/slices/RootSlice.ts","components/SharedComponents/Input.tsx","components/CarForm/CarForm.tsx","components/DataTable/DataTable.tsx","custom-hooks/FetchData.ts","components/CarInventory/CarInventory.tsx","components/Car/Car.tsx","components/About/About.tsx","components/SignIn/SignIn.tsx","redux/store.ts","index.tsx","firebaseConfig.ts"],"names":["useStyles","makeStyles","logo","maxWidth","height","navlogo","display","flexDirection","justifyContent","alignItems","center","column","row","navbar","backgroundColor","zIndex","borderBottom","navbarItem","color","textDecoration","p5","padding","spaceBetween","alignCenter","ul","listStyleType","width60","width","width100","psides","paddingRight","paddingLeft","Navbar","classes","className","to","fallback","Button","background","backgroundImage","backgroundPosition","position","main_text","textAlign","top","left","transform","button_text","Home","props","title","token","server_calls","get","fetch","method","headers","response","ok","Error","json","create","data","body","JSON","stringify","update","id","delete","rootSlice","createSlice","name","initialState","make","model","condition","year","reducers","chooseMake","state","action","payload","chooseModel","chooseCondition","chooseYear","reducer","actions","Input","forwardRef","ref","TextField","variant","margin","inputRef","fullWidth","type","CarForm","dispatch","useDispatch","store","useStore","useSelector","useForm","register","handleSubmit","onSubmit","event","console","log","setTimeout","window","location","reload","target","reset","getState","htmlFor","placeholder","columns","field","headerName","hide","flex","DataTable","useState","carData","setData","handleDataFetch","result","useEffect","getData","useGetData","open","setOpen","gridData","selectionModel","setSelectionModel","handleClose","style","rows","pageSize","checkboxSelection","onSelectionModelChange","item","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","drawerWidth","theme","createStyles","main","fontFamily","h3","text","logo_a","logo_navigation","listStyle","textTransform","root","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","toolbar_button","margin_top","marginTop","font","leftMargin","CarInventory","withRouter","history","useTheme","dialogOpen","setDialogOpen","handleDialogClickOpen","handleDialogClickClose","itemsList","push","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","Typography","noWrap","anchor","paper","direction","Divider","List","map","index","ListItem","button","ListItemText","primary","Car","About","Alert","elevation","googleButton","border","boxShadow","fontSize","lineHeight","borderRadius","cursor","googleLogo","typographyStyle","containerStyle","snackBar","SignIn","auth","useAuth","handleSnackClose","reason","sign_in","signInWithPopup","firebase","GoogleAuthProvider","user","sign_out","signOut","Container","Snackbar","message","autoHideDuration","severity","configureStore","devTools","ReactDOM","render","StrictMode","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","suspense","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.4ebd0c2a.chunk.js","sourcesContent":["import { constants } from 'crypto'\r\nimport React, { Suspense } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\n// import Digits from '../../assets/images/digitlogo.png';\r\nimport { AuthCheck } from \"reactfire\";\r\n\r\nconst useStyles = makeStyles({\r\n  logo: {\r\n    // content: `url(${Digits})`,\r\n    maxWidth: \"20%\",\r\n    height: \"auto\",\r\n  },\r\n  navlogo: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"flex-start\",\r\n  },\r\n  center: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  navbar: {\r\n    backgroundColor: \"#003155\",\r\n    zIndex: 1,\r\n    borderBottom: \"1px solid grey\",\r\n  },\r\n  navbarItem: {\r\n    color: \"white\",\r\n    textDecoration: \"none\",\r\n  },\r\n  p5: {\r\n    padding: \"5px\",\r\n  },\r\n  spaceBetween: {\r\n    justifyContent: \"space-between\",\r\n  },\r\n  alignCenter: {\r\n    alignItems: \"center\",\r\n  },\r\n  ul: {\r\n    listStyleType: \"none\",\r\n  },\r\n  width60: {\r\n    width: \"60%\",\r\n  },\r\n  width100: {\r\n    width: \"100%\",\r\n  },\r\n  psides: {\r\n    paddingRight: \"10px\",\r\n    paddingLeft: \"10px\",\r\n  },\r\n});\r\n\r\nexport const Navbar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={`${classes.row} ${classes.navbar} ${classes.width100} ${classes.alignCenter} ${classes.p5} ${classes.spaceBetween}`}\r\n    >\r\n      <div className={`${classes.navlogo} `}>\r\n        <Link to=\"/\" className={`${classes.logo} ${classes.p5}`}></Link>\r\n      </div>\r\n      <div className={`${classes.width60} ${classes.alignCenter}`}>\r\n        <ul\r\n          className={`${classes.ul} ${classes.row} ${classes.spaceBetween} ${classes.psides}`}\r\n        >\r\n          <Suspense fallback={\"loading...\"}>\r\n            <AuthCheck\r\n              fallback={\r\n                <li>\r\n                  <Link\r\n                    to=\"/signin\"\r\n                    className={`${classes.navbarItem} ${classes.psides}`}\r\n                  >\r\n                    Sign In\r\n                  </Link>\r\n                </li>\r\n              }\r\n            >\r\n              <li>\r\n                <Button>\r\n                  <Link\r\n                    to=\"/carinventory\"\r\n                    className={`${classes.navbarItem} ${classes.psides}`}\r\n                  >\r\n                    My Cars\r\n                  </Link>\r\n                </Button>\r\n              </li>\r\n              <li>\r\n                <Button>\r\n                  <Link\r\n                    to=\"\"\r\n                    className={`${classes.navbarItem} ${classes.psides}`}\r\n                  >\r\n                    Contact Us\r\n                  </Link>\r\n                </Button>\r\n              </li>\r\n              <li>\r\n                <Button>\r\n                  <Link\r\n                    to=\"About\"\r\n                    className={`${classes.navbarItem} ${classes.psides}`}\r\n                  >\r\n                    About Us\r\n                  </Link>\r\n                </Button>\r\n              </li>\r\n            </AuthCheck>\r\n          </Suspense>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Navbar } from '../../components/Navbar'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\ninterface Bananas {\r\n    title: string;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    background: {\r\n        backgroundImage: `linear-gradient(rgba(0, 49, 85) 0%, rgba(121,147,163,1) 47%, rgba(249,249,249,1) 100%)`,\r\n        width: '100%',\r\n        height: '90%',\r\n        backgroundPosition: 'center',\r\n        position: 'absolute',\r\n        zIndex: -1,\r\n    },\r\n    main_text: {\r\n        textAlign: 'center',\r\n        position: 'relative',\r\n        top: '40%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        color: 'white',\r\n    },\r\n    button_text: {\r\n        color: 'white',\r\n        textDecoration: 'none',\r\n    },\r\n})\r\n\r\nexport const Home = ( props: Bananas ) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className={`${classes.background}`}>\r\n            <div className={classes.main_text}>\r\n                <h1>{ props.title }</h1>\r\n                <Button>\r\n                    <Link to='/carinventory' className={classes.button_text}>Take me to my car inventory</Link>\r\n                </Button>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","let token = 'cc69f79905fc670f5303b2bc1868a2f1a5cf5eeb83d343ca'\r\n\r\nexport const server_calls = {\r\n    get: async () => {\r\n        const response = await fetch(` https://ionized-low-centaur.glitch.me/api/cars`,{\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': `Bearer ${token}`\r\n            }\r\n        });\r\n\r\n        if (!response.ok){\r\n            throw new Error('Failed to fetch data from server')\r\n        }\r\n\r\n        return await response.json()\r\n    },\r\n\r\n    create: async(data: any = {}) => {\r\n        const response = await fetch(` https://ionized-low-centaur.glitch.me/api/cars`,{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        if(!response.ok){\r\n            throw new Error('Failed to Create new data on server')\r\n        }\r\n\r\n        return await response.json()\r\n    },\r\n    update: async (id:string, data:any = {}) => {\r\n        const response = await fetch(` https://ionized-low-centaur.glitch.me/api/cars/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    },\r\n    delete: async(id:string) => {\r\n        const response = await fetch(` https://ionized-low-centaur.glitch.me/api/cars/${id}`,{\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-access-token': `Bearer ${token}`\r\n            }\r\n        })\r\n    }\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst rootSlice = createSlice({\r\n    name: \"root\",\r\n    initialState: {\r\n        make: 'Make',\r\n        model: 'Model',\r\n        condition: 'Condition',\r\n        year: 'Year',\r\n    },\r\n    reducers: {\r\n        chooseMake: (state, action) => { state.make = action.payload},\r\n        chooseModel: (state, action) => { state.model = action.payload},\r\n        chooseCondition: (state, action) => { state.condition = action.payload},\r\n        chooseYear: (state, action) => { state.year = action.payload},\r\n    }\r\n})\r\n\r\n// Export Reducer\r\nexport const reducer = rootSlice.reducer;\r\nexport const { chooseMake, chooseModel, chooseCondition, chooseYear } = rootSlice.actions;\r\n\r\n// A reducer is like an event listener that handles the events based on the kind of event it receives","import React, { forwardRef } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\n\r\ninterface inputType{\r\n    name: string;\r\n    placeholder: string;\r\n}\r\n\r\nexport const Input = forwardRef((props:inputType, ref) => {\r\n    return (\r\n      <TextField\r\n        variant=\"outlined\"\r\n        margin=\"normal\"\r\n        inputRef={ref}\r\n        fullWidth\r\n        type='text'\r\n        {...props}\r\n      ></TextField>\r\n    );\r\n  });","import React from 'react'\r\nimport { useDispatch, useSelector, useStore } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport {chooseMake, chooseModel, chooseCondition, chooseYear  } from '../../redux/slices/RootSlice';\r\nimport { Input } from '../SharedComponents/Input';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { server_calls } from '../../api';\r\n\r\nimport { useGetData } from '../../custom-hooks';\r\n\r\n\r\ninterface CarFormProps {\r\n    id?:string;\r\n    data?:{}\r\n}\r\n\r\ninterface CarState {\r\n    make: string;\r\n    model: string;\r\n    condition: string;\r\n    year: string;\r\n}\r\n\r\nexport const CarForm = (props:CarFormProps) => {\r\n    const dispatch = useDispatch();\r\n    // let { carData, getData } = useGetData();\r\n    const store = useStore();\r\n    const make = useSelector<CarState>(state => state.make);\r\n    const { register, handleSubmit } = useForm({ })\r\n\r\n    const onSubmit = (data:any, event:any) => {\r\n        console.log(props.id)\r\n        // The ! is for strictly typed Typescript stuff\r\n        if(props.id!){\r\n            server_calls.update(props.id!, data);\r\n            console.log(`Updated:${data} ${props.id}`);\r\n            console.log(data);\r\n            setTimeout( () => {window.location.reload()}, 1000);\r\n            event.target.reset();\r\n        } else {\r\n            // Dispatch basically updates our state / Redux store\r\n            dispatch(chooseMake(data.make));\r\n            dispatch(chooseModel(data.model));\r\n            dispatch(chooseCondition(data.condition));\r\n            dispatch(chooseYear(data.year));\r\n            server_calls.create(store.getState());\r\n            setTimeout( () => {window.location.reload()}, 1000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit = {handleSubmit(onSubmit)}>\r\n                <div>\r\n                    <label htmlFor=\"make\">Car Make</label>\r\n                    <Input {...register('make')} name=\"make\" placeholder='make'/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"model\">Model</label>\r\n                    <Input {...register('model')} name=\"model\" placeholder='model'/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"condition\">Condition</label>\r\n                    <Input {...register('condition')} name=\"condition\" placeholder=\"car's condition\"/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"year\">Year</label>\r\n                    <Input {...register('year')} name=\"year\" placeholder='year'/>\r\n                </div>\r\n                <Button type='submit'>Submit</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","// Need to figure out params and selection issues\r\n\r\nimport { useState } from 'react';\r\nimport { DataGrid, GridColDef } from '@material-ui/data-grid';\r\nimport { useGetData } from '../../custom-hooks';\r\nimport { server_calls } from '../../api';\r\nimport { Button, Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle } from '@material-ui/core';\r\nimport { CarForm } from '../CarForm';\r\n\r\n\r\n\r\n\r\nconst columns: GridColDef[] = [\r\n    { field: 'id', headerName: 'ID', width: 90, hide: true },\r\n    { field: 'make', headerName: 'Make', flex: 1 },\r\n    { field: 'model', headerName: 'Model', flex: 1 },\r\n    { field: 'condition', headerName: 'Car Condition', flex: 2 },\r\n    { field: 'year', headerName: 'Year', flex: 1 },\r\n];\r\n\r\ninterface gridData {\r\n    data: {\r\n        id?:string\r\n    }\r\n}\r\n\r\nexport const DataTable = () => {\r\n\r\n    let { carData, getData } = useGetData();\r\n    let [open, setOpen] = useState(false);\r\n    let [gridData, setData] = useState<gridData>({data:{}});\r\n    const [selectionModel, setSelectionModel] = useState<any>([]);\r\n    \r\n\r\n    let handleOpen = () => {\r\n        setOpen(true)\r\n    };\r\n    let handleClose = () => {\r\n        setOpen(false)\r\n    };\r\n\r\n    let deleteData = () => {\r\n        server_calls.delete(selectionModel);\r\n        // console.log(gridData.data.id);\r\n        getData();\r\n        setTimeout( () => { window.location.reload(); }, 1000)\r\n    }\r\n\r\n    console.log(gridData.data.id!);\r\n    console.log(`testing for data ${carData}`)\r\n\r\n\r\n    return (\r\n        <div style={{ height: 400, width: '100%' }}>\r\n            <h2>My Cars</h2>\r\n\r\n        <DataGrid rows={ carData } columns={ columns } pageSize={ 5 } checkboxSelection={true} \r\n        onSelectionModelChange={ (item) => {\r\n            setSelectionModel(item)\r\n          }}\r\n        />\r\n\r\n        <Button onClick={handleOpen}>Update</Button>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={deleteData}>Delete</Button>\r\n\r\n        {/* Dialog pop-up */}\r\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Update Car {selectionModel}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>Update Car</DialogContentText>\r\n                    <CarForm id={selectionModel!}/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">Cancel</Button>\r\n                <Button onClick={handleClose} color=\"primary\">Done</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { server_calls } from '../api'\r\n\r\nexport const useGetData = () => {\r\n    const [carData, setData] = useState<[]>([]);\r\n\r\n    async function handleDataFetch(){\r\n        const result = await server_calls.get();\r\n        setData(result)\r\n    }\r\n\r\n    useEffect( () => {\r\n        handleDataFetch();\r\n    }, [])\r\n\r\n        return {carData, getData:handleDataFetch}\r\n}","// Update styling here\r\n\r\nimport React, {useState}  from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Paper} from '@material-ui/core';\r\nimport { Drawer as MUIDrawer, \r\n    ListItem, \r\n    List, \r\n    ListItemIcon, \r\n    ListItemText, \r\n    Theme,\r\n    useTheme, \r\n    makeStyles, \r\n    createStyles,\r\n    AppBar,\r\n    Toolbar,\r\n    IconButton,\r\n    Typography,\r\n    Divider,\r\n    Button,\r\n    Dialog, \r\n    DialogActions, \r\n    DialogContent,\r\n    DialogContentText, \r\n    DialogTitle  ,\r\n} from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport clsx from 'clsx'; // This allows us to conditionally apply classes\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport { DataTable } from '../DataTable';\r\nimport { CarForm } from '../CarForm'\r\n\r\n\r\ninterface CarInvProps{\r\n    history: RouteComponentProps[\"history\"];\r\n    location: RouteComponentProps['location'];\r\n    match: RouteComponentProps['match'];\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    main: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))`,\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'absolute',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontFamily: \"Georgia, 'Times New Roman', Times, serif\",\r\n    },\r\n    h3: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        color: 'black',\r\n    },\r\n    text: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        color: '#4ef3b4',\r\n        textDecoration: 'none',\r\n        backgroundColor: 'white',\r\n        width: '60%',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    logo:{\r\n        margin: '0 0 0 0.45em',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    logo_a: {\r\n        color: '#4ef3b4',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    logo_navigation: {\r\n        listStyle: 'none',\r\n        textTransform: 'uppercase',\r\n        textDecoration: 'none',\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    column: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    // begin comment\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    // end comment\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    // begin comment\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n    // end comment\r\n    toolbar:{\r\n      display: 'flex',\r\n      backgroundColor: '#003155',\r\n      color: 'white',\r\n      fontFamily: \"Georgia, 'Times New Roman', Times, serif\",\r\n    },\r\n    toolbar_button: {\r\n      marginLeft: 'auto',\r\n      color: 'white',\r\n      fontFamily: \"Georgia, 'Times New Roman', Times, serif\",\r\n    },\r\n    margin_top: {\r\n        marginTop: '50px',\r\n    },\r\n    font: {\r\n        fontFamily: \"Georgia, 'Times New Roman', Times, serif\",\r\n    },\r\n    leftMargin: {\r\n        marginLeft: '0px',\r\n    },\r\n}))\r\n\r\n\r\nexport const CarInventory = withRouter(( props:CarInvProps ) => {\r\n    console.log(props);\r\n    const { history } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false)\r\n    };\r\n\r\n    const handleDialogClickOpen = () => {\r\n        setDialogOpen(true)\r\n    };\r\n\r\n    const handleDialogClickClose = () => {\r\n        setDialogOpen(false)\r\n    };\r\n\r\n    const itemsList = [\r\n        {\r\n            text: 'Home',\r\n            onClick: () => history.push('/')\r\n        },\r\n        {\r\n            text: 'Sign In',\r\n            onClick: () => history.push('/signin')\r\n        },\r\n        {\r\n            text: 'About',\r\n            onClick: () => history.push('/about')\r\n        },\r\n        {\r\n            text: 'car',\r\n            onClick: () => history.push('/car')\r\n        },\r\n    ]\r\n\r\n    \r\n\r\n    return (\r\n        <div className={`${classes.root} ${classes.column}`}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={clsx(classes.appBar, {[classes.appBarShift]: open })}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton color=\"inherit\" aria-label=\"open-drawer\" onClick={handleDrawerOpen} edge=\"start\" className={clsx(classes.menuButton, open && classes.hide)}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.font} noWrap>\r\n                        My Cars\r\n                    </Typography>\r\n                    <Button className={classes.toolbar_button} onClick={handleDialogClickOpen}>Add A New Car!</Button>\r\n\r\n                    {/* Dialog Pop Up */}\r\n                    <Dialog open={dialogOpen} onClose={handleDialogClickClose} aria-labelledby=\"form-dialog-title\">\r\n                        <DialogTitle id=\"form-dialog-title\">Add New car</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText></DialogContentText>\r\n                            <CarForm />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleDialogClickClose} color=\"primary\">Cancel</Button>\r\n                            <Button onClick={handleDialogClickOpen} color=\"primary\">Done</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    {/* End dialog pop-up */}\r\n                </Toolbar>\r\n            </AppBar>\r\n            <MUIDrawer className={classes.drawer} variant=\"persistent\" anchor=\"left\" open={open} classes={{paper: classes.drawerPaper,}}>\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    {itemsList.map((item, index) => {\r\n                        const { text, onClick } = item;\r\n                        return (\r\n                            <ListItem button key={text} onClick={onClick}>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </MUIDrawer>\r\n            <main className={`${clsx(classes.content, {[classes.contentShift]: open,})} ${classes.leftMargin}`}>\r\n                <div className={classes.drawerHeader} />\r\n                    <DataTable />\r\n            </main>\r\n        </div>\r\n    )\r\n});\r\n","import React from 'react'\r\nimport { Navbar } from '../Navbar'\r\n\r\nexport const Car = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            hey i am car\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Navbar } from '../Navbar'\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            yowdy\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport firebase from 'firebase/app';\r\nimport { useAuth, AuthCheck } from 'reactfire';\r\nimport 'firebase/auth';\r\nimport { Input } from '../SharedComponents/Input';\r\nimport { Container, Button, makeStyles, Typography, Snackbar,  } from '@material-ui/core';\r\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { Navbar } from '../../components'\r\n\r\nconst Alert = (props:AlertProps) => {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    googleButton:{\r\n        backgroundColor: 'rgb(66,133,244)',\r\n        marginTop: '2em',\r\n        padding: '0',\r\n        color: 'white',\r\n        height: '50px',\r\n        width: '240px',\r\n        border: 'none',\r\n        textAlign: 'center',\r\n        boxShadow: 'rgb(0 0 0 / 25%) 0px 2px 4px 0px',\r\n        fontSize: '16px',\r\n        lineHeight: '48px',\r\n        display: 'block',\r\n        borderRadius: '1px',\r\n        fontFamily: 'Roboto, arial, sans-serif',\r\n        cursor: 'pointer'\r\n    },\r\n    googleLogo:{\r\n        width: '48px',\r\n        height: '48px',\r\n        display: 'block'\r\n    },\r\n    typographyStyle: {\r\n        fontFamily: 'Roboto, arial, sans-serif;',\r\n        textAlign: 'center',\r\n        fontSize: '2em'\r\n    },\r\n    containerStyle: {\r\n        marginTop: '2em'\r\n    },\r\n    snackBar: {\r\n        color: 'white',\r\n        backgroundColor: '#4caf50'\r\n    }\r\n\r\n});\r\n\r\ninterface SignInProps{\r\n    history: RouteComponentProps[\"history\"];\r\n    location: RouteComponentProps['location'];\r\n    match: RouteComponentProps['match'];\r\n  }\r\n\r\nexport const SignIn = withRouter( (props:SignInProps) => {\r\n\r\n    const auth = useAuth();\r\n    const classes = useStyles();\r\n    const { history } = props;\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleSnackOpen = () => {\r\n        setOpen(true)\r\n    };\r\n\r\n    const handleSnackClose = (event?: React.SyntheticEvent, reason?:string) => {\r\n        if(reason === 'clickaway'){\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n        history.push('/')\r\n    }\r\n\r\n    const sign_in = async () => {\r\n        const response = await auth.signInWithPopup( new firebase.auth.GoogleAuthProvider());\r\n        if(response.user){\r\n            handleSnackOpen();\r\n        }\r\n    };\r\n\r\n    const sign_out = async () => {\r\n        await auth.signOut();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <Container maxWidth = 'sm' className={classes.containerStyle}>\r\n                <Typography className={classes.typographyStyle}>Sign In Below</Typography>\r\n                <form>\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <Input name=\"email\" placeholder=\"Place Email Here\" />\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <Input name=\"password\" placeholder=\"Place Password Here\" />\r\n                    </div>\r\n                    <Button type=\"submit\" variant='contained' color='primary'>Submit</Button>\r\n                </form>\r\n\r\n                <AuthCheck fallback={\r\n                    <Button className={classes.googleButton} onClick={sign_in}>Sign In With Google</Button>\r\n                }>\r\n                    <Button variant='contained' color='secondary' onClick={sign_out}>Sign Out</Button>\r\n                </AuthCheck>\r\n                <Snackbar message={'Success'} open={open} autoHideDuration={6000} onClose={handleSnackClose}>\r\n                    <Alert onClose={handleSnackClose} severity=\"success\">\r\n                        Successful Sign In - Redirect in 6 seconds\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Container>\r\n        </div>\r\n    )\r\n});\r\n","import { configureStore} from '@reduxjs/toolkit';\r\nimport { reducer } from './slices/RootSlice';\r\n\r\nexport const store = configureStore({\r\n    reducer,\r\n    devTools: true\r\n})\r\n\r\n// Redux Store exists as it's own kind of state that we can call and update from multiple components","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { FirebaseAppProvider,AuthCheck } from 'reactfire';\r\nimport { Home, CarInventory, Car, About,SignIn  } from './components' \r\nimport './styles.css'\r\nimport { firebaseConfig } from './firebaseConfig'\r\nimport 'firebase/auth';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store'\r\n\r\n\r\nconst temp_props = \"Andy's car app\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <FirebaseAppProvider firebaseConfig={firebaseConfig} suspense={true}>\r\n    <Provider store={store}>\r\n    <Router>\r\n      <Switch>\r\n\r\n\r\n        <Route exact path=\"/\">\r\n          <Home title={temp_props}/>\r\n        </Route>\r\n        <Route path='/carinventory'>\r\n          <CarInventory></CarInventory>\r\n        </Route>\r\n        <Route path='/car'>\r\n          <Car></Car>\r\n        </Route>\r\n        <Route path='/about'>\r\n          <About></About>\r\n        </Route>\r\n        <Route path='/signin'>\r\n          <SignIn></SignIn>\r\n        </Route>\r\n\r\n\r\n\r\n      </Switch>\r\n    </Router>\r\n    </Provider>\r\n    </FirebaseAppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// Import the functions you need from the SDKs you need\r\n// import { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyCkaWLJ5MsRWzjos12Pyu32aWJWJsf9L4Q\",\r\n  authDomain: \"carap-b5d9b.firebaseapp.com\",\r\n  projectId: \"carap-b5d9b\",\r\n  storageBucket: \"carap-b5d9b.appspot.com\",\r\n  messagingSenderId: \"441564719128\",\r\n  appId: \"1:441564719128:web:e815f6188b228e1efd7b6d\"\r\n};\r\n  // Initialize Firebase\r\n  // const app = initializeApp(firebaseConfig);"],"sourceRoot":""}