{"code":"(this[\"webpackJsonpreact-pb\"]=this[\"webpackJsonpreact-pb\"]||[]).push([[10],{252:function(t,e,i){\"use strict\";i.r(e);var s,r=i(13),n=(i(241),i(9)),o=i(34),a=i(82),c=i(78),u=function(){function t(t,e,i,s){this.client=t,this.storage=e,this.storageCache=i,this.logger=s}return t.prototype.isCachedDataFresh=function(t,e){if(!e)return this.logger.debug(\"Config fetch cache check. Cache unpopulated.\"),!1;var i=Date.now()-e,s=i<=t;return this.logger.debug(\"Config fetch cache check. Cache age millis: \"+i+\". Cache max age millis (minimumFetchIntervalMillis setting): \"+t+\". Is cache hit: \"+s+\".\"),s},t.prototype.fetch=function(t){return Object(n.e)(this,void 0,void 0,(function(){var e,i,s,r,o;return Object(n.g)(this,(function(n){switch(n.label){case 0:return[4,Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(),this.storage.getLastSuccessfulFetchResponse()])];case 1:return e=n.sent(),i=e[0],(s=e[1])&&this.isCachedDataFresh(t.cacheMaxAgeMillis,i)?[2,s]:(t.eTag=s&&s.eTag,[4,this.client.fetch(t)]);case 2:return r=n.sent(),o=[this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())],200===r.status&&o.push(this.storage.setLastSuccessfulFetchResponse(r)),[4,Promise.all(o)];case 3:return n.sent(),[2,r]}}))}))},t}(),h=((s={})[\"registration-window\"]=\"Undefined window object. This SDK only supports usage in a browser environment.\",s[\"registration-project-id\"]=\"Undefined project identifier. Check Firebase app initialization.\",s[\"registration-api-key\"]=\"Undefined API key. Check Firebase app initialization.\",s[\"registration-app-id\"]=\"Undefined app identifier. Check Firebase app initialization.\",s[\"storage-open\"]=\"Error thrown when opening storage. Original error: {$originalErrorMessage}.\",s[\"storage-get\"]=\"Error thrown when reading from storage. Original error: {$originalErrorMessage}.\",s[\"storage-set\"]=\"Error thrown when writing to storage. Original error: {$originalErrorMessage}.\",s[\"storage-delete\"]=\"Error thrown when deleting from storage. Original error: {$originalErrorMessage}.\",s[\"fetch-client-network\"]=\"Fetch client failed to connect to a network. Check Internet connection. Original error: {$originalErrorMessage}.\",s[\"fetch-timeout\"]='The config fetch request timed out.  Configure timeout using \"fetchTimeoutMillis\" SDK setting.',s[\"fetch-throttle\"]='The config fetch request timed out while in an exponential backoff state. Configure timeout using \"fetchTimeoutMillis\" SDK setting. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',s[\"fetch-client-parse\"]=\"Fetch client could not parse response. Original error: {$originalErrorMessage}.\",s[\"fetch-status\"]=\"Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.\",s),l=new o.b(\"remoteconfig\",\"Remote Config\",h);var g=function(){function t(t,e,i,s,r,n){this.firebaseInstallations=t,this.sdkVersion=e,this.namespace=i,this.projectId=s,this.apiKey=r,this.appId=n}return t.prototype.fetch=function(t){return Object(n.e)(this,void 0,void 0,(function(){var e,i,s,r,o,a,c,u,h,g,f,p,d,m,v,b,_,y,w;return Object(n.g)(this,(function(n){switch(n.label){case 0:return[4,Promise.all([this.firebaseInstallations.getId(),this.firebaseInstallations.getToken()])];case 1:e=n.sent(),i=e[0],s=e[1],r=window.FIREBASE_REMOTE_CONFIG_URL_BASE||\"https://firebaseremoteconfig.googleapis.com\",o=r+\"/v1/projects/\"+this.projectId+\"/namespaces/\"+this.namespace+\":fetch?key=\"+this.apiKey,a={\"Content-Type\":\"application/json\",\"Content-Encoding\":\"gzip\",\"If-None-Match\":t.eTag||\"*\"},c={sdk_version:this.sdkVersion,app_instance_id:i,app_instance_id_token:s,app_id:this.appId,language_code:(void 0===C&&(C=navigator),C.languages&&C.languages[0]||C.language)},u={method:\"POST\",headers:a,body:JSON.stringify(c)},h=fetch(o,u),g=new Promise((function(e,i){t.signal.addEventListener((function(){var t=new Error(\"The operation was aborted.\");t.name=\"AbortError\",i(t)}))})),n.label=2;case 2:return n.trys.push([2,5,,6]),[4,Promise.race([h,g])];case 3:return n.sent(),[4,h];case 4:return f=n.sent(),[3,6];case 5:throw p=n.sent(),d=\"fetch-client-network\",\"AbortError\"===p.name&&(d=\"fetch-timeout\"),l.create(d,{originalErrorMessage:p.message});case 6:if(m=f.status,v=f.headers.get(\"ETag\")||void 0,200!==f.status)return[3,11];y=void 0,n.label=7;case 7:return n.trys.push([7,9,,10]),[4,f.json()];case 8:return y=n.sent(),[3,10];case 9:throw w=n.sent(),l.create(\"fetch-client-parse\",{originalErrorMessage:w.message});case 10:b=y.entries,_=y.state,n.label=11;case 11:if(\"INSTANCE_STATE_UNSPECIFIED\"===_?m=500:\"NO_CHANGE\"===_?m=304:\"NO_TEMPLATE\"!==_&&\"EMPTY_CONFIG\"!==_||(b={}),304!==m&&200!==m)throw l.create(\"fetch-status\",{httpStatus:m});return[2,{status:m,eTag:v,config:b}]}var C}))}))},t}(),f=function(){function t(){this.listeners=[]}return t.prototype.addEventListener=function(t){this.listeners.push(t)},t.prototype.abort=function(){this.listeners.forEach((function(t){return t()}))},t}(),p=[\"1\",\"true\",\"t\",\"yes\",\"y\",\"on\"],d=function(){function t(t,e){void 0===e&&(e=\"\"),this._source=t,this._value=e}return t.prototype.asString=function(){return this._value},t.prototype.asBoolean=function(){return\"static\"!==this._source&&p.indexOf(this._value.toLowerCase())>=0},t.prototype.asNumber=function(){if(\"static\"===this._source)return 0;var t=Number(this._value);return isNaN(t)&&(t=0),t},t.prototype.getSource=function(){return this._source},t}(),m=function(){function t(t,e,i,s,r){this.app=t,this._client=e,this._storageCache=i,this._storage=s,this._logger=r,this._isInitializationComplete=!1,this.settings={fetchTimeoutMillis:6e4,minimumFetchIntervalMillis:432e5},this.defaultConfig={}}return t.prototype.setLogLevel=function(t){switch(t){case\"debug\":this._logger.logLevel=a.a.DEBUG;break;case\"silent\":this._logger.logLevel=a.a.SILENT;break;default:this._logger.logLevel=a.a.ERROR}},Object.defineProperty(t.prototype,\"fetchTimeMillis\",{get:function(){return this._storageCache.getLastSuccessfulFetchTimestampMillis()||-1},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"lastFetchStatus\",{get:function(){return this._storageCache.getLastFetchStatus()||\"no-fetch-yet\"},enumerable:!1,configurable:!0}),t.prototype.activate=function(){return Object(n.e)(this,void 0,void 0,(function(){var t,e,i;return Object(n.g)(this,(function(s){switch(s.label){case 0:return[4,Promise.all([this._storage.getLastSuccessfulFetchResponse(),this._storage.getActiveConfigEtag()])];case 1:return t=s.sent(),e=t[0],i=t[1],e&&e.config&&e.eTag&&e.eTag!==i?[4,Promise.all([this._storageCache.setActiveConfig(e.config),this._storage.setActiveConfigEtag(e.eTag)])]:[2,!1];case 2:return s.sent(),[2,!0]}}))}))},t.prototype.ensureInitialized=function(){var t=this;return this._initializePromise||(this._initializePromise=this._storageCache.loadFromStorage().then((function(){t._isInitializationComplete=!0}))),this._initializePromise},t.prototype.fetch=function(){return Object(n.e)(this,void 0,void 0,(function(){var t,e,i,s=this;return Object(n.g)(this,(function(r){switch(r.label){case 0:t=new f,setTimeout((function(){return Object(n.e)(s,void 0,void 0,(function(){return Object(n.g)(this,(function(e){return t.abort(),[2]}))}))}),this.settings.fetchTimeoutMillis),r.label=1;case 1:return r.trys.push([1,4,,6]),[4,this._client.fetch({cacheMaxAgeMillis:this.settings.minimumFetchIntervalMillis,signal:t})];case 2:return r.sent(),[4,this._storageCache.setLastFetchStatus(\"success\")];case 3:return r.sent(),[3,6];case 4:return e=r.sent(),c=\"fetch-throttle\",i=(a=e)instanceof o.c&&-1!==a.code.indexOf(c)?\"throttle\":\"failure\",[4,this._storageCache.setLastFetchStatus(i)];case 5:throw r.sent(),e;case 6:return[2]}var a,c}))}))},t.prototype.fetchAndActivate=function(){return Object(n.e)(this,void 0,void 0,(function(){return Object(n.g)(this,(function(t){switch(t.label){case 0:return[4,this.fetch()];case 1:return t.sent(),[2,this.activate()]}}))}))},t.prototype.getAll=function(){var t=this;return function(t,e){void 0===t&&(t={});void 0===e&&(e={});return Object.keys(Object(n.a)(Object(n.a)({},t),e))}(this._storageCache.getActiveConfig(),this.defaultConfig).reduce((function(e,i){return e[i]=t.getValue(i),e}),{})},t.prototype.getBoolean=function(t){return this.getValue(t).asBoolean()},t.prototype.getNumber=function(t){return this.getValue(t).asNumber()},t.prototype.getString=function(t){return this.getValue(t).asString()},t.prototype.getValue=function(t){this._isInitializationComplete||this._logger.debug('A value was requested for key \"'+t+'\" before SDK initialization completed. Await on ensureInitialized if the intent was to get a previously activated value.');var e=this._storageCache.getActiveConfig();return e&&void 0!==e[t]?new d(\"remote\",e[t]):this.defaultConfig&&void 0!==this.defaultConfig[t]?new d(\"default\",String(this.defaultConfig[t])):(this._logger.debug('Returning static value for key \"'+t+'\". Define a default or remote value if this is unintentional.'),new d(\"static\"))},t}();function v(t,e){var i=t.target.error||void 0;return l.create(e,{originalErrorMessage:i&&i.message})}var b=\"app_namespace_store\";var _=function(){function t(t,e,i,s){void 0===s&&(s=new Promise((function(t,e){var i=indexedDB.open(\"firebase_remote_config\",1);i.onerror=function(t){e(v(t,\"storage-open\"))},i.onsuccess=function(e){t(e.target.result)},i.onupgradeneeded=function(t){var e=t.target.result;0===t.oldVersion&&e.createObjectStore(b,{keyPath:\"compositeKey\"})}}))),this.appId=t,this.appName=e,this.namespace=i,this.openDbPromise=s}return t.prototype.getLastFetchStatus=function(){return this.get(\"last_fetch_status\")},t.prototype.setLastFetchStatus=function(t){return this.set(\"last_fetch_status\",t)},t.prototype.getLastSuccessfulFetchTimestampMillis=function(){return this.get(\"last_successful_fetch_timestamp_millis\")},t.prototype.setLastSuccessfulFetchTimestampMillis=function(t){return this.set(\"last_successful_fetch_timestamp_millis\",t)},t.prototype.getLastSuccessfulFetchResponse=function(){return this.get(\"last_successful_fetch_response\")},t.prototype.setLastSuccessfulFetchResponse=function(t){return this.set(\"last_successful_fetch_response\",t)},t.prototype.getActiveConfig=function(){return this.get(\"active_config\")},t.prototype.setActiveConfig=function(t){return this.set(\"active_config\",t)},t.prototype.getActiveConfigEtag=function(){return this.get(\"active_config_etag\")},t.prototype.setActiveConfigEtag=function(t){return this.set(\"active_config_etag\",t)},t.prototype.getThrottleMetadata=function(){return this.get(\"throttle_metadata\")},t.prototype.setThrottleMetadata=function(t){return this.set(\"throttle_metadata\",t)},t.prototype.deleteThrottleMetadata=function(){return this.delete(\"throttle_metadata\")},t.prototype.get=function(t){return Object(n.e)(this,void 0,void 0,(function(){var e,i=this;return Object(n.g)(this,(function(s){switch(s.label){case 0:return[4,this.openDbPromise];case 1:return e=s.sent(),[2,new Promise((function(s,r){var n=e.transaction([b],\"readonly\").objectStore(b),o=i.createCompositeKey(t);try{var a=n.get(o);a.onerror=function(t){r(v(t,\"storage-get\"))},a.onsuccess=function(t){var e=t.target.result;s(e?e.value:void 0)}}catch(c){r(l.create(\"storage-get\",{originalErrorMessage:c&&c.message}))}}))]}}))}))},t.prototype.set=function(t,e){return Object(n.e)(this,void 0,void 0,(function(){var i,s=this;return Object(n.g)(this,(function(r){switch(r.label){case 0:return[4,this.openDbPromise];case 1:return i=r.sent(),[2,new Promise((function(r,n){var o=i.transaction([b],\"readwrite\").objectStore(b),a=s.createCompositeKey(t);try{var c=o.put({compositeKey:a,value:e});c.onerror=function(t){n(v(t,\"storage-set\"))},c.onsuccess=function(){r()}}catch(u){n(l.create(\"storage-set\",{originalErrorMessage:u&&u.message}))}}))]}}))}))},t.prototype.delete=function(t){return Object(n.e)(this,void 0,void 0,(function(){var e,i=this;return Object(n.g)(this,(function(s){switch(s.label){case 0:return[4,this.openDbPromise];case 1:return e=s.sent(),[2,new Promise((function(s,r){var n=e.transaction([b],\"readwrite\").objectStore(b),o=i.createCompositeKey(t);try{var a=n.delete(o);a.onerror=function(t){r(v(t,\"storage-delete\"))},a.onsuccess=function(){s()}}catch(c){r(l.create(\"storage-delete\",{originalErrorMessage:c&&c.message}))}}))]}}))}))},t.prototype.createCompositeKey=function(t){return[this.appId,this.appName,this.namespace,t].join()},t}(),y=function(){function t(t){this.storage=t}return t.prototype.getLastFetchStatus=function(){return this.lastFetchStatus},t.prototype.getLastSuccessfulFetchTimestampMillis=function(){return this.lastSuccessfulFetchTimestampMillis},t.prototype.getActiveConfig=function(){return this.activeConfig},t.prototype.loadFromStorage=function(){return Object(n.e)(this,void 0,void 0,(function(){var t,e,i,s,r,o;return Object(n.g)(this,(function(n){switch(n.label){case 0:return t=this.storage.getLastFetchStatus(),e=this.storage.getLastSuccessfulFetchTimestampMillis(),i=this.storage.getActiveConfig(),[4,t];case 1:return(s=n.sent())&&(this.lastFetchStatus=s),[4,e];case 2:return(r=n.sent())&&(this.lastSuccessfulFetchTimestampMillis=r),[4,i];case 3:return(o=n.sent())&&(this.activeConfig=o),[2]}}))}))},t.prototype.setLastFetchStatus=function(t){return this.lastFetchStatus=t,this.storage.setLastFetchStatus(t)},t.prototype.setLastSuccessfulFetchTimestampMillis=function(t){return this.lastSuccessfulFetchTimestampMillis=t,this.storage.setLastSuccessfulFetchTimestampMillis(t)},t.prototype.setActiveConfig=function(t){return this.activeConfig=t,this.storage.setActiveConfig(t)},t}();function w(t,e){return new Promise((function(i,s){var r=Math.max(e-Date.now(),0),n=setTimeout(i,r);t.addEventListener((function(){clearTimeout(n),s(l.create(\"fetch-throttle\",{throttleEndTimeMillis:e}))}))}))}var C,T=function(){function t(t,e){this.client=t,this.storage=e}return t.prototype.fetch=function(t){return Object(n.e)(this,void 0,void 0,(function(){var e;return Object(n.g)(this,(function(i){switch(i.label){case 0:return[4,this.storage.getThrottleMetadata()];case 1:return e=i.sent()||{backoffCount:0,throttleEndTimeMillis:Date.now()},[2,this.attemptFetch(t,e)]}}))}))},t.prototype.attemptFetch=function(t,e){var i=e.throttleEndTimeMillis,s=e.backoffCount;return Object(n.e)(this,void 0,void 0,(function(){var e,r,a;return Object(n.g)(this,(function(n){switch(n.label){case 0:return[4,w(t.signal,i)];case 1:n.sent(),n.label=2;case 2:return n.trys.push([2,5,,7]),[4,this.client.fetch(t)];case 3:return e=n.sent(),[4,this.storage.deleteThrottleMetadata()];case 4:return n.sent(),[2,e];case 5:if(!function(t){if(!(t instanceof o.c)||!t.customData)return!1;var e=Number(t.customData.httpStatus);return 429===e||500===e||503===e||504===e}(r=n.sent()))throw r;return a={throttleEndTimeMillis:Date.now()+Object(o.j)(s),backoffCount:s+1},[4,this.storage.setThrottleMetadata(a)];case 6:return n.sent(),[2,this.attemptFetch(t,a)];case 7:return[2]}}))}))},t}(),S=\"@firebase/remote-config\";(C=r.a).INTERNAL.registerComponent(new c.a(\"remoteConfig\",(function(t,e){var i=e.instanceIdentifier,s=t.getProvider(\"app\").getImmediate(),r=t.getProvider(\"installations\").getImmediate();if(\"undefined\"===typeof window)throw l.create(\"registration-window\");var n=s.options,o=n.projectId,c=n.apiKey,h=n.appId;if(!o)throw l.create(\"registration-project-id\");if(!c)throw l.create(\"registration-api-key\");if(!h)throw l.create(\"registration-app-id\");i=i||\"firebase\";var f=new _(h,s.name,i),p=new y(f),d=new a.b(S);d.logLevel=a.a.ERROR;var v=new g(r,C.SDK_VERSION,i,o,c,h),b=new T(v,f),w=new u(b,f,p,d),E=new m(s,w,p,f,d);return E.ensureInitialized(),E}),\"PUBLIC\").setMultipleInstances(!0)),C.registerVersion(S,\"0.1.43\")}}]);","name":"static/js/10.b3132924.chunk.js","map":{"version":3,"names":["this","push","module","__webpack_exports__","__webpack_require__","r","index_esm_a","index_esm","tslib_es6","util_dist_index_esm","logger_dist_index_esm","component_dist_index_esm","index_esm_CachingClient","CachingClient","client","storage","storageCache","logger","prototype","isCachedDataFresh","cacheMaxAgeMillis","lastSuccessfulFetchTimestampMillis","debug","cacheAgeMillis","Date","now","fetch","request","Object","_a","lastSuccessfulFetchResponse","response","storageOperations","_b","label","Promise","all","getLastSuccessfulFetchTimestampMillis","getLastSuccessfulFetchResponse","sent","eTag","setLastSuccessfulFetchTimestampMillis","status","setLastSuccessfulFetchResponse","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","index_esm_RestClient","RestClient","firebaseInstallations","sdkVersion","namespace","projectId","apiKey","appId","installationId","installationToken","urlBase","url","headers","requestBody","options","fetchPromise","timeoutPromise","originalError_1","errorCode","responseEtag","config","state","responseBody","originalError_2","getId","getToken","window","FIREBASE_REMOTE_CONFIG_URL_BASE","sdk_version","app_instance_id","app_instance_id_token","app_id","language_code","navigatorLanguage","navigator","languages","language","method","body","JSON","stringify","_resolve","reject","signal","addEventListener","error","Error","name","trys","race","create","originalErrorMessage","message","get","undefined","json","httpStatus","RemoteConfigAbortSignal","listeners","listener","abort","forEach","BOOLEAN_TRUTHY_VALUES","Value","_source","_value","asString","asBoolean","indexOf","toLowerCase","asNumber","num","Number","isNaN","getSource","index_esm_RemoteConfig","RemoteConfig","app","_client","_storageCache","_storage","_logger","_isInitializationComplete","settings","fetchTimeoutMillis","minimumFetchIntervalMillis","defaultConfig","setLogLevel","logLevel","DEBUG","SILENT","ERROR","defineProperty","enumerable","configurable","getLastFetchStatus","activate","activeConfigEtag","getActiveConfigEtag","setActiveConfig","setActiveConfigEtag","ensureInitialized","_this","_initializePromise","loadFromStorage","then","abortSignal","e_1","lastFetchStatus","setTimeout","setLastFetchStatus","e","code","fetchAndActivate","getAll","obj1","obj2","keys","getAllKeys","getActiveConfig","reduce","allConfigs","key","getValue","getBoolean","getNumber","getString","activeConfig","String","toFirebaseError","event","originalError","target","APP_NAMESPACE_STORE","index_esm_Storage","Storage","appName","openDbPromise","resolve","indexedDB","open","onerror","onsuccess","result","onupgradeneeded","db","oldVersion","createObjectStore","keyPath","set","timestamp","etag","getThrottleMetadata","setThrottleMetadata","metadata","deleteThrottleMetadata","delete","objectStore","transaction","compositeKey","createCompositeKey","value","put","join","index_esm_StorageCache","StorageCache","lastFetchStatusPromise","lastSuccessfulFetchTimestampMillisPromise","activeConfigPromise","timestampMillis","setAbortableTimeout","throttleEndTimeMillis","backoffMillis","Math","max","timeout","clearTimeout","firebaseInstance","index_esm_RetryingClient","RetryingClient","throttleMetadata","backoffCount","attemptFetch","customData","isRetriableError","index_esm_name","INTERNAL","registerComponent","container","instanceIdentifier","getProvider","getImmediate","installations","restClient","SDK_VERSION","retryingClient","cachingClient","remoteConfigInstance","setMultipleInstances","registerVersion"],"sources":["static/js/10.b3132924.chunk.js"],"mappings":"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"},"input":"(this[\"webpackJsonpreact-pb\"] = this[\"webpackJsonpreact-pb\"] || []).push([[10],{\n\n/***/ 252:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/@firebase/app/dist/index.esm.js\nvar index_esm = __webpack_require__(13);\n\n// EXTERNAL MODULE: ./node_modules/@firebase/installations/dist/index.esm.js\nvar dist_index_esm = __webpack_require__(241);\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(9);\n\n// EXTERNAL MODULE: ./node_modules/@firebase/util/dist/index.esm.js\nvar util_dist_index_esm = __webpack_require__(34);\n\n// EXTERNAL MODULE: ./node_modules/@firebase/logger/dist/index.esm.js\nvar logger_dist_index_esm = __webpack_require__(82);\n\n// EXTERNAL MODULE: ./node_modules/@firebase/component/dist/index.esm.js\nvar component_dist_index_esm = __webpack_require__(78);\n\n// CONCATENATED MODULE: ./node_modules/@firebase/remote-config/dist/index.esm.js\n\n\n\n\n\n\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\nvar index_esm_CachingClient = /** @class */function () {\n  function CachingClient(client, storage, storageCache, logger) {\n    this.client = client;\n    this.storage = storage;\n    this.storageCache = storageCache;\n    this.logger = logger;\n  }\n  /**\r\n   * Returns true if the age of the cached fetched configs is less than or equal to\r\n   * {@link Settings#minimumFetchIntervalInSeconds}.\r\n   *\r\n   * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n   * native Fetch API.\r\n   *\r\n   * <p>Visible for testing.\r\n   */\n  CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\n    // Cache can only be fresh if it's populated.\n    if (!lastSuccessfulFetchTimestampMillis) {\n      this.logger.debug('Config fetch cache check. Cache unpopulated.');\n      return false;\n    }\n    // Calculates age of cache entry.\n    var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\n    var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\n    this.logger.debug('Config fetch cache check.' + (\" Cache age millis: \" + cacheAgeMillis + \".\") + (\" Cache max age millis (minimumFetchIntervalMillis setting): \" + cacheMaxAgeMillis + \".\") + (\" Is cache hit: \" + isCachedDataFresh + \".\"));\n    return isCachedDataFresh;\n  };\n  CachingClient.prototype.fetch = function (request) {\n    return Object(tslib_es6[\"e\" /* __awaiter */])(this, void 0, void 0, function () {\n      var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\n      return Object(tslib_es6[\"g\" /* __generator */])(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(), this.storage.getLastSuccessfulFetchResponse()])];\n          case 1:\n            _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1];\n            // Exits early on cache hit.\n            if (lastSuccessfulFetchResponse && this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\n              return [2 /*return*/, lastSuccessfulFetchResponse];\n            }\n            // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\n            // that allows the caller to pass an ETag.\n            request.eTag = lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\n            return [4 /*yield*/, this.client.fetch(request)];\n          case 2:\n            response = _b.sent();\n            storageOperations = [\n            // Uses write-through cache for consistency with synchronous public API.\n            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())];\n            if (response.status === 200) {\n              // Caches response only if it has changed, ie non-304 responses.\n              storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\n            }\n            return [4 /*yield*/, Promise.all(storageOperations)];\n          case 3:\n            _b.sent();\n            return [2 /*return*/, response];\n        }\n      });\n    });\n  };\n  return CachingClient;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar index_esm_a;\nvar ERROR_DESCRIPTION_MAP = (index_esm_a = {}, index_esm_a[\"registration-window\" /* REGISTRATION_WINDOW */] = 'Undefined window object. This SDK only supports usage in a browser environment.', index_esm_a[\"registration-project-id\" /* REGISTRATION_PROJECT_ID */] = 'Undefined project identifier. Check Firebase app initialization.', index_esm_a[\"registration-api-key\" /* REGISTRATION_API_KEY */] = 'Undefined API key. Check Firebase app initialization.', index_esm_a[\"registration-app-id\" /* REGISTRATION_APP_ID */] = 'Undefined app identifier. Check Firebase app initialization.', index_esm_a[\"storage-open\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.', index_esm_a[\"storage-get\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.', index_esm_a[\"storage-set\" /* STORAGE_SET */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.', index_esm_a[\"storage-delete\" /* STORAGE_DELETE */] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.', index_esm_a[\"fetch-client-network\" /* FETCH_NETWORK */] = 'Fetch client failed to connect to a network. Check Internet connection.' + ' Original error: {$originalErrorMessage}.', index_esm_a[\"fetch-timeout\" /* FETCH_TIMEOUT */] = 'The config fetch request timed out. ' + ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.', index_esm_a[\"fetch-throttle\" /* FETCH_THROTTLE */] = 'The config fetch request timed out while in an exponential backoff state.' + ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' + ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.', index_esm_a[\"fetch-client-parse\" /* FETCH_PARSE */] = 'Fetch client could not parse response.' + ' Original error: {$originalErrorMessage}.', index_esm_a[\"fetch-status\" /* FETCH_STATUS */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.', index_esm_a);\nvar ERROR_FACTORY = new util_dist_index_esm[\"b\" /* ErrorFactory */]('remoteconfig' /* service */, 'Remote Config' /* service name */, ERROR_DESCRIPTION_MAP);\n// Note how this is like typeof/instanceof, but for ErrorCode.\nfunction hasErrorCode(e, errorCode) {\n  return e instanceof util_dist_index_esm[\"c\" /* FirebaseError */] && e.code.indexOf(errorCode) !== -1;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\nfunction getUserLanguage(navigatorLanguage) {\n  if (navigatorLanguage === void 0) {\n    navigatorLanguage = navigator;\n  }\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    navigatorLanguage.languages && navigatorLanguage.languages[0] ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language\n    // Polyfill otherwise.\n  );\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\nvar index_esm_RestClient = /** @class */function () {\n  function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\n    this.firebaseInstallations = firebaseInstallations;\n    this.sdkVersion = sdkVersion;\n    this.namespace = namespace;\n    this.projectId = projectId;\n    this.apiKey = apiKey;\n    this.appId = appId;\n  }\n  /**\r\n   * Fetches from the Remote Config REST API.\r\n   *\r\n   * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n   * connect to the network.\r\n   * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n   * fetch response.\r\n   * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n   */\n  RestClient.prototype.fetch = function (request) {\n    return Object(tslib_es6[\"e\" /* __awaiter */])(this, void 0, void 0, function () {\n      var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\n      return Object(tslib_es6[\"g\" /* __generator */])(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all([this.firebaseInstallations.getId(), this.firebaseInstallations.getToken()])];\n          case 1:\n            _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\n            urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE || 'https://firebaseremoteconfig.googleapis.com';\n            url = urlBase + \"/v1/projects/\" + this.projectId + \"/namespaces/\" + this.namespace + \":fetch?key=\" + this.apiKey;\n            headers = {\n              'Content-Type': 'application/json',\n              'Content-Encoding': 'gzip',\n              // Deviates from pure decorator by not passing max-age header since we don't currently have\n              // service behavior using that header.\n              'If-None-Match': request.eTag || '*'\n            };\n            requestBody = {\n              /* eslint-disable camelcase */\n              sdk_version: this.sdkVersion,\n              app_instance_id: installationId,\n              app_instance_id_token: installationToken,\n              app_id: this.appId,\n              language_code: getUserLanguage()\n              /* eslint-enable camelcase */\n            };\n\n            options = {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(requestBody)\n            };\n            fetchPromise = fetch(url, options);\n            timeoutPromise = new Promise(function (_resolve, reject) {\n              // Maps async event listener to Promise API.\n              request.signal.addEventListener(function () {\n                // Emulates https://heycam.github.io/webidl/#aborterror\n                var error = new Error('The operation was aborted.');\n                error.name = 'AbortError';\n                reject(error);\n              });\n            });\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2, 5,, 6]);\n            return [4 /*yield*/, Promise.race([fetchPromise, timeoutPromise])];\n          case 3:\n            _b.sent();\n            return [4 /*yield*/, fetchPromise];\n          case 4:\n            response = _b.sent();\n            return [3 /*break*/, 6];\n          case 5:\n            originalError_1 = _b.sent();\n            errorCode = \"fetch-client-network\" /* FETCH_NETWORK */;\n            if (originalError_1.name === 'AbortError') {\n              errorCode = \"fetch-timeout\" /* FETCH_TIMEOUT */;\n            }\n\n            throw ERROR_FACTORY.create(errorCode, {\n              originalErrorMessage: originalError_1.message\n            });\n          case 6:\n            status = response.status;\n            responseEtag = response.headers.get('ETag') || undefined;\n            if (!(response.status === 200)) return [3 /*break*/, 11];\n            responseBody = void 0;\n            _b.label = 7;\n          case 7:\n            _b.trys.push([7, 9,, 10]);\n            return [4 /*yield*/, response.json()];\n          case 8:\n            responseBody = _b.sent();\n            return [3 /*break*/, 10];\n          case 9:\n            originalError_2 = _b.sent();\n            throw ERROR_FACTORY.create(\"fetch-client-parse\" /* FETCH_PARSE */, {\n              originalErrorMessage: originalError_2.message\n            });\n          case 10:\n            config = responseBody['entries'];\n            state = responseBody['state'];\n            _b.label = 11;\n          case 11:\n            // Normalizes based on legacy state.\n            if (state === 'INSTANCE_STATE_UNSPECIFIED') {\n              status = 500;\n            } else if (state === 'NO_CHANGE') {\n              status = 304;\n            } else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\n              // These cases can be fixed remotely, so normalize to safe value.\n              config = {};\n            }\n            // Normalize to exception-based control flow for non-success cases.\n            // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\n            // differentiating success states (200 from 304; the state body param is undefined in a\n            // standard 304).\n            if (status !== 304 && status !== 200) {\n              throw ERROR_FACTORY.create(\"fetch-status\" /* FETCH_STATUS */, {\n                httpStatus: status\n              });\n            }\n            return [2 /*return*/, {\n              status: status,\n              eTag: responseEtag,\n              config: config\n            }];\n        }\n      });\n    });\n  };\n  return RestClient;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\nvar RemoteConfigAbortSignal = /** @class */function () {\n  function RemoteConfigAbortSignal() {\n    this.listeners = [];\n  }\n  RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\n    this.listeners.push(listener);\n  };\n  RemoteConfigAbortSignal.prototype.abort = function () {\n    this.listeners.forEach(function (listener) {\n      return listener();\n    });\n  };\n  return RemoteConfigAbortSignal;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\nvar DEFAULT_VALUE_FOR_STRING = '';\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\nvar Value = /** @class */function () {\n  function Value(_source, _value) {\n    if (_value === void 0) {\n      _value = DEFAULT_VALUE_FOR_STRING;\n    }\n    this._source = _source;\n    this._value = _value;\n  }\n  Value.prototype.asString = function () {\n    return this._value;\n  };\n  Value.prototype.asBoolean = function () {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_BOOLEAN;\n    }\n    return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\n  };\n  Value.prototype.asNumber = function () {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_NUMBER;\n    }\n    var num = Number(this._value);\n    if (isNaN(num)) {\n      num = DEFAULT_VALUE_FOR_NUMBER;\n    }\n    return num;\n  };\n  Value.prototype.getSource = function () {\n    return this._source;\n  };\n  return Value;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\nvar index_esm_RemoteConfig = /** @class */function () {\n  function RemoteConfig(\n  // Required by FirebaseServiceFactory interface.\n  app,\n  // JS doesn't support private yet\n  // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\n  // underscore prefix.\n  _client, _storageCache, _storage, _logger) {\n    this.app = app;\n    this._client = _client;\n    this._storageCache = _storageCache;\n    this._storage = _storage;\n    this._logger = _logger;\n    // Tracks completion of initialization promise.\n    this._isInitializationComplete = false;\n    this.settings = {\n      fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\n      minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\n    };\n    this.defaultConfig = {};\n  }\n  // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\n  // to differentiate 2p and 3p use-cases.\n  RemoteConfig.prototype.setLogLevel = function (logLevel) {\n    switch (logLevel) {\n      case 'debug':\n        this._logger.logLevel = logger_dist_index_esm[\"a\" /* LogLevel */].DEBUG;\n        break;\n      case 'silent':\n        this._logger.logLevel = logger_dist_index_esm[\"a\" /* LogLevel */].SILENT;\n        break;\n      default:\n        this._logger.logLevel = logger_dist_index_esm[\"a\" /* LogLevel */].ERROR;\n    }\n  };\n  Object.defineProperty(RemoteConfig.prototype, \"fetchTimeMillis\", {\n    get: function get() {\n      return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemoteConfig.prototype, \"lastFetchStatus\", {\n    get: function get() {\n      return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  RemoteConfig.prototype.activate = function () {\n    return Object(tslib_es6[\"e\" /* __awaiter */])(this, void 0, void 0, function () {\n      var _a, lastSuccessfulFetchResponse, activeConfigEtag;\n      return Object(tslib_es6[\"g\" /* __generator */])(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all([this._storage.getLastSuccessfulFetchResponse(), this._storage.getActiveConfigEtag()])];\n          case 1:\n            _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\n            if (!lastSuccessfulFetchResponse || !lastSuccessfulFetchResponse.config || !lastSuccessfulFetchResponse.eTag || lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\n              // Either there is no successful fetched config, or is the same as current active\n              // config.\n              return [2 /*return*/, false];\n            }\n            return [4 /*yield*/, Promise.all([this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config), this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)])];\n          case 2:\n            _b.sent();\n            return [2 /*return*/, true];\n        }\n      });\n    });\n  };\n  RemoteConfig.prototype.ensureInitialized = function () {\n    var _this = this;\n    if (!this._initializePromise) {\n      this._initializePromise = this._storageCache.loadFromStorage().then(function () {\n        _this._isInitializationComplete = true;\n      });\n    }\n    return this._initializePromise;\n  };\n  /**\r\n   * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n   * {@link Settings.fetchTimeoutInSeconds} or\r\n   * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n   */\n  RemoteConfig.prototype.fetch = function () {\n    return Object(tslib_es6[\"e\" /* __awaiter */])(this, void 0, void 0, function () {\n      var abortSignal, e_1, lastFetchStatus;\n      var _this = this;\n      return Object(tslib_es6[\"g\" /* __generator */])(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            abortSignal = new RemoteConfigAbortSignal();\n            setTimeout(function () {\n              return Object(tslib_es6[\"e\" /* __awaiter */])(_this, void 0, void 0, function () {\n                return Object(tslib_es6[\"g\" /* __generator */])(this, function (_a) {\n                  // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n                  abortSignal.abort();\n                  return [2 /*return*/];\n                });\n              });\n            }, this.settings.fetchTimeoutMillis);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 6]);\n            return [4 /*yield*/, this._client.fetch({\n              cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\n              signal: abortSignal\n            })];\n          case 2:\n            _a.sent();\n            return [4 /*yield*/, this._storageCache.setLastFetchStatus('success')];\n          case 3:\n            _a.sent();\n            return [3 /*break*/, 6];\n          case 4:\n            e_1 = _a.sent();\n            lastFetchStatus = hasErrorCode(e_1, \"fetch-throttle\" /* FETCH_THROTTLE */) ? 'throttle' : 'failure';\n            return [4 /*yield*/, this._storageCache.setLastFetchStatus(lastFetchStatus)];\n          case 5:\n            _a.sent();\n            throw e_1;\n          case 6:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  RemoteConfig.prototype.fetchAndActivate = function () {\n    return Object(tslib_es6[\"e\" /* __awaiter */])(this, void 0, void 0, function () {\n      return Object(tslib_es6[\"g\" /* __generator */])(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.fetch()];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, this.activate()];\n        }\n      });\n    });\n  };\n  RemoteConfig.prototype.getAll = function () {\n    var _this = this;\n    return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\n      allConfigs[key] = _this.getValue(key);\n      return allConfigs;\n    }, {});\n  };\n  RemoteConfig.prototype.getBoolean = function (key) {\n    return this.getValue(key).asBoolean();\n  };\n  RemoteConfig.prototype.getNumber = function (key) {\n    return this.getValue(key).asNumber();\n  };\n  RemoteConfig.prototype.getString = function (key) {\n    return this.getValue(key).asString();\n  };\n  RemoteConfig.prototype.getValue = function (key) {\n    if (!this._isInitializationComplete) {\n      this._logger.debug(\"A value was requested for key \\\"\" + key + \"\\\" before SDK initialization completed.\" + ' Await on ensureInitialized if the intent was to get a previously activated value.');\n    }\n    var activeConfig = this._storageCache.getActiveConfig();\n    if (activeConfig && activeConfig[key] !== undefined) {\n      return new Value('remote', activeConfig[key]);\n    } else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\n      return new Value('default', String(this.defaultConfig[key]));\n    }\n    this._logger.debug(\"Returning static value for key \\\"\" + key + \"\\\".\" + ' Define a default or remote value if this is unintentional.');\n    return new Value('static');\n  };\n  return RemoteConfig;\n}();\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\nfunction getAllKeys(obj1, obj2) {\n  if (obj1 === void 0) {\n    obj1 = {};\n  }\n  if (obj2 === void 0) {\n    obj2 = {};\n  }\n  return Object.keys(Object(tslib_es6[\"a\" /* __assign */])(Object(tslib_es6[\"a\" /* __assign */])({}, obj1), obj2));\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\nfunction toFirebaseError(event, errorCode) {\n  var originalError = event.target.error || undefined;\n  return ERROR_FACTORY.create(errorCode, {\n    originalErrorMessage: originalError && originalError.message\n  });\n}\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\nvar DB_NAME = 'firebase_remote_config';\nvar DB_VERSION = 1;\n// Visible for testing.\nfunction openDatabase() {\n  return new Promise(function (resolve, reject) {\n    var request = indexedDB.open(DB_NAME, DB_VERSION);\n    request.onerror = function (event) {\n      reject(toFirebaseError(event, \"storage-open\" /* STORAGE_OPEN */));\n    };\n\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onupgradeneeded = function (event) {\n      var db = event.target.result;\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (event.oldVersion) {\n        case 0:\n          db.createObjectStore(APP_NAMESPACE_STORE, {\n            keyPath: 'compositeKey'\n          });\n      }\n    };\n  });\n}\n/**\r\n * Abstracts data persistence.\r\n */\nvar index_esm_Storage = /** @class */function () {\n  /**\r\n   * @param appId enables storage segmentation by app (ID + name).\r\n   * @param appName enables storage segmentation by app (ID + name).\r\n   * @param namespace enables storage segmentation by namespace.\r\n   */\n  function Storage(appId, appName, namespace, openDbPromise) {\n    if (openDbPromise === void 0) {\n      openDbPromise = openDatabase();\n    }\n    this.appId = appId;\n    this.appName = appName;\n    this.namespace = namespace;\n    this.openDbPromise = openDbPromise;\n  }\n  Storage.prototype.getLastFetchStatus = function () {\n    return this.get('last_fetch_status');\n  };\n  Storage.prototype.setLastFetchStatus = function (status) {\n    return this.set('last_fetch_status', status);\n  };\n  // This is comparable to a cache entry timestamp. If we need to expire other data, we could\n  // consider adding timestamp to all storage records and an optional max age arg to getters.\n  Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\n    return this.get('last_successful_fetch_timestamp_millis');\n  };\n  Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\n    return this.set('last_successful_fetch_timestamp_millis', timestamp);\n  };\n  Storage.prototype.getLastSuccessfulFetchResponse = function () {\n    return this.get('last_successful_fetch_response');\n  };\n  Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\n    return this.set('last_successful_fetch_response', response);\n  };\n  Storage.prototype.getActiveConfig = function () {\n    return this.get('active_config');\n  };\n  Storage.prototype.setActiveConfig = function (config) {\n    return this.set('active_config', config);\n  };\n  Storage.prototype.getActiveConfigEtag = function () {\n    return this.get('active_config_etag');\n  };\n  Storage.prototype.setActiveConfigEtag = function (etag) {\n    return this.set('active_config_etag', etag);\n  };\n  Storage.prototype.getThrottleMetadata = function () {\n    return this.get('throttle_metadata');\n  };\n  Storage.prototype.setThrottleMetadata = function (metadata) {\n    return this.set('throttle_metadata', metadata);\n  };\n  Storage.prototype.deleteThrottleMetadata = function () {\n    return this.delete('throttle_metadata');\n  };\n  Storage.prototype.get = function (key) {\n    return Object(tslib_es6[\"e\" /* __awaiter */])(this, void 0, void 0, function () {\n      var db;\n      var _this = this;\n      return Object(tslib_es6[\"g\" /* __generator */])(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.openDbPromise];\n          case 1:\n            db = _a.sent();\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n              var compositeKey = _this.createCompositeKey(key);\n              try {\n                var request = objectStore.get(compositeKey);\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-get\" /* STORAGE_GET */));\n                };\n\n                request.onsuccess = function (event) {\n                  var result = event.target.result;\n                  if (result) {\n                    resolve(result.value);\n                  } else {\n                    resolve(undefined);\n                  }\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  };\n  Storage.prototype.set = function (key, value) {\n    return Object(tslib_es6[\"e\" /* __awaiter */])(this, void 0, void 0, function () {\n      var db;\n      var _this = this;\n      return Object(tslib_es6[\"g\" /* __generator */])(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.openDbPromise];\n          case 1:\n            db = _a.sent();\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n              var compositeKey = _this.createCompositeKey(key);\n              try {\n                var request = objectStore.put({\n                  compositeKey: compositeKey,\n                  value: value\n                });\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-set\" /* STORAGE_SET */));\n                };\n\n                request.onsuccess = function () {\n                  resolve();\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_SET */, {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  };\n  Storage.prototype.delete = function (key) {\n    return Object(tslib_es6[\"e\" /* __awaiter */])(this, void 0, void 0, function () {\n      var db;\n      var _this = this;\n      return Object(tslib_es6[\"g\" /* __generator */])(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.openDbPromise];\n          case 1:\n            db = _a.sent();\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n              var compositeKey = _this.createCompositeKey(key);\n              try {\n                var request = objectStore.delete(compositeKey);\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-delete\" /* STORAGE_DELETE */));\n                };\n\n                request.onsuccess = function () {\n                  resolve();\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-delete\" /* STORAGE_DELETE */, {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  };\n  // Facilitates composite key functionality (which is unsupported in IE).\n  Storage.prototype.createCompositeKey = function (key) {\n    return [this.appId, this.appName, this.namespace, key].join();\n  };\n  return Storage;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\nvar index_esm_StorageCache = /** @class */function () {\n  function StorageCache(storage) {\n    this.storage = storage;\n  }\n  /**\r\n   * Memory-only getters\r\n   */\n  StorageCache.prototype.getLastFetchStatus = function () {\n    return this.lastFetchStatus;\n  };\n  StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\n    return this.lastSuccessfulFetchTimestampMillis;\n  };\n  StorageCache.prototype.getActiveConfig = function () {\n    return this.activeConfig;\n  };\n  /**\r\n   * Read-ahead getter\r\n   */\n  StorageCache.prototype.loadFromStorage = function () {\n    return Object(tslib_es6[\"e\" /* __awaiter */])(this, void 0, void 0, function () {\n      var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\n      return Object(tslib_es6[\"g\" /* __generator */])(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            lastFetchStatusPromise = this.storage.getLastFetchStatus();\n            lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\n            activeConfigPromise = this.storage.getActiveConfig();\n            return [4 /*yield*/, lastFetchStatusPromise];\n          case 1:\n            lastFetchStatus = _a.sent();\n            if (lastFetchStatus) {\n              this.lastFetchStatus = lastFetchStatus;\n            }\n            return [4 /*yield*/, lastSuccessfulFetchTimestampMillisPromise];\n          case 2:\n            lastSuccessfulFetchTimestampMillis = _a.sent();\n            if (lastSuccessfulFetchTimestampMillis) {\n              this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\n            }\n            return [4 /*yield*/, activeConfigPromise];\n          case 3:\n            activeConfig = _a.sent();\n            if (activeConfig) {\n              this.activeConfig = activeConfig;\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Write-through setters\r\n   */\n  StorageCache.prototype.setLastFetchStatus = function (status) {\n    this.lastFetchStatus = status;\n    return this.storage.setLastFetchStatus(status);\n  };\n  StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\n    this.lastSuccessfulFetchTimestampMillis = timestampMillis;\n    return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\n  };\n  StorageCache.prototype.setActiveConfig = function (activeConfig) {\n    this.activeConfig = activeConfig;\n    return this.storage.setActiveConfig(activeConfig);\n  };\n  return StorageCache;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\n  return new Promise(function (resolve, reject) {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n    var timeout = setTimeout(resolve, backoffMillis);\n    // Adds listener, rather than sets onabort, because signal is a shared object.\n    signal.addEventListener(function () {\n      clearTimeout(timeout);\n      // If the request completes before this timeout, the rejection has no effect.\n      reject(ERROR_FACTORY.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\n        throttleEndTimeMillis: throttleEndTimeMillis\n      }));\n    });\n  });\n}\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\nfunction isRetriableError(e) {\n  if (!(e instanceof util_dist_index_esm[\"c\" /* FirebaseError */]) || !e.customData) {\n    return false;\n  }\n  // Uses string index defined by ErrorData, which FirebaseError implements.\n  var httpStatus = Number(e.customData['httpStatus']);\n  return httpStatus === 429 || httpStatus === 500 || httpStatus === 503 || httpStatus === 504;\n}\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\nvar index_esm_RetryingClient = /** @class */function () {\n  function RetryingClient(client, storage) {\n    this.client = client;\n    this.storage = storage;\n  }\n  RetryingClient.prototype.fetch = function (request) {\n    return Object(tslib_es6[\"e\" /* __awaiter */])(this, void 0, void 0, function () {\n      var throttleMetadata;\n      return Object(tslib_es6[\"g\" /* __generator */])(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.storage.getThrottleMetadata()];\n          case 1:\n            throttleMetadata = _a.sent() || {\n              backoffCount: 0,\n              throttleEndTimeMillis: Date.now()\n            };\n            return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\n        }\n      });\n    });\n  };\n  /**\r\n   * A recursive helper for attempting a fetch request repeatedly.\r\n   *\r\n   * @throws any non-retriable errors.\r\n   */\n  RetryingClient.prototype.attemptFetch = function (request, _a) {\n    var throttleEndTimeMillis = _a.throttleEndTimeMillis,\n      backoffCount = _a.backoffCount;\n    return Object(tslib_es6[\"e\" /* __awaiter */])(this, void 0, void 0, function () {\n      var response, e_1, throttleMetadata;\n      return Object(tslib_es6[\"g\" /* __generator */])(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            // Starts with a (potentially zero) timeout to support resumption from stored state.\n            // Ensures the throttle end time is honored if the last attempt timed out.\n            // Note the SDK will never make a request if the fetch timeout expires at this point.\n            return [4 /*yield*/, setAbortableTimeout(request.signal, throttleEndTimeMillis)];\n          case 1:\n            // Starts with a (potentially zero) timeout to support resumption from stored state.\n            // Ensures the throttle end time is honored if the last attempt timed out.\n            // Note the SDK will never make a request if the fetch timeout expires at this point.\n            _b.sent();\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2, 5,, 7]);\n            return [4 /*yield*/, this.client.fetch(request)];\n          case 3:\n            response = _b.sent();\n            // Note the SDK only clears throttle state if response is success or non-retriable.\n            return [4 /*yield*/, this.storage.deleteThrottleMetadata()];\n          case 4:\n            // Note the SDK only clears throttle state if response is success or non-retriable.\n            _b.sent();\n            return [2 /*return*/, response];\n          case 5:\n            e_1 = _b.sent();\n            if (!isRetriableError(e_1)) {\n              throw e_1;\n            }\n            throttleMetadata = {\n              throttleEndTimeMillis: Date.now() + Object(util_dist_index_esm[\"j\" /* calculateBackoffMillis */])(backoffCount),\n              backoffCount: backoffCount + 1\n            };\n            // Persists state.\n            return [4 /*yield*/, this.storage.setThrottleMetadata(throttleMetadata)];\n          case 6:\n            // Persists state.\n            _b.sent();\n            return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\n          case 7:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  return RetryingClient;\n}();\nvar index_esm_name = \"@firebase/remote-config\";\nvar version = \"0.1.43\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction registerRemoteConfig(firebaseInstance) {\n  firebaseInstance.INTERNAL.registerComponent(new component_dist_index_esm[\"a\" /* Component */]('remoteConfig', remoteConfigFactory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\n  firebaseInstance.registerVersion(index_esm_name, version);\n  function remoteConfigFactory(container, _a) {\n    var namespace = _a.instanceIdentifier;\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    // The following call will always succeed because rc has `import '@firebase/installations'`\n    var installations = container.getProvider('installations').getImmediate();\n    // Guards against the SDK being used in non-browser environments.\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(\"registration-window\" /* REGISTRATION_WINDOW */);\n    }\n    // Normalizes optional inputs.\n    var _b = app.options,\n      projectId = _b.projectId,\n      apiKey = _b.apiKey,\n      appId = _b.appId;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(\"registration-project-id\" /* REGISTRATION_PROJECT_ID */);\n    }\n\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(\"registration-api-key\" /* REGISTRATION_API_KEY */);\n    }\n\n    if (!appId) {\n      throw ERROR_FACTORY.create(\"registration-app-id\" /* REGISTRATION_APP_ID */);\n    }\n\n    namespace = namespace || 'firebase';\n    var storage = new index_esm_Storage(appId, app.name, namespace);\n    var storageCache = new index_esm_StorageCache(storage);\n    var logger = new logger_dist_index_esm[\"b\" /* Logger */](index_esm_name);\n    // Sets ERROR as the default log level.\n    // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\n    logger.logLevel = logger_dist_index_esm[\"a\" /* LogLevel */].ERROR;\n    var restClient = new index_esm_RestClient(installations,\n    // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\n    firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\n    var retryingClient = new index_esm_RetryingClient(restClient, storage);\n    var cachingClient = new index_esm_CachingClient(retryingClient, storage, storageCache, logger);\n    var remoteConfigInstance = new index_esm_RemoteConfig(app, cachingClient, storageCache, storage, logger);\n    // Starts warming cache.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    remoteConfigInstance.ensureInitialized();\n    return remoteConfigInstance;\n  }\n}\nregisterRemoteConfig(index_esm[\"a\" /* default */]);\n\n// CONCATENATED MODULE: ./node_modules/firebase/remote-config/dist/index.esm.js\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["../src/client/caching_client.ts","../src/errors.ts","../src/language.ts","../src/client/rest_client.ts","../src/client/remote_config_fetch_client.ts","../src/value.ts","../src/remote_config.ts","../src/storage/storage.ts","../src/storage/storage_cache.ts","../src/client/retrying_client.ts","../index.ts"],"names":["FirebaseLogLevel","packageName"],"mappings":"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","file":"x","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { StorageCache } from '../storage/storage_cache';\nimport {\n  FetchResponse,\n  RemoteConfigFetchClient,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { Storage } from '../storage/storage';\nimport { Logger } from '@firebase/logger';\n\n/**\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\n *\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\n * Cache API doesn't support matching entries by time.\n */\nexport class CachingClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly client: RemoteConfigFetchClient,\n    private readonly storage: Storage,\n    private readonly storageCache: StorageCache,\n    private readonly logger: Logger\n  ) {}\n\n  /**\n   * Returns true if the age of the cached fetched configs is less than or equal to\n   * {@link Settings#minimumFetchIntervalInSeconds}.\n   *\n   * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\n   * native Fetch API.\n   *\n   * <p>Visible for testing.\n   */\n  isCachedDataFresh(\n    cacheMaxAgeMillis: number,\n    lastSuccessfulFetchTimestampMillis: number | undefined\n  ): boolean {\n    // Cache can only be fresh if it's populated.\n    if (!lastSuccessfulFetchTimestampMillis) {\n      this.logger.debug('Config fetch cache check. Cache unpopulated.');\n      return false;\n    }\n\n    // Calculates age of cache entry.\n    const cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\n\n    const isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\n\n    this.logger.debug(\n      'Config fetch cache check.' +\n        ` Cache age millis: ${cacheAgeMillis}.` +\n        ` Cache max age millis (minimumFetchIntervalMillis setting): ${cacheMaxAgeMillis}.` +\n        ` Is cache hit: ${isCachedDataFresh}.`\n    );\n\n    return isCachedDataFresh;\n  }\n\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    // Reads from persisted storage to avoid cache miss if callers don't wait on initialization.\n    const [\n      lastSuccessfulFetchTimestampMillis,\n      lastSuccessfulFetchResponse\n    ] = await Promise.all([\n      this.storage.getLastSuccessfulFetchTimestampMillis(),\n      this.storage.getLastSuccessfulFetchResponse()\n    ]);\n\n    // Exits early on cache hit.\n    if (\n      lastSuccessfulFetchResponse &&\n      this.isCachedDataFresh(\n        request.cacheMaxAgeMillis,\n        lastSuccessfulFetchTimestampMillis\n      )\n    ) {\n      return lastSuccessfulFetchResponse;\n    }\n\n    // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\n    // that allows the caller to pass an ETag.\n    request.eTag =\n      lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\n\n    // Falls back to service on cache miss.\n    const response = await this.client.fetch(request);\n\n    // Fetch throws for non-success responses, so success is guaranteed here.\n\n    const storageOperations = [\n      // Uses write-through cache for consistency with synchronous public API.\n      this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\n    ];\n\n    if (response.status === 200) {\n      // Caches response only if it has changed, ie non-304 responses.\n      storageOperations.push(\n        this.storage.setLastSuccessfulFetchResponse(response)\n      );\n    }\n\n    await Promise.all(storageOperations);\n\n    return response;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\n\nexport const enum ErrorCode {\n  REGISTRATION_WINDOW = 'registration-window',\n  REGISTRATION_PROJECT_ID = 'registration-project-id',\n  REGISTRATION_API_KEY = 'registration-api-key',\n  REGISTRATION_APP_ID = 'registration-app-id',\n  STORAGE_OPEN = 'storage-open',\n  STORAGE_GET = 'storage-get',\n  STORAGE_SET = 'storage-set',\n  STORAGE_DELETE = 'storage-delete',\n  FETCH_NETWORK = 'fetch-client-network',\n  FETCH_TIMEOUT = 'fetch-timeout',\n  FETCH_THROTTLE = 'fetch-throttle',\n  FETCH_PARSE = 'fetch-client-parse',\n  FETCH_STATUS = 'fetch-status'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.REGISTRATION_WINDOW]:\n    'Undefined window object. This SDK only supports usage in a browser environment.',\n  [ErrorCode.REGISTRATION_PROJECT_ID]:\n    'Undefined project identifier. Check Firebase app initialization.',\n  [ErrorCode.REGISTRATION_API_KEY]:\n    'Undefined API key. Check Firebase app initialization.',\n  [ErrorCode.REGISTRATION_APP_ID]:\n    'Undefined app identifier. Check Firebase app initialization.',\n  [ErrorCode.STORAGE_OPEN]:\n    'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_GET]:\n    'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_SET]:\n    'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.STORAGE_DELETE]:\n    'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_NETWORK]:\n    'Fetch client failed to connect to a network. Check Internet connection.' +\n    ' Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_TIMEOUT]:\n    'The config fetch request timed out. ' +\n    ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\n  [ErrorCode.FETCH_THROTTLE]:\n    'The config fetch request timed out while in an exponential backoff state.' +\n    ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\n    ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\n  [ErrorCode.FETCH_PARSE]:\n    'Fetch client could not parse response.' +\n    ' Original error: {$originalErrorMessage}.',\n  [ErrorCode.FETCH_STATUS]:\n    'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.'\n};\n\n// Note this is effectively a type system binding a code to params. This approach overlaps with the\n// role of TS interfaces, but works well for a few reasons:\n// 1) JS is unaware of TS interfaces, eg we can't test for interface implementation in JS\n// 2) callers should have access to a human-readable summary of the error and this interpolates\n//    params into an error message;\n// 3) callers should be able to programmatically access data associated with an error, which\n//    ErrorData provides.\ninterface ErrorParams {\n  [ErrorCode.STORAGE_OPEN]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_GET]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_SET]: { originalErrorMessage: string | undefined };\n  [ErrorCode.STORAGE_DELETE]: { originalErrorMessage: string | undefined };\n  [ErrorCode.FETCH_NETWORK]: { originalErrorMessage: string };\n  [ErrorCode.FETCH_THROTTLE]: { throttleEndTimeMillis: number };\n  [ErrorCode.FETCH_PARSE]: { originalErrorMessage: string };\n  [ErrorCode.FETCH_STATUS]: { httpStatus: number };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'remoteconfig' /* service */,\n  'Remote Config' /* service name */,\n  ERROR_DESCRIPTION_MAP\n);\n\n// Note how this is like typeof/instanceof, but for ErrorCode.\nexport function hasErrorCode(e: Error, errorCode: ErrorCode): boolean {\n  return e instanceof FirebaseError && e.code.indexOf(errorCode) !== -1;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Attempts to get the most accurate browser language setting.\n *\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\n *\n * <p>Defers default language specification to server logic for consistency.\n *\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\n */\nexport function getUserLanguage(\n  navigatorLanguage: NavigatorLanguage = navigator\n): string {\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language\n    // Polyfill otherwise.\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseInstallations } from '@firebase/installations-types';\nimport {\n  FetchResponse,\n  RemoteConfigFetchClient,\n  FirebaseRemoteConfigObject,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { ERROR_FACTORY, ErrorCode } from '../errors';\nimport { getUserLanguage } from '../language';\n\n/**\n * Defines request body parameters required to call the fetch API:\n * https://firebase.google.com/docs/reference/remote-config/rest\n *\n * <p>Not exported because this file encapsulates REST API specifics.\n *\n * <p>Not passing User Properties because Analytics' source of truth on Web is server-side.\n */\ninterface FetchRequestBody {\n  // Disables camelcase linting for request body params.\n  /* eslint-disable camelcase*/\n  sdk_version: string;\n  app_instance_id: string;\n  app_instance_id_token: string;\n  app_id: string;\n  language_code: string;\n  /* eslint-enable camelcase */\n}\n\n/**\n * Implements the Client abstraction for the Remote Config REST API.\n */\nexport class RestClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly firebaseInstallations: FirebaseInstallations,\n    private readonly sdkVersion: string,\n    private readonly namespace: string,\n    private readonly projectId: string,\n    private readonly apiKey: string,\n    private readonly appId: string\n  ) {}\n\n  /**\n   * Fetches from the Remote Config REST API.\n   *\n   * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\n   * connect to the network.\n   * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\n   * fetch response.\n   * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\n   */\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    const [installationId, installationToken] = await Promise.all([\n      this.firebaseInstallations.getId(),\n      this.firebaseInstallations.getToken()\n    ]);\n\n    const urlBase =\n      window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\n      'https://firebaseremoteconfig.googleapis.com';\n\n    const url = `${urlBase}/v1/projects/${this.projectId}/namespaces/${this.namespace}:fetch?key=${this.apiKey}`;\n\n    const headers = {\n      'Content-Type': 'application/json',\n      'Content-Encoding': 'gzip',\n      // Deviates from pure decorator by not passing max-age header since we don't currently have\n      // service behavior using that header.\n      'If-None-Match': request.eTag || '*'\n    };\n\n    const requestBody: FetchRequestBody = {\n      /* eslint-disable camelcase */\n      sdk_version: this.sdkVersion,\n      app_instance_id: installationId,\n      app_instance_id_token: installationToken,\n      app_id: this.appId,\n      language_code: getUserLanguage()\n      /* eslint-enable camelcase */\n    };\n\n    const options = {\n      method: 'POST',\n      headers,\n      body: JSON.stringify(requestBody)\n    };\n\n    // This logic isn't REST-specific, but shimming abort logic isn't worth another decorator.\n    const fetchPromise = fetch(url, options);\n    const timeoutPromise = new Promise((_resolve, reject) => {\n      // Maps async event listener to Promise API.\n      request.signal.addEventListener(() => {\n        // Emulates https://heycam.github.io/webidl/#aborterror\n        const error = new Error('The operation was aborted.');\n        error.name = 'AbortError';\n        reject(error);\n      });\n    });\n\n    let response;\n    try {\n      await Promise.race([fetchPromise, timeoutPromise]);\n      response = await fetchPromise;\n    } catch (originalError) {\n      let errorCode = ErrorCode.FETCH_NETWORK;\n      if (originalError.name === 'AbortError') {\n        errorCode = ErrorCode.FETCH_TIMEOUT;\n      }\n      throw ERROR_FACTORY.create(errorCode, {\n        originalErrorMessage: originalError.message\n      });\n    }\n\n    let status = response.status;\n\n    // Normalizes nullable header to optional.\n    const responseEtag = response.headers.get('ETag') || undefined;\n\n    let config: FirebaseRemoteConfigObject | undefined;\n    let state: string | undefined;\n\n    // JSON parsing throws SyntaxError if the response body isn't a JSON string.\n    // Requesting application/json and checking for a 200 ensures there's JSON data.\n    if (response.status === 200) {\n      let responseBody;\n      try {\n        responseBody = await response.json();\n      } catch (originalError) {\n        throw ERROR_FACTORY.create(ErrorCode.FETCH_PARSE, {\n          originalErrorMessage: originalError.message\n        });\n      }\n      config = responseBody['entries'];\n      state = responseBody['state'];\n    }\n\n    // Normalizes based on legacy state.\n    if (state === 'INSTANCE_STATE_UNSPECIFIED') {\n      status = 500;\n    } else if (state === 'NO_CHANGE') {\n      status = 304;\n    } else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\n      // These cases can be fixed remotely, so normalize to safe value.\n      config = {};\n    }\n\n    // Normalize to exception-based control flow for non-success cases.\n    // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\n    // differentiating success states (200 from 304; the state body param is undefined in a\n    // standard 304).\n    if (status !== 304 && status !== 200) {\n      throw ERROR_FACTORY.create(ErrorCode.FETCH_STATUS, {\n        httpStatus: status\n      });\n    }\n\n    return { status, eTag: responseEtag, config };\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Defines a client, as in https://en.wikipedia.org/wiki/Client%E2%80%93server_model, for the\n * Remote Config server (https://firebase.google.com/docs/reference/remote-config/rest).\n *\n * <p>Abstracts throttle, response cache and network implementation details.\n *\n * <p>Modeled after the native {@link GlobalFetch} interface, which is relatively modern and\n * convenient, but simplified for Remote Config's use case.\n *\n * Disambiguation: {@link GlobalFetch} interface and the Remote Config service define \"fetch\"\n * methods. The RestClient uses the former to make HTTP calls. This interface abstracts the latter.\n */\nexport interface RemoteConfigFetchClient {\n  /**\n   * @throws if response status is not 200 or 304.\n   */\n  fetch(request: FetchRequest): Promise<FetchResponse>;\n}\n\n/**\n * Defines a self-descriptive reference for config key-value pairs.\n */\nexport interface FirebaseRemoteConfigObject {\n  [key: string]: string;\n}\n\n/**\n * Shims a minimal AbortSignal.\n *\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\n * swapped out if/when we do.\n */\nexport class RemoteConfigAbortSignal {\n  listeners: Array<() => void> = [];\n  addEventListener(listener: () => void): void {\n    this.listeners.push(listener);\n  }\n  abort(): void {\n    this.listeners.forEach(listener => listener());\n  }\n}\n\n/**\n * Defines per-request inputs for the Remote Config fetch request.\n *\n * <p>Modeled after the native {@link Request} interface, but simplified for Remote Config's\n * use case.\n */\nexport interface FetchRequest {\n  /**\n   * Uses cached config if it is younger than this age.\n   *\n   * <p>Required because it's defined by settings, which always have a value.\n   *\n   * <p>Comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the native\n   * Fetch API.\n   */\n  cacheMaxAgeMillis: number;\n\n  /**\n   * An event bus for the signal to abort a request.\n   *\n   * <p>Required because all requests should be abortable.\n   *\n   * <p>Comparable to the native\n   * Fetch API's \"signal\" field on its request configuration object\n   * https://fetch.spec.whatwg.org/#dom-requestinit-signal.\n   *\n   * <p>Disambiguation: Remote Config commonly refers to API inputs as\n   * \"signals\". See the private ConfigFetchRequestBody interface for those:\n   * http://google3/firebase/remote_config/web/src/core/rest_client.ts?l=14&rcl=255515243.\n   */\n  signal: RemoteConfigAbortSignal;\n\n  /**\n   * The ETag header value from the last response.\n   *\n   * <p>Optional in case this is the first request.\n   *\n   * <p>Comparable to passing `headers = { 'If-None-Match': <eTag> }` to the native Fetch API.\n   */\n  eTag?: string;\n}\n\n/**\n * Defines a successful response (200 or 304).\n *\n * <p>Modeled after the native {@link Response} interface, but simplified for Remote Config's\n * use case.\n */\nexport interface FetchResponse {\n  /**\n   * The HTTP status, which is useful for differentiating success responses with data from\n   * those without.\n   *\n   * <p>{@link RemoteConfigClient} is modeled after the native {@link GlobalFetch} interface, so\n   * HTTP status is first-class.\n   *\n   * <p>Disambiguation: the fetch response returns a legacy \"state\" value that is redundant with the\n   * HTTP status code. The former is normalized into the latter.\n   */\n  status: number;\n\n  /**\n   * Defines the ETag response header value.\n   *\n   * <p>Only defined for 200 and 304 responses.\n   */\n  eTag?: string;\n\n  /**\n   * Defines the map of parameters returned as \"entries\" in the fetch response body.\n   *\n   * <p>Only defined for 200 responses.\n   */\n  config?: FirebaseRemoteConfigObject;\n\n  // Note: we're not extracting experiment metadata until\n  // ABT and Analytics have Web SDKs.\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Value as ValueType, ValueSource } from '@firebase/remote-config-types';\n\nconst DEFAULT_VALUE_FOR_BOOLEAN = false;\nconst DEFAULT_VALUE_FOR_STRING = '';\nconst DEFAULT_VALUE_FOR_NUMBER = 0;\n\nconst BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\n\nexport class Value implements ValueType {\n  constructor(\n    private readonly _source: ValueSource,\n    private readonly _value: string = DEFAULT_VALUE_FOR_STRING\n  ) {}\n\n  asString(): string {\n    return this._value;\n  }\n\n  asBoolean(): boolean {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_BOOLEAN;\n    }\n    return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\n  }\n\n  asNumber(): number {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_NUMBER;\n    }\n    let num = Number(this._value);\n    if (isNaN(num)) {\n      num = DEFAULT_VALUE_FOR_NUMBER;\n    }\n    return num;\n  }\n\n  getSource(): ValueSource {\n    return this._source;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from '@firebase/app-types';\nimport {\n  RemoteConfig as RemoteConfigType,\n  FetchStatus,\n  Settings,\n  Value as ValueType,\n  LogLevel as RemoteConfigLogLevel\n} from '@firebase/remote-config-types';\nimport { StorageCache } from './storage/storage_cache';\nimport {\n  RemoteConfigFetchClient,\n  RemoteConfigAbortSignal\n} from './client/remote_config_fetch_client';\nimport { Value } from './value';\nimport { ErrorCode, hasErrorCode } from './errors';\nimport { Storage } from './storage/storage';\nimport { Logger, LogLevel as FirebaseLogLevel } from '@firebase/logger';\n\nconst DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\nconst DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\n\n/**\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\n *\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\n */\nexport class RemoteConfig implements RemoteConfigType {\n  // Tracks completion of initialization promise.\n  private _isInitializationComplete = false;\n\n  // De-duplicates initialization calls.\n  private _initializePromise?: Promise<void>;\n\n  settings: Settings = {\n    fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\n    minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\n  };\n\n  defaultConfig: { [key: string]: string | number | boolean } = {};\n\n  // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\n  // to differentiate 2p and 3p use-cases.\n  setLogLevel(logLevel: RemoteConfigLogLevel): void {\n    switch (logLevel) {\n      case 'debug':\n        this._logger.logLevel = FirebaseLogLevel.DEBUG;\n        break;\n      case 'silent':\n        this._logger.logLevel = FirebaseLogLevel.SILENT;\n        break;\n      default:\n        this._logger.logLevel = FirebaseLogLevel.ERROR;\n    }\n  }\n\n  get fetchTimeMillis(): number {\n    return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\n  }\n\n  get lastFetchStatus(): FetchStatus {\n    return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\n  }\n\n  constructor(\n    // Required by FirebaseServiceFactory interface.\n    readonly app: FirebaseApp,\n    // JS doesn't support private yet\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\n    // underscore prefix.\n    private readonly _client: RemoteConfigFetchClient,\n    private readonly _storageCache: StorageCache,\n    private readonly _storage: Storage,\n    private readonly _logger: Logger\n  ) {}\n\n  async activate(): Promise<boolean> {\n    const [lastSuccessfulFetchResponse, activeConfigEtag] = await Promise.all([\n      this._storage.getLastSuccessfulFetchResponse(),\n      this._storage.getActiveConfigEtag()\n    ]);\n    if (\n      !lastSuccessfulFetchResponse ||\n      !lastSuccessfulFetchResponse.config ||\n      !lastSuccessfulFetchResponse.eTag ||\n      lastSuccessfulFetchResponse.eTag === activeConfigEtag\n    ) {\n      // Either there is no successful fetched config, or is the same as current active\n      // config.\n      return false;\n    }\n    await Promise.all([\n      this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\n      this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\n    ]);\n    return true;\n  }\n\n  ensureInitialized(): Promise<void> {\n    if (!this._initializePromise) {\n      this._initializePromise = this._storageCache\n        .loadFromStorage()\n        .then(() => {\n          this._isInitializationComplete = true;\n        });\n    }\n    return this._initializePromise;\n  }\n\n  /**\n   * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\n   * {@link Settings.fetchTimeoutInSeconds} or\n   * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\n   */\n  async fetch(): Promise<void> {\n    // Aborts the request after the given timeout, causing the fetch call to\n    // reject with an AbortError.\n    //\n    // <p>Aborting after the request completes is a no-op, so we don't need a\n    // corresponding clearTimeout.\n    //\n    // Locating abort logic here because:\n    // * it uses a developer setting (timeout)\n    // * it applies to all retries (like curl's max-time arg)\n    // * it is consistent with the Fetch API's signal input\n    const abortSignal = new RemoteConfigAbortSignal();\n\n    setTimeout(async () => {\n      // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n      abortSignal.abort();\n    }, this.settings.fetchTimeoutMillis);\n\n    // Catches *all* errors thrown by client so status can be set consistently.\n    try {\n      await this._client.fetch({\n        cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\n        signal: abortSignal\n      });\n\n      await this._storageCache.setLastFetchStatus('success');\n    } catch (e) {\n      const lastFetchStatus = hasErrorCode(e, ErrorCode.FETCH_THROTTLE)\n        ? 'throttle'\n        : 'failure';\n      await this._storageCache.setLastFetchStatus(lastFetchStatus);\n      throw e;\n    }\n  }\n\n  async fetchAndActivate(): Promise<boolean> {\n    await this.fetch();\n    return this.activate();\n  }\n\n  getAll(): { [key: string]: ValueType } {\n    return getAllKeys(\n      this._storageCache.getActiveConfig(),\n      this.defaultConfig\n    ).reduce((allConfigs, key) => {\n      allConfigs[key] = this.getValue(key);\n      return allConfigs;\n    }, {} as { [key: string]: ValueType });\n  }\n\n  getBoolean(key: string): boolean {\n    return this.getValue(key).asBoolean();\n  }\n\n  getNumber(key: string): number {\n    return this.getValue(key).asNumber();\n  }\n\n  getString(key: string): string {\n    return this.getValue(key).asString();\n  }\n\n  getValue(key: string): ValueType {\n    if (!this._isInitializationComplete) {\n      this._logger.debug(\n        `A value was requested for key \"${key}\" before SDK initialization completed.` +\n          ' Await on ensureInitialized if the intent was to get a previously activated value.'\n      );\n    }\n    const activeConfig = this._storageCache.getActiveConfig();\n    if (activeConfig && activeConfig[key] !== undefined) {\n      return new Value('remote', activeConfig[key]);\n    } else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\n      return new Value('default', String(this.defaultConfig[key]));\n    }\n    this._logger.debug(\n      `Returning static value for key \"${key}\".` +\n        ' Define a default or remote value if this is unintentional.'\n    );\n    return new Value('static');\n  }\n}\n\n/**\n * Dedupes and returns an array of all the keys of the received objects.\n */\nfunction getAllKeys(obj1: {} = {}, obj2: {} = {}): string[] {\n  return Object.keys({ ...obj1, ...obj2 });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchStatus } from '@firebase/remote-config-types';\nimport {\n  FetchResponse,\n  FirebaseRemoteConfigObject\n} from '../client/remote_config_fetch_client';\nimport { ERROR_FACTORY, ErrorCode } from '../errors';\nimport { FirebaseError } from '@firebase/util';\n\n/**\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\n */\nfunction toFirebaseError(event: Event, errorCode: ErrorCode): FirebaseError {\n  const originalError = (event.target as IDBRequest).error || undefined;\n  return ERROR_FACTORY.create(errorCode, {\n    originalErrorMessage: originalError && originalError.message\n  });\n}\n\n/**\n * A general-purpose store keyed by app + namespace + {@link\n * ProjectNamespaceKeyFieldValue}.\n *\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\n *\n * <p>Visible for testing.\n */\nexport const APP_NAMESPACE_STORE = 'app_namespace_store';\n\nconst DB_NAME = 'firebase_remote_config';\nconst DB_VERSION = 1;\n\n/**\n * Encapsulates metadata concerning throttled fetch requests.\n */\nexport interface ThrottleMetadata {\n  // The number of times fetch has backed off. Used for resuming backoff after a timeout.\n  backoffCount: number;\n  // The Unix timestamp in milliseconds when callers can retry a request.\n  throttleEndTimeMillis: number;\n}\n\n/**\n * Provides type-safety for the \"key\" field used by {@link APP_NAMESPACE_STORE}.\n *\n * <p>This seems like a small price to avoid potentially subtle bugs caused by a typo.\n */\ntype ProjectNamespaceKeyFieldValue =\n  | 'active_config'\n  | 'active_config_etag'\n  | 'last_fetch_status'\n  | 'last_successful_fetch_timestamp_millis'\n  | 'last_successful_fetch_response'\n  | 'settings'\n  | 'throttle_metadata';\n\n// Visible for testing.\nexport function openDatabase(): Promise<IDBDatabase> {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open(DB_NAME, DB_VERSION);\n    request.onerror = event => {\n      reject(toFirebaseError(event, ErrorCode.STORAGE_OPEN));\n    };\n    request.onsuccess = event => {\n      resolve((event.target as IDBOpenDBRequest).result);\n    };\n    request.onupgradeneeded = event => {\n      const db = (event.target as IDBOpenDBRequest).result;\n\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (event.oldVersion) {\n        case 0:\n          db.createObjectStore(APP_NAMESPACE_STORE, {\n            keyPath: 'compositeKey'\n          });\n      }\n    };\n  });\n}\n\n/**\n * Abstracts data persistence.\n */\nexport class Storage {\n  /**\n   * @param appId enables storage segmentation by app (ID + name).\n   * @param appName enables storage segmentation by app (ID + name).\n   * @param namespace enables storage segmentation by namespace.\n   */\n  constructor(\n    private readonly appId: string,\n    private readonly appName: string,\n    private readonly namespace: string,\n    private readonly openDbPromise = openDatabase()\n  ) {}\n\n  getLastFetchStatus(): Promise<FetchStatus | undefined> {\n    return this.get<FetchStatus>('last_fetch_status');\n  }\n\n  setLastFetchStatus(status: FetchStatus): Promise<void> {\n    return this.set<FetchStatus>('last_fetch_status', status);\n  }\n\n  // This is comparable to a cache entry timestamp. If we need to expire other data, we could\n  // consider adding timestamp to all storage records and an optional max age arg to getters.\n  getLastSuccessfulFetchTimestampMillis(): Promise<number | undefined> {\n    return this.get<number>('last_successful_fetch_timestamp_millis');\n  }\n\n  setLastSuccessfulFetchTimestampMillis(timestamp: number): Promise<void> {\n    return this.set<number>(\n      'last_successful_fetch_timestamp_millis',\n      timestamp\n    );\n  }\n\n  getLastSuccessfulFetchResponse(): Promise<FetchResponse | undefined> {\n    return this.get<FetchResponse>('last_successful_fetch_response');\n  }\n\n  setLastSuccessfulFetchResponse(response: FetchResponse): Promise<void> {\n    return this.set<FetchResponse>('last_successful_fetch_response', response);\n  }\n\n  getActiveConfig(): Promise<FirebaseRemoteConfigObject | undefined> {\n    return this.get<FirebaseRemoteConfigObject>('active_config');\n  }\n\n  setActiveConfig(config: FirebaseRemoteConfigObject): Promise<void> {\n    return this.set<FirebaseRemoteConfigObject>('active_config', config);\n  }\n\n  getActiveConfigEtag(): Promise<string | undefined> {\n    return this.get<string>('active_config_etag');\n  }\n\n  setActiveConfigEtag(etag: string): Promise<void> {\n    return this.set<string>('active_config_etag', etag);\n  }\n\n  getThrottleMetadata(): Promise<ThrottleMetadata | undefined> {\n    return this.get<ThrottleMetadata>('throttle_metadata');\n  }\n\n  setThrottleMetadata(metadata: ThrottleMetadata): Promise<void> {\n    return this.set<ThrottleMetadata>('throttle_metadata', metadata);\n  }\n\n  deleteThrottleMetadata(): Promise<void> {\n    return this.delete('throttle_metadata');\n  }\n\n  async get<T>(key: ProjectNamespaceKeyFieldValue): Promise<T | undefined> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.get(compositeKey);\n        request.onerror = event => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_GET));\n        };\n        request.onsuccess = event => {\n          const result = (event.target as IDBRequest).result;\n          if (result) {\n            resolve(result.value);\n          } else {\n            resolve(undefined);\n          }\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_GET, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  async set<T>(key: ProjectNamespaceKeyFieldValue, value: T): Promise<void> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.put({\n          compositeKey,\n          value\n        });\n        request.onerror = (event: Event) => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_SET));\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_SET, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  async delete(key: ProjectNamespaceKeyFieldValue): Promise<void> {\n    const db = await this.openDbPromise;\n    return new Promise((resolve, reject) => {\n      const transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n      const objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n      const compositeKey = this.createCompositeKey(key);\n      try {\n        const request = objectStore.delete(compositeKey);\n        request.onerror = (event: Event) => {\n          reject(toFirebaseError(event, ErrorCode.STORAGE_DELETE));\n        };\n        request.onsuccess = () => {\n          resolve();\n        };\n      } catch (e) {\n        reject(\n          ERROR_FACTORY.create(ErrorCode.STORAGE_DELETE, {\n            originalErrorMessage: e && e.message\n          })\n        );\n      }\n    });\n  }\n\n  // Facilitates composite key functionality (which is unsupported in IE).\n  createCompositeKey(key: ProjectNamespaceKeyFieldValue): string {\n    return [this.appId, this.appName, this.namespace, key].join();\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FetchStatus } from '@firebase/remote-config-types';\nimport { FirebaseRemoteConfigObject } from '../client/remote_config_fetch_client';\nimport { Storage } from './storage';\n\n/**\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\n */\nexport class StorageCache {\n  constructor(private readonly storage: Storage) {}\n\n  /**\n   * Memory caches.\n   */\n  private lastFetchStatus?: FetchStatus;\n  private lastSuccessfulFetchTimestampMillis?: number;\n  private activeConfig?: FirebaseRemoteConfigObject;\n\n  /**\n   * Memory-only getters\n   */\n  getLastFetchStatus(): FetchStatus | undefined {\n    return this.lastFetchStatus;\n  }\n\n  getLastSuccessfulFetchTimestampMillis(): number | undefined {\n    return this.lastSuccessfulFetchTimestampMillis;\n  }\n\n  getActiveConfig(): FirebaseRemoteConfigObject | undefined {\n    return this.activeConfig;\n  }\n\n  /**\n   * Read-ahead getter\n   */\n  async loadFromStorage(): Promise<void> {\n    const lastFetchStatusPromise = this.storage.getLastFetchStatus();\n    const lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\n    const activeConfigPromise = this.storage.getActiveConfig();\n\n    // Note:\n    // 1. we consistently check for undefined to avoid clobbering defined values\n    //   in memory\n    // 2. we defer awaiting to improve readability, as opposed to destructuring\n    //   a Promise.all result, for example\n\n    const lastFetchStatus = await lastFetchStatusPromise;\n    if (lastFetchStatus) {\n      this.lastFetchStatus = lastFetchStatus;\n    }\n\n    const lastSuccessfulFetchTimestampMillis = await lastSuccessfulFetchTimestampMillisPromise;\n    if (lastSuccessfulFetchTimestampMillis) {\n      this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\n    }\n\n    const activeConfig = await activeConfigPromise;\n    if (activeConfig) {\n      this.activeConfig = activeConfig;\n    }\n  }\n\n  /**\n   * Write-through setters\n   */\n  setLastFetchStatus(status: FetchStatus): Promise<void> {\n    this.lastFetchStatus = status;\n    return this.storage.setLastFetchStatus(status);\n  }\n\n  setLastSuccessfulFetchTimestampMillis(\n    timestampMillis: number\n  ): Promise<void> {\n    this.lastSuccessfulFetchTimestampMillis = timestampMillis;\n    return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\n  }\n\n  setActiveConfig(activeConfig: FirebaseRemoteConfigObject): Promise<void> {\n    this.activeConfig = activeConfig;\n    return this.storage.setActiveConfig(activeConfig);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  RemoteConfigAbortSignal,\n  RemoteConfigFetchClient,\n  FetchResponse,\n  FetchRequest\n} from './remote_config_fetch_client';\nimport { ThrottleMetadata, Storage } from '../storage/storage';\nimport { ErrorCode, ERROR_FACTORY } from '../errors';\nimport { FirebaseError, calculateBackoffMillis } from '@firebase/util';\n\n/**\n * Supports waiting on a backoff by:\n *\n * <ul>\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\n *       request appear the same.</li>\n * </ul>\n *\n * <p>Visible for testing.\n */\nexport function setAbortableTimeout(\n  signal: RemoteConfigAbortSignal,\n  throttleEndTimeMillis: number\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    const backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n\n    const timeout = setTimeout(resolve, backoffMillis);\n\n    // Adds listener, rather than sets onabort, because signal is a shared object.\n    signal.addEventListener(() => {\n      clearTimeout(timeout);\n\n      // If the request completes before this timeout, the rejection has no effect.\n      reject(\n        ERROR_FACTORY.create(ErrorCode.FETCH_THROTTLE, {\n          throttleEndTimeMillis\n        })\n      );\n    });\n  });\n}\n\ntype RetriableError = FirebaseError & { customData: { httpStatus: string } };\n/**\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\n */\nfunction isRetriableError(e: Error): e is RetriableError {\n  if (!(e instanceof FirebaseError) || !e.customData) {\n    return false;\n  }\n\n  // Uses string index defined by ErrorData, which FirebaseError implements.\n  const httpStatus = Number(e.customData['httpStatus']);\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\n/**\n * Decorates a Client with retry logic.\n *\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\n * responses (because the SDK has no use for error responses).\n */\nexport class RetryingClient implements RemoteConfigFetchClient {\n  constructor(\n    private readonly client: RemoteConfigFetchClient,\n    private readonly storage: Storage\n  ) {}\n\n  async fetch(request: FetchRequest): Promise<FetchResponse> {\n    const throttleMetadata = (await this.storage.getThrottleMetadata()) || {\n      backoffCount: 0,\n      throttleEndTimeMillis: Date.now()\n    };\n\n    return this.attemptFetch(request, throttleMetadata);\n  }\n\n  /**\n   * A recursive helper for attempting a fetch request repeatedly.\n   *\n   * @throws any non-retriable errors.\n   */\n  async attemptFetch(\n    request: FetchRequest,\n    { throttleEndTimeMillis, backoffCount }: ThrottleMetadata\n  ): Promise<FetchResponse> {\n    // Starts with a (potentially zero) timeout to support resumption from stored state.\n    // Ensures the throttle end time is honored if the last attempt timed out.\n    // Note the SDK will never make a request if the fetch timeout expires at this point.\n    await setAbortableTimeout(request.signal, throttleEndTimeMillis);\n\n    try {\n      const response = await this.client.fetch(request);\n\n      // Note the SDK only clears throttle state if response is success or non-retriable.\n      await this.storage.deleteThrottleMetadata();\n\n      return response;\n    } catch (e) {\n      if (!isRetriableError(e)) {\n        throw e;\n      }\n\n      // Increments backoff state.\n      const throttleMetadata = {\n        throttleEndTimeMillis:\n          Date.now() + calculateBackoffMillis(backoffCount),\n        backoffCount: backoffCount + 1\n      };\n\n      // Persists state.\n      await this.storage.setThrottleMetadata(throttleMetadata);\n\n      return this.attemptFetch(request, throttleMetadata);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { RemoteConfig as RemoteConfigType } from '@firebase/remote-config-types';\nimport { CachingClient } from './src/client/caching_client';\nimport { RestClient } from './src/client/rest_client';\nimport { RemoteConfig } from './src/remote_config';\nimport { Storage } from './src/storage/storage';\nimport { StorageCache } from './src/storage/storage_cache';\nimport { ERROR_FACTORY, ErrorCode } from './src/errors';\nimport { RetryingClient } from './src/client/retrying_client';\nimport { Logger, LogLevel as FirebaseLogLevel } from '@firebase/logger';\nimport { name as packageName, version } from './package.json';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\n// Facilitates debugging by enabling settings changes without rebuilding asset.\n// Note these debug options are not part of a documented, supported API and can change at any time.\n// Consolidates debug options for easier discovery.\n// Uses transient variables on window to avoid lingering state causing panic.\ndeclare global {\n  interface Window {\n    FIREBASE_REMOTE_CONFIG_URL_BASE: string;\n  }\n}\n\nexport function registerRemoteConfig(\n  firebaseInstance: _FirebaseNamespace\n): void {\n  firebaseInstance.INTERNAL.registerComponent(\n    new Component(\n      'remoteConfig',\n      remoteConfigFactory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n\n  firebaseInstance.registerVersion(packageName, version);\n\n  function remoteConfigFactory(\n    container: ComponentContainer,\n    { instanceIdentifier: namespace }: InstanceFactoryOptions\n  ): RemoteConfig {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    const app = container.getProvider('app').getImmediate();\n    // The following call will always succeed because rc has `import '@firebase/installations'`\n    const installations = container.getProvider('installations').getImmediate();\n\n    // Guards against the SDK being used in non-browser environments.\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_WINDOW);\n    }\n\n    // Normalizes optional inputs.\n    const { projectId, apiKey, appId } = app.options;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_PROJECT_ID);\n    }\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_API_KEY);\n    }\n    if (!appId) {\n      throw ERROR_FACTORY.create(ErrorCode.REGISTRATION_APP_ID);\n    }\n    namespace = namespace || 'firebase';\n\n    const storage = new Storage(appId, app.name, namespace);\n    const storageCache = new StorageCache(storage);\n\n    const logger = new Logger(packageName);\n\n    // Sets ERROR as the default log level.\n    // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\n    logger.logLevel = FirebaseLogLevel.ERROR;\n\n    const restClient = new RestClient(\n      installations,\n      // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\n      firebaseInstance.SDK_VERSION,\n      namespace,\n      projectId,\n      apiKey,\n      appId\n    );\n    const retryingClient = new RetryingClient(restClient, storage);\n    const cachingClient = new CachingClient(\n      retryingClient,\n      storage,\n      storageCache,\n      logger\n    );\n\n    const remoteConfigInstance = new RemoteConfig(\n      app,\n      cachingClient,\n      storageCache,\n      storage,\n      logger\n    );\n\n    // Starts warming cache.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    remoteConfigInstance.ensureInitialized();\n\n    return remoteConfigInstance;\n  }\n}\n\nregisterRemoteConfig(firebase as _FirebaseNamespace);\n\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    remoteConfig?: {\n      (app?: FirebaseApp): RemoteConfigType;\n    };\n  }\n  interface FirebaseApp {\n    remoteConfig(): RemoteConfigType;\n  }\n}\n"]},"banner":"For license information please see 10.b3132924.chunk.js.LICENSE.txt","extractedComments":"/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n","commentsFilename":"static/js/10.b3132924.chunk.js.LICENSE.txt"}