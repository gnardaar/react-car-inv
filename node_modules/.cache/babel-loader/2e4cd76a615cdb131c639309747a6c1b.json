{"ast":null,"code":"import { Observable } from '../../Observable';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\nexport function animationFrames(timestampProvider) {\n  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\nfunction animationFramesFactory(timestampProvider) {\n  return new Observable(function (subscriber) {\n    var provider = timestampProvider || performanceTimestampProvider;\n    var start = provider.now();\n    var id = 0;\n    var run = function () {\n      if (!subscriber.closed) {\n        id = animationFrameProvider.requestAnimationFrame(function (timestamp) {\n          id = 0;\n          var now = provider.now();\n          subscriber.next({\n            timestamp: timestampProvider ? now : timestamp,\n            elapsed: now - start\n          });\n          run();\n        });\n      }\n    };\n    run();\n    return function () {\n      if (id) {\n        animationFrameProvider.cancelAnimationFrame(id);\n      }\n    };\n  });\n}\nvar DEFAULT_ANIMATION_FRAMES = animationFramesFactory();","map":{"version":3,"sources":["../../../../../src/internal/observable/dom/animationFrames.ts"],"names":[],"mappings":"AAAA,SAAS,UAAU,QAAQ,kBAAkB;AAE7C,SAAS,4BAA4B,QAAQ,8CAA8C;AAC3F,SAAS,sBAAsB,QAAQ,wCAAwC;AAuE/E,OAAM,SAAU,eAAe,CAAC,iBAAqC,EAAA;EACnE,OAAO,iBAAiB,GAAG,sBAAsB,CAAC,iBAAiB,CAAC,GAAG,wBAAwB;AACjG;AAMA,SAAS,sBAAsB,CAAC,iBAAqC,EAAA;EACnE,OAAO,IAAI,UAAU,CAAyC,UAAC,UAAU,EAAA;IAIvE,IAAM,QAAQ,GAAG,iBAAiB,IAAI,4BAA4B;IAMlE,IAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE;IAE5B,IAAI,EAAE,GAAG,CAAC;IACV,IAAM,GAAG,GAAG,YAAA;MACV,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;QACtB,EAAE,GAAG,sBAAsB,CAAC,qBAAqB,CAAC,UAAC,SAAuC,EAAA;UACxF,EAAE,GAAG,CAAC;UAQN,IAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,EAAE;UAC1B,UAAU,CAAC,IAAI,CAAC;YACd,SAAS,EAAE,iBAAiB,GAAG,GAAG,GAAG,SAAS;YAC9C,OAAO,EAAE,GAAG,GAAG;WAChB,CAAC;UACF,GAAG,EAAE;QACP,CAAC,CAAC;MACH;IACH,CAAC;IAED,GAAG,EAAE;IAEL,OAAO,YAAA;MACL,IAAI,EAAE,EAAE;QACN,sBAAsB,CAAC,oBAAoB,CAAC,EAAE,CAAC;MAChD;IACH,CAAC;EACH,CAAC,CAAC;AACJ;AAMA,IAAM,wBAAwB,GAAG,sBAAsB,EAAE","sourceRoot":"","sourcesContent":["import { Observable } from '../../Observable';\nimport { performanceTimestampProvider } from '../../scheduler/performanceTimestampProvider';\nimport { animationFrameProvider } from '../../scheduler/animationFrameProvider';\nexport function animationFrames(timestampProvider) {\n    return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;\n}\nfunction animationFramesFactory(timestampProvider) {\n    return new Observable(function (subscriber) {\n        var provider = timestampProvider || performanceTimestampProvider;\n        var start = provider.now();\n        var id = 0;\n        var run = function () {\n            if (!subscriber.closed) {\n                id = animationFrameProvider.requestAnimationFrame(function (timestamp) {\n                    id = 0;\n                    var now = provider.now();\n                    subscriber.next({\n                        timestamp: timestampProvider ? now : timestamp,\n                        elapsed: now - start,\n                    });\n                    run();\n                });\n            }\n        };\n        run();\n        return function () {\n            if (id) {\n                animationFrameProvider.cancelAnimationFrame(id);\n            }\n        };\n    });\n}\nvar DEFAULT_ANIMATION_FRAMES = animationFramesFactory();\n//# sourceMappingURL=animationFrames.js.map"]},"metadata":{},"sourceType":"module"}