{"ast":null,"code":"import { __values } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function windowToggle(openings, closingSelector) {\n  return operate(function (source, subscriber) {\n    var windows = [];\n    var handleError = function (err) {\n      while (0 < windows.length) {\n        windows.shift().error(err);\n      }\n      subscriber.error(err);\n    };\n    innerFrom(openings).subscribe(createOperatorSubscriber(subscriber, function (openValue) {\n      var window = new Subject();\n      windows.push(window);\n      var closingSubscription = new Subscription();\n      var closeWindow = function () {\n        arrRemove(windows, window);\n        window.complete();\n        closingSubscription.unsubscribe();\n      };\n      var closingNotifier;\n      try {\n        closingNotifier = innerFrom(closingSelector(openValue));\n      } catch (err) {\n        handleError(err);\n        return;\n      }\n      subscriber.next(window.asObservable());\n      closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n    }, noop));\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      var e_1, _a;\n      var windowsCopy = windows.slice();\n      try {\n        for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {\n          var window_1 = windowsCopy_1_1.value;\n          window_1.next(value);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }, function () {\n      while (0 < windows.length) {\n        windows.shift().complete();\n      }\n      subscriber.complete();\n    }, handleError, function () {\n      while (0 < windows.length) {\n        windows.shift().unsubscribe();\n      }\n    }));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/windowToggle.ts"],"names":[],"mappings":";AACA,SAAS,OAAO,QAAQ,YAAY;AACpC,SAAS,YAAY,QAAQ,iBAAiB;AAE9C,SAAS,OAAO,QAAQ,cAAc;AACtC,SAAS,SAAS,QAAQ,yBAAyB;AACnD,SAAS,wBAAwB,QAAQ,sBAAsB;AAC/D,SAAS,IAAI,QAAQ,cAAc;AACnC,SAAS,SAAS,QAAQ,mBAAmB;AAiD7C,OAAM,SAAU,YAAY,CAC1B,QAA4B,EAC5B,eAAuD,EAAA;EAEvD,OAAO,OAAO,CAAC,UAAC,MAAM,EAAE,UAAU,EAAA;IAChC,IAAM,OAAO,GAAiB,EAAE;IAEhC,IAAM,WAAW,GAAG,UAAC,GAAQ,EAAA;MAC3B,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE;QACzB,OAAO,CAAC,KAAK,EAAG,CAAC,KAAK,CAAC,GAAG,CAAC;MAC5B;MACD,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC;IACvB,CAAC;IAED,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC3B,wBAAwB,CACtB,UAAU,EACV,UAAC,SAAS,EAAA;MACR,IAAM,MAAM,GAAG,IAAI,OAAO,EAAK;MAC/B,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;MACpB,IAAM,mBAAmB,GAAG,IAAI,YAAY,EAAE;MAC9C,IAAM,WAAW,GAAG,YAAA;QAClB,SAAS,CAAC,OAAO,EAAE,MAAM,CAAC;QAC1B,MAAM,CAAC,QAAQ,EAAE;QACjB,mBAAmB,CAAC,WAAW,EAAE;MACnC,CAAC;MAED,IAAI,eAAgC;MACpC,IAAI;QACF,eAAe,GAAG,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;OACxD,CAAC,OAAO,GAAG,EAAE;QACZ,WAAW,CAAC,GAAG,CAAC;QAChB;MACD;MAED,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;MAEtC,mBAAmB,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,CAAC,wBAAwB,CAAC,UAAU,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;IAC1H,CAAC,EACD,IAAI,CACL,CACF;IAGD,MAAM,CAAC,SAAS,CACd,wBAAwB,CACtB,UAAU,EACV,UAAC,KAAQ,EAAA;;MAGP,IAAM,WAAW,GAAG,OAAO,CAAC,KAAK,EAAE;;QACnC,KAAqB,IAAA,aAAA,GAAA,QAAA,CAAA,WAAW,CAAA,EAAA,eAAA,GAAA,aAAA,CAAA,IAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,eAAA,GAAA,aAAA,CAAA,IAAA,EAAA,EAAE;UAA7B,IAAM,QAAM,GAAA,eAAA,CAAA,KAAA;UACf,QAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACnB;;;;;;;;;;;;IACH,CAAC,EACD,YAAA;MAEE,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE;QACzB,OAAO,CAAC,KAAK,EAAG,CAAC,QAAQ,EAAE;MAC5B;MACD,UAAU,CAAC,QAAQ,EAAE;IACvB,CAAC,EACD,WAAW,EACX,YAAA;MAME,OAAO,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE;QACzB,OAAO,CAAC,KAAK,EAAG,CAAC,WAAW,EAAE;MAC/B;IACH,CAAC,CACF,CACF;EACH,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["import { __values } from \"tslib\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { arrRemove } from '../util/arrRemove';\nexport function windowToggle(openings, closingSelector) {\n    return operate(function (source, subscriber) {\n        var windows = [];\n        var handleError = function (err) {\n            while (0 < windows.length) {\n                windows.shift().error(err);\n            }\n            subscriber.error(err);\n        };\n        innerFrom(openings).subscribe(createOperatorSubscriber(subscriber, function (openValue) {\n            var window = new Subject();\n            windows.push(window);\n            var closingSubscription = new Subscription();\n            var closeWindow = function () {\n                arrRemove(windows, window);\n                window.complete();\n                closingSubscription.unsubscribe();\n            };\n            var closingNotifier;\n            try {\n                closingNotifier = innerFrom(closingSelector(openValue));\n            }\n            catch (err) {\n                handleError(err);\n                return;\n            }\n            subscriber.next(window.asObservable());\n            closingSubscription.add(closingNotifier.subscribe(createOperatorSubscriber(subscriber, closeWindow, noop, handleError)));\n        }, noop));\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var e_1, _a;\n            var windowsCopy = windows.slice();\n            try {\n                for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {\n                    var window_1 = windowsCopy_1_1.value;\n                    window_1.next(value);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a = windowsCopy_1.return)) _a.call(windowsCopy_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }, function () {\n            while (0 < windows.length) {\n                windows.shift().complete();\n            }\n            subscriber.complete();\n        }, handleError, function () {\n            while (0 < windows.length) {\n                windows.shift().unsubscribe();\n            }\n        }));\n    });\n}\n//# sourceMappingURL=windowToggle.js.map"]},"metadata":{},"sourceType":"module"}