{"ast":null,"code":"import { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function sample(notifier) {\n  return operate(function (source, subscriber) {\n    var hasValue = false;\n    var lastValue = null;\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      hasValue = true;\n      lastValue = value;\n    }));\n    innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, function () {\n      if (hasValue) {\n        hasValue = false;\n        var value = lastValue;\n        lastValue = null;\n        subscriber.next(value);\n      }\n    }, noop));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/sample.ts"],"names":[],"mappings":"AAAA,SAAS,SAAS,QAAQ,yBAAyB;AAEnD,SAAS,OAAO,QAAQ,cAAc;AACtC,SAAS,IAAI,QAAQ,cAAc;AACnC,SAAS,wBAAwB,QAAQ,sBAAsB;AA0C/D,OAAM,SAAU,MAAM,CAAI,QAA8B,EAAA;EACtD,OAAO,OAAO,CAAC,UAAC,MAAM,EAAE,UAAU,EAAA;IAChC,IAAI,QAAQ,GAAG,KAAK;IACpB,IAAI,SAAS,GAAa,IAAI;IAC9B,MAAM,CAAC,SAAS,CACd,wBAAwB,CAAC,UAAU,EAAE,UAAC,KAAK,EAAA;MACzC,QAAQ,GAAG,IAAI;MACf,SAAS,GAAG,KAAK;IACnB,CAAC,CAAC,CACH;IACD,SAAS,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC3B,wBAAwB,CACtB,UAAU,EACV,YAAA;MACE,IAAI,QAAQ,EAAE;QACZ,QAAQ,GAAG,KAAK;QAChB,IAAM,KAAK,GAAG,SAAU;QACxB,SAAS,GAAG,IAAI;QAChB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;MACvB;IACH,CAAC,EACD,IAAI,CACL,CACF;EACH,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["import { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { noop } from '../util/noop';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function sample(notifier) {\n    return operate(function (source, subscriber) {\n        var hasValue = false;\n        var lastValue = null;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            hasValue = true;\n            lastValue = value;\n        }));\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, function () {\n            if (hasValue) {\n                hasValue = false;\n                var value = lastValue;\n                lastValue = null;\n                subscriber.next(value);\n            }\n        }, noop));\n    });\n}\n//# sourceMappingURL=sample.js.map"]},"metadata":{},"sourceType":"module"}