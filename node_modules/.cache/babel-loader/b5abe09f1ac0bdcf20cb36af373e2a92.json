{"ast":null,"code":"import { reduce } from './reduce';\nexport function count(predicate) {\n  return reduce(function (total, value, i) {\n    return !predicate || predicate(value, i) ? total + 1 : total;\n  }, 0);\n}","map":{"version":3,"sources":["../../../../src/internal/operators/count.ts"],"names":[],"mappings":"AACA,SAAS,MAAM,QAAQ,UAAU;AAyDjC,OAAM,SAAU,KAAK,CAAI,SAAgD,EAAA;EACvE,OAAO,MAAM,CAAC,UAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAA;IAAK,OAAC,CAAC,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK;EAAtD,CAAuD,EAAE,CAAC,CAAC;AAChG","sourceRoot":"","sourcesContent":["import { reduce } from './reduce';\nexport function count(predicate) {\n    return reduce(function (total, value, i) { return (!predicate || predicate(value, i) ? total + 1 : total); }, 0);\n}\n//# sourceMappingURL=count.js.map"]},"metadata":{},"sourceType":"module"}