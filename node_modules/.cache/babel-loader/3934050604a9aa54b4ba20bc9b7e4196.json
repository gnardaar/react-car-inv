{"ast":null,"code":"import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n  return new Observable(function (subscriber) {\n    var iterator;\n    executeSchedule(subscriber, scheduler, function () {\n      iterator = input[Symbol_iterator]();\n      executeSchedule(subscriber, scheduler, function () {\n        var _a;\n        var value;\n        var done;\n        try {\n          _a = iterator.next(), value = _a.value, done = _a.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n        }\n      }, 0, true);\n    });\n    return function () {\n      return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return();\n    };\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/scheduled/scheduleIterable.ts"],"names":[],"mappings":"AAAA,SAAS,UAAU,QAAQ,eAAe;AAE1C,SAAS,QAAQ,IAAI,eAAe,QAAQ,oBAAoB;AAChE,SAAS,UAAU,QAAQ,oBAAoB;AAC/C,SAAS,eAAe,QAAQ,yBAAyB;AAOzD,OAAM,SAAU,gBAAgB,CAAI,KAAkB,EAAE,SAAwB,EAAA;EAC9E,OAAO,IAAI,UAAU,CAAI,UAAC,UAAU,EAAA;IAClC,IAAI,QAAwB;IAK5B,eAAe,CAAC,UAAU,EAAE,SAAS,EAAE,YAAA;MAErC,QAAQ,GAAI,KAAa,CAAC,eAAe,CAAC,EAAE;MAE5C,eAAe,CACb,UAAU,EACV,SAAS,EACT,YAAA;;QACE,IAAI,KAAQ;QACZ,IAAI,IAAyB;QAC7B,IAAI;UAED,EAAA,GAAkB,QAAQ,CAAC,IAAI,EAAE,EAA/B,KAAK,GAAA,EAAA,CAAA,KAAA,EAAE,IAAI,GAAA,EAAA,CAAA,IAAA;SACf,CAAC,OAAO,GAAG,EAAE;UAEZ,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC;UACrB;QACD;QAED,IAAI,IAAI,EAAE;UAKR,UAAU,CAAC,QAAQ,EAAE;SACtB,MAAM;UAEL,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;QACvB;MACH,CAAC,EACD,CAAC,EACD,IAAI,CACL;IACH,CAAC,CAAC;IAMF,OAAO,YAAA;MAAM,OAAA,UAAU,CAAC,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAR,QAAQ,CAAE,MAAM,CAAC,IAAI,QAAQ,CAAC,MAAM,EAAE;IAAjD,CAAiD;EAChE,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var iterator;\n        executeSchedule(subscriber, scheduler, function () {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                var _a;\n                var value;\n                var done;\n                try {\n                    (_a = iterator.next(), value = _a.value, done = _a.done);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return function () { return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return(); };\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map"]},"metadata":{},"sourceType":"module"}