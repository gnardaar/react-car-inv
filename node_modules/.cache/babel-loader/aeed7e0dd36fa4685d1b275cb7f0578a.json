{"ast":null,"code":"import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function combineLatest() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var scheduler = popScheduler(args);\n  var resultSelector = popResultSelector(args);\n  var _a = argsArgArrayOrObject(args),\n    observables = _a.args,\n    keys = _a.keys;\n  if (observables.length === 0) {\n    return from([], scheduler);\n  }\n  var result = new Observable(combineLatestInit(observables, scheduler, keys ? function (values) {\n    return createObject(keys, values);\n  } : identity));\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\nexport function combineLatestInit(observables, scheduler, valueTransform) {\n  if (valueTransform === void 0) {\n    valueTransform = identity;\n  }\n  return function (subscriber) {\n    maybeSchedule(scheduler, function () {\n      var length = observables.length;\n      var values = new Array(length);\n      var active = length;\n      var remainingFirstValues = length;\n      var _loop_1 = function _loop_1(i) {\n        maybeSchedule(scheduler, function () {\n          var source = from(observables[i], scheduler);\n          var hasFirstValue = false;\n          source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            values[i] = value;\n            if (!hasFirstValue) {\n              hasFirstValue = true;\n              remainingFirstValues--;\n            }\n            if (!remainingFirstValues) {\n              subscriber.next(valueTransform(values.slice()));\n            }\n          }, function () {\n            if (! --active) {\n              subscriber.complete();\n            }\n          }));\n        }, subscriber);\n      };\n      for (var i = 0; i < length; i++) {\n        _loop_1(i);\n      }\n    }, subscriber);\n  };\n}\nfunction maybeSchedule(scheduler, execute, subscription) {\n  if (scheduler) {\n    executeSchedule(subscription, scheduler, execute);\n  } else {\n    execute();\n  }\n}","map":{"version":3,"sources":["../../../../src/internal/observable/combineLatest.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function combineLatest() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    var resultSelector = popResultSelector(args);\n    var _a = argsArgArrayOrObject(args), observables = _a.args, keys = _a.keys;\n    if (observables.length === 0) {\n        return from([], scheduler);\n    }\n    var result = new Observable(combineLatestInit(observables, scheduler, keys\n        ?\n            function (values) { return createObject(keys, values); }\n        :\n            identity));\n    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\nexport function combineLatestInit(observables, scheduler, valueTransform) {\n    if (valueTransform === void 0) { valueTransform = identity; }\n    return function (subscriber) {\n        maybeSchedule(scheduler, function () {\n            var length = observables.length;\n            var values = new Array(length);\n            var active = length;\n            var remainingFirstValues = length;\n            var _loop_1 = function (i) {\n                maybeSchedule(scheduler, function () {\n                    var source = from(observables[i], scheduler);\n                    var hasFirstValue = false;\n                    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                        values[i] = value;\n                        if (!hasFirstValue) {\n                            hasFirstValue = true;\n                            remainingFirstValues--;\n                        }\n                        if (!remainingFirstValues) {\n                            subscriber.next(valueTransform(values.slice()));\n                        }\n                    }, function () {\n                        if (!--active) {\n                            subscriber.complete();\n                        }\n                    }));\n                }, subscriber);\n            };\n            for (var i = 0; i < length; i++) {\n                _loop_1(i);\n            }\n        }, subscriber);\n    };\n}\nfunction maybeSchedule(scheduler, execute, subscription) {\n    if (scheduler) {\n        executeSchedule(subscription, scheduler, execute);\n    }\n    else {\n        execute();\n    }\n}\n//# sourceMappingURL=combineLatest.js.map"]},"metadata":{},"sourceType":"module"}