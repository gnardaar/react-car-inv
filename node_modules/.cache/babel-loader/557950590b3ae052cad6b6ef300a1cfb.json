{"ast":null,"code":"import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function windowTime(windowTimeSpan) {\n  var _a, _b;\n  var otherArgs = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    otherArgs[_i - 1] = arguments[_i];\n  }\n  var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n  var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n  var maxWindowSize = otherArgs[1] || Infinity;\n  return operate(function (source, subscriber) {\n    var windowRecords = [];\n    var restartOnClose = false;\n    var closeWindow = function closeWindow(record) {\n      var window = record.window,\n        subs = record.subs;\n      window.complete();\n      subs.unsubscribe();\n      arrRemove(windowRecords, record);\n      restartOnClose && startWindow();\n    };\n    var startWindow = function startWindow() {\n      if (windowRecords) {\n        var subs = new Subscription();\n        subscriber.add(subs);\n        var window_1 = new Subject();\n        var record_1 = {\n          window: window_1,\n          subs: subs,\n          seen: 0\n        };\n        windowRecords.push(record_1);\n        subscriber.next(window_1.asObservable());\n        executeSchedule(subs, scheduler, function () {\n          return closeWindow(record_1);\n        }, windowTimeSpan);\n      }\n    };\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n    } else {\n      restartOnClose = true;\n    }\n    startWindow();\n    var loop = function loop(cb) {\n      return windowRecords.slice().forEach(cb);\n    };\n    var terminate = function terminate(cb) {\n      loop(function (_a) {\n        var window = _a.window;\n        return cb(window);\n      });\n      cb(subscriber);\n      subscriber.unsubscribe();\n    };\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      loop(function (record) {\n        record.window.next(value);\n        maxWindowSize <= ++record.seen && closeWindow(record);\n      });\n    }, function () {\n      return terminate(function (consumer) {\n        return consumer.complete();\n      });\n    }, function (err) {\n      return terminate(function (consumer) {\n        return consumer.error(err);\n      });\n    }));\n    return function () {\n      windowRecords = null;\n    };\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/windowTime.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Subject } from '../Subject';\nimport { asyncScheduler } from '../scheduler/async';\nimport { Subscription } from '../Subscription';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\nimport { popScheduler } from '../util/args';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function windowTime(windowTimeSpan) {\n    var _a, _b;\n    var otherArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherArgs[_i - 1] = arguments[_i];\n    }\n    var scheduler = (_a = popScheduler(otherArgs)) !== null && _a !== void 0 ? _a : asyncScheduler;\n    var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;\n    var maxWindowSize = otherArgs[1] || Infinity;\n    return operate(function (source, subscriber) {\n        var windowRecords = [];\n        var restartOnClose = false;\n        var closeWindow = function (record) {\n            var window = record.window, subs = record.subs;\n            window.complete();\n            subs.unsubscribe();\n            arrRemove(windowRecords, record);\n            restartOnClose && startWindow();\n        };\n        var startWindow = function () {\n            if (windowRecords) {\n                var subs = new Subscription();\n                subscriber.add(subs);\n                var window_1 = new Subject();\n                var record_1 = {\n                    window: window_1,\n                    subs: subs,\n                    seen: 0,\n                };\n                windowRecords.push(record_1);\n                subscriber.next(window_1.asObservable());\n                executeSchedule(subs, scheduler, function () { return closeWindow(record_1); }, windowTimeSpan);\n            }\n        };\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);\n        }\n        else {\n            restartOnClose = true;\n        }\n        startWindow();\n        var loop = function (cb) { return windowRecords.slice().forEach(cb); };\n        var terminate = function (cb) {\n            loop(function (_a) {\n                var window = _a.window;\n                return cb(window);\n            });\n            cb(subscriber);\n            subscriber.unsubscribe();\n        };\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            loop(function (record) {\n                record.window.next(value);\n                maxWindowSize <= ++record.seen && closeWindow(record);\n            });\n        }, function () { return terminate(function (consumer) { return consumer.complete(); }); }, function (err) { return terminate(function (consumer) { return consumer.error(err); }); }));\n        return function () {\n            windowRecords = null;\n        };\n    });\n}\n//# sourceMappingURL=windowTime.js.map"]},"metadata":{},"sourceType":"module"}