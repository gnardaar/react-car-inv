{"ast":null,"code":"import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime, intervalOrScheduler, scheduler) {\n  if (dueTime === void 0) {\n    dueTime = 0;\n  }\n  if (scheduler === void 0) {\n    scheduler = asyncScheduler;\n  }\n  var intervalDuration = -1;\n  if (intervalOrScheduler != null) {\n    if (isScheduler(intervalOrScheduler)) {\n      scheduler = intervalOrScheduler;\n    } else {\n      intervalDuration = intervalOrScheduler;\n    }\n  }\n  return new Observable(function (subscriber) {\n    var due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n    if (due < 0) {\n      due = 0;\n    }\n    var n = 0;\n    return scheduler.schedule(function () {\n      if (!subscriber.closed) {\n        subscriber.next(n++);\n        if (0 <= intervalDuration) {\n          this.schedule(undefined, intervalDuration);\n        } else {\n          subscriber.complete();\n        }\n      }\n    }, due);\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/observable/timer.ts"],"names":[],"mappings":"AAAA,SAAS,UAAU,QAAQ,eAAe;AAE1C,SAAS,KAAK,IAAI,cAAc,QAAQ,oBAAoB;AAC5D,SAAS,WAAW,QAAQ,qBAAqB;AACjD,SAAS,WAAW,QAAQ,gBAAgB;AAgI5C,OAAM,SAAU,KAAK,CACnB,OAA0B,EAC1B,mBAA4C,EAC5C,SAAyC,EAAA;EAFzC,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA;IAAA,OAAA,GAAA,CAA0B;EAAA;EAE1B,IAAA,SAAA,KAAA,KAAA,CAAA,EAAA;IAAA,SAAA,GAAA,cAAyC;EAAA;EAIzC,IAAI,gBAAgB,GAAG,CAAC,CAAC;EAEzB,IAAI,mBAAmB,IAAI,IAAI,EAAE;IAI/B,IAAI,WAAW,CAAC,mBAAmB,CAAC,EAAE;MACpC,SAAS,GAAG,mBAAmB;KAChC,MAAM;MAGL,gBAAgB,GAAG,mBAAmB;IACvC;EACF;EAED,OAAO,IAAI,UAAU,CAAC,UAAC,UAAU,EAAA;IAI/B,IAAI,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,SAAU,CAAC,GAAG,EAAE,GAAG,OAAO;IAEtE,IAAI,GAAG,GAAG,CAAC,EAAE;MAEX,GAAG,GAAG,CAAC;IACR;IAGD,IAAI,CAAC,GAAG,CAAC;IAGT,OAAO,SAAS,CAAC,QAAQ,CAAC,YAAA;MACxB,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;QAEtB,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;QAEpB,IAAI,CAAC,IAAI,gBAAgB,EAAE;UAGzB,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,gBAAgB,CAAC;SAC3C,MAAM;UAEL,UAAU,CAAC,QAAQ,EAAE;QACtB;MACF;IACH,CAAC,EAAE,GAAG,CAAC;EACT,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime, intervalOrScheduler, scheduler) {\n    if (dueTime === void 0) { dueTime = 0; }\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    var intervalDuration = -1;\n    if (intervalOrScheduler != null) {\n        if (isScheduler(intervalOrScheduler)) {\n            scheduler = intervalOrScheduler;\n        }\n        else {\n            intervalDuration = intervalOrScheduler;\n        }\n    }\n    return new Observable(function (subscriber) {\n        var due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n        if (due < 0) {\n            due = 0;\n        }\n        var n = 0;\n        return scheduler.schedule(function () {\n            if (!subscriber.closed) {\n                subscriber.next(n++);\n                if (0 <= intervalDuration) {\n                    this.schedule(undefined, intervalDuration);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        }, due);\n    });\n}\n//# sourceMappingURL=timer.js.map"]},"metadata":{},"sourceType":"module"}