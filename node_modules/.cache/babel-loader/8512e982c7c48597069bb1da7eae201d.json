{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nvar ReplaySubject = function (_super) {\n  __extends(ReplaySubject, _super);\n  function ReplaySubject(_bufferSize, _windowTime, _timestampProvider) {\n    if (_bufferSize === void 0) {\n      _bufferSize = Infinity;\n    }\n    if (_windowTime === void 0) {\n      _windowTime = Infinity;\n    }\n    if (_timestampProvider === void 0) {\n      _timestampProvider = dateTimestampProvider;\n    }\n    var _this = _super.call(this) || this;\n    _this._bufferSize = _bufferSize;\n    _this._windowTime = _windowTime;\n    _this._timestampProvider = _timestampProvider;\n    _this._buffer = [];\n    _this._infiniteTimeWindow = true;\n    _this._infiniteTimeWindow = _windowTime === Infinity;\n    _this._bufferSize = Math.max(1, _bufferSize);\n    _this._windowTime = Math.max(1, _windowTime);\n    return _this;\n  }\n  ReplaySubject.prototype.next = function (value) {\n    var _a = this,\n      isStopped = _a.isStopped,\n      _buffer = _a._buffer,\n      _infiniteTimeWindow = _a._infiniteTimeWindow,\n      _timestampProvider = _a._timestampProvider,\n      _windowTime = _a._windowTime;\n    if (!isStopped) {\n      _buffer.push(value);\n      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n    }\n    this._trimBuffer();\n    _super.prototype.next.call(this, value);\n  };\n  ReplaySubject.prototype._subscribe = function (subscriber) {\n    this._throwIfClosed();\n    this._trimBuffer();\n    var subscription = this._innerSubscribe(subscriber);\n    var _a = this,\n      _infiniteTimeWindow = _a._infiniteTimeWindow,\n      _buffer = _a._buffer;\n    var copy = _buffer.slice();\n    for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n      subscriber.next(copy[i]);\n    }\n    this._checkFinalizedStatuses(subscriber);\n    return subscription;\n  };\n  ReplaySubject.prototype._trimBuffer = function () {\n    var _a = this,\n      _bufferSize = _a._bufferSize,\n      _timestampProvider = _a._timestampProvider,\n      _buffer = _a._buffer,\n      _infiniteTimeWindow = _a._infiniteTimeWindow;\n    var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n    if (!_infiniteTimeWindow) {\n      var now = _timestampProvider.now();\n      var last = 0;\n      for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n        last = i;\n      }\n      last && _buffer.splice(0, last + 1);\n    }\n  };\n  return ReplaySubject;\n}(Subject);\nexport { ReplaySubject };","map":{"version":3,"sources":["../../../src/internal/ReplaySubject.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(_bufferSize, _windowTime, _timestampProvider) {\n        if (_bufferSize === void 0) { _bufferSize = Infinity; }\n        if (_windowTime === void 0) { _windowTime = Infinity; }\n        if (_timestampProvider === void 0) { _timestampProvider = dateTimestampProvider; }\n        var _this = _super.call(this) || this;\n        _this._bufferSize = _bufferSize;\n        _this._windowTime = _windowTime;\n        _this._timestampProvider = _timestampProvider;\n        _this._buffer = [];\n        _this._infiniteTimeWindow = true;\n        _this._infiniteTimeWindow = _windowTime === Infinity;\n        _this._bufferSize = Math.max(1, _bufferSize);\n        _this._windowTime = Math.max(1, _windowTime);\n        return _this;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var _a = this, isStopped = _a.isStopped, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow, _timestampProvider = _a._timestampProvider, _windowTime = _a._windowTime;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        var subscription = this._innerSubscribe(subscriber);\n        var _a = this, _infiniteTimeWindow = _a._infiniteTimeWindow, _buffer = _a._buffer;\n        var copy = _buffer.slice();\n        for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    };\n    ReplaySubject.prototype._trimBuffer = function () {\n        var _a = this, _bufferSize = _a._bufferSize, _timestampProvider = _a._timestampProvider, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow;\n        var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            var now = _timestampProvider.now();\n            var last = 0;\n            for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    };\n    return ReplaySubject;\n}(Subject));\nexport { ReplaySubject };\n//# sourceMappingURL=ReplaySubject.js.map"]},"metadata":{},"sourceType":"module"}