{"ast":null,"code":"import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function skipLast(skipCount) {\n  return skipCount <= 0 ? identity : operate(function (source, subscriber) {\n    var ring = new Array(skipCount);\n    var seen = 0;\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      var valueIndex = seen++;\n      if (valueIndex < skipCount) {\n        ring[valueIndex] = value;\n      } else {\n        var index = valueIndex % skipCount;\n        var oldValue = ring[index];\n        ring[index] = value;\n        subscriber.next(oldValue);\n      }\n    }));\n    return function () {\n      ring = null;\n    };\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/skipLast.ts"],"names":[],"mappings":"AACA,SAAS,QAAQ,QAAQ,kBAAkB;AAC3C,SAAS,OAAO,QAAQ,cAAc;AACtC,SAAS,wBAAwB,QAAQ,sBAAsB;AA4C/D,OAAM,SAAU,QAAQ,CAAI,SAAiB,EAAA;EAC3C,OAAO,SAAS,IAAI,CAAC,GAEjB,QAAQ,GACR,OAAO,CAAC,UAAC,MAAM,EAAE,UAAU,EAAA;IAIzB,IAAI,IAAI,GAAQ,IAAI,KAAK,CAAC,SAAS,CAAC;IAGpC,IAAI,IAAI,GAAG,CAAC;IACZ,MAAM,CAAC,SAAS,CACd,wBAAwB,CAAC,UAAU,EAAE,UAAC,KAAK,EAAA;MAKzC,IAAM,UAAU,GAAG,IAAI,EAAE;MACzB,IAAI,UAAU,GAAG,SAAS,EAAE;QAI1B,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK;OACzB,MAAM;QAIL,IAAM,KAAK,GAAG,UAAU,GAAG,SAAS;QAGpC,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK;QAKnB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;MAC1B;IACH,CAAC,CAAC,CACH;IAED,OAAO,YAAA;MAEL,IAAI,GAAG,IAAK;IACd,CAAC;EACH,CAAC,CAAC;AACR","sourceRoot":"","sourcesContent":["import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function skipLast(skipCount) {\n    return skipCount <= 0\n        ?\n            identity\n        : operate(function (source, subscriber) {\n            var ring = new Array(skipCount);\n            var seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                var valueIndex = seen++;\n                if (valueIndex < skipCount) {\n                    ring[valueIndex] = value;\n                }\n                else {\n                    var index = valueIndex % skipCount;\n                    var oldValue = ring[index];\n                    ring[index] = value;\n                    subscriber.next(oldValue);\n                }\n            }));\n            return function () {\n                ring = null;\n            };\n        });\n}\n//# sourceMappingURL=skipLast.js.map"]},"metadata":{},"sourceType":"module"}