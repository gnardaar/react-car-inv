{"ast":null,"code":"import { Observable } from '../Observable';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\nexport function onErrorResumeNext() {\n  var sources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n  var nextSources = argsOrArgArray(sources);\n  return new Observable(function (subscriber) {\n    var sourceIndex = 0;\n    var subscribeNext = function subscribeNext() {\n      if (sourceIndex < nextSources.length) {\n        var nextSource = void 0;\n        try {\n          nextSource = innerFrom(nextSources[sourceIndex++]);\n        } catch (err) {\n          subscribeNext();\n          return;\n        }\n        var innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n        nextSource.subscribe(innerSubscriber);\n        innerSubscriber.add(subscribeNext);\n      } else {\n        subscriber.complete();\n      }\n    };\n    subscribeNext();\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/observable/onErrorResumeNext.ts"],"names":[],"mappings":"AAAA,SAAS,UAAU,QAAQ,eAAe;AAE1C,SAAS,cAAc,QAAQ,wBAAwB;AACvD,SAAS,kBAAkB,QAAQ,iCAAiC;AACpE,SAAS,IAAI,QAAQ,cAAc;AACnC,SAAS,SAAS,QAAQ,aAAa;AAsEvC,OAAM,SAAU,iBAAiB,GAAA;EAC/B,IAAA,OAAA,GAAA,EAAA;OAAA,IAAA,EAAA,GAAA,CAAyE,EAAzE,EAAA,GAAA,SAAA,CAAA,MAAyE,EAAzE,EAAA,EAAyE,EAAA;IAAzE,OAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;EAEA,IAAM,WAAW,GAA4B,cAAc,CAAC,OAAO,CAAQ;EAE3E,OAAO,IAAI,UAAU,CAAC,UAAC,UAAU,EAAA;IAC/B,IAAI,WAAW,GAAG,CAAC;IACnB,IAAM,aAAa,GAAG,SAAhB,aAAa,GAAG;MACpB,IAAI,WAAW,GAAG,WAAW,CAAC,MAAM,EAAE;QACpC,IAAI,UAAU,GAAA,KAAA,CAAuB;QACrC,IAAI;UACF,UAAU,GAAG,SAAS,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC;SACnD,CAAC,OAAO,GAAG,EAAE;UACZ,aAAa,EAAE;UACf;QACD;QACD,IAAM,eAAe,GAAG,IAAI,kBAAkB,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC;QACjF,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC;QACrC,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC;OACnC,MAAM;QACL,UAAU,CAAC,QAAQ,EAAE;MACtB;IACH,CAAC;IACD,aAAa,EAAE;EACjB,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["import { Observable } from '../Observable';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { OperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from './innerFrom';\nexport function onErrorResumeNext() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    var nextSources = argsOrArgArray(sources);\n    return new Observable(function (subscriber) {\n        var sourceIndex = 0;\n        var subscribeNext = function () {\n            if (sourceIndex < nextSources.length) {\n                var nextSource = void 0;\n                try {\n                    nextSource = innerFrom(nextSources[sourceIndex++]);\n                }\n                catch (err) {\n                    subscribeNext();\n                    return;\n                }\n                var innerSubscriber = new OperatorSubscriber(subscriber, undefined, noop, noop);\n                nextSource.subscribe(innerSubscriber);\n                innerSubscriber.add(subscribeNext);\n            }\n            else {\n                subscriber.complete();\n            }\n        };\n        subscribeNext();\n    });\n}\n//# sourceMappingURL=onErrorResumeNext.js.map"]},"metadata":{},"sourceType":"module"}