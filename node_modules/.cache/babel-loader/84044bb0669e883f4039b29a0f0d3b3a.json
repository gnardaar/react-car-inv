{"ast":null,"code":"import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\nexport function distinct(keySelector, flushes) {\n  return operate(function (source, subscriber) {\n    var distinctKeys = new Set();\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      var key = keySelector ? keySelector(value) : value;\n      if (!distinctKeys.has(key)) {\n        distinctKeys.add(key);\n        subscriber.next(value);\n      }\n    }));\n    flushes && innerFrom(flushes).subscribe(createOperatorSubscriber(subscriber, function () {\n      return distinctKeys.clear();\n    }, noop));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/distinct.ts"],"names":[],"mappings":"AACA,SAAS,OAAO,QAAQ,cAAc;AACtC,SAAS,wBAAwB,QAAQ,sBAAsB;AAC/D,SAAS,IAAI,QAAQ,cAAc;AACnC,SAAS,SAAS,QAAQ,yBAAyB;AA2DnD,OAAM,SAAU,QAAQ,CAAO,WAA6B,EAAE,OAA8B,EAAA;EAC1F,OAAO,OAAO,CAAC,UAAC,MAAM,EAAE,UAAU,EAAA;IAChC,IAAM,YAAY,GAAG,IAAI,GAAG,EAAE;IAC9B,MAAM,CAAC,SAAS,CACd,wBAAwB,CAAC,UAAU,EAAE,UAAC,KAAK,EAAA;MACzC,IAAM,GAAG,GAAG,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK;MACpD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QAC1B,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC;QACrB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;MACvB;IACH,CAAC,CAAC,CACH;IAED,OAAO,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,wBAAwB,CAAC,UAAU,EAAE,YAAA;MAAM,OAAA,YAAY,CAAC,KAAK,EAAE;IAApB,CAAoB,EAAE,IAAI,CAAC,CAAC;EACjH,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\nexport function distinct(keySelector, flushes) {\n    return operate(function (source, subscriber) {\n        var distinctKeys = new Set();\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var key = keySelector ? keySelector(value) : value;\n            if (!distinctKeys.has(key)) {\n                distinctKeys.add(key);\n                subscriber.next(value);\n            }\n        }));\n        flushes && innerFrom(flushes).subscribe(createOperatorSubscriber(subscriber, function () { return distinctKeys.clear(); }, noop));\n    });\n}\n//# sourceMappingURL=distinct.js.map"]},"metadata":{},"sourceType":"module"}