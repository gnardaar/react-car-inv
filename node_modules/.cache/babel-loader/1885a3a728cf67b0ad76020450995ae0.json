{"ast":null,"code":"import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent) {\n  if (concurrent === void 0) {\n    concurrent = Infinity;\n  }\n  return mergeMap(identity, concurrent);\n}","map":{"version":3,"sources":["../../../../src/internal/operators/mergeAll.ts"],"names":[],"mappings":"AAAA,SAAS,QAAQ,QAAQ,YAAY;AACrC,SAAS,QAAQ,QAAQ,kBAAkB;AA8D3C,OAAM,SAAU,QAAQ,CAAiC,UAA6B,EAAA;EAA7B,IAAA,UAAA,KAAA,KAAA,CAAA,EAAA;IAAA,UAAA,GAAA,QAA6B;EAAA;EACpF,OAAO,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC;AACvC","sourceRoot":"","sourcesContent":["import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map"]},"metadata":{},"sourceType":"module"}