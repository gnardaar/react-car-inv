{"ast":null,"code":"import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    }\n    if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }\n    if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    }\n    if (isAsyncIterable(input)) {\n      return scheduleAsyncIterable(input, scheduler);\n    }\n    if (isIterable(input)) {\n      return scheduleIterable(input, scheduler);\n    }\n    if (isReadableStreamLike(input)) {\n      return scheduleReadableStreamLike(input, scheduler);\n    }\n  }\n  throw createInvalidObservableTypeError(input);\n}","map":{"version":3,"sources":["../../../../src/internal/scheduled/scheduled.ts"],"names":[],"mappings":"AAAA,SAAS,kBAAkB,QAAQ,sBAAsB;AACzD,SAAS,eAAe,QAAQ,mBAAmB;AACnD,SAAS,aAAa,QAAQ,iBAAiB;AAC/C,SAAS,gBAAgB,QAAQ,oBAAoB;AACrD,SAAS,qBAAqB,QAAQ,yBAAyB;AAC/D,SAAS,mBAAmB,QAAQ,6BAA6B;AACjE,SAAS,SAAS,QAAQ,mBAAmB;AAC7C,SAAS,WAAW,QAAQ,qBAAqB;AACjD,SAAS,UAAU,QAAQ,oBAAoB;AAG/C,SAAS,eAAe,QAAQ,yBAAyB;AACzD,SAAS,gCAAgC,QAAQ,gCAAgC;AACjF,SAAS,oBAAoB,QAAQ,8BAA8B;AACnE,SAAS,0BAA0B,QAAQ,8BAA8B;AAazE,OAAM,SAAU,SAAS,CAAI,KAAyB,EAAE,SAAwB,EAAA;EAC9E,IAAI,KAAK,IAAI,IAAI,EAAE;IACjB,IAAI,mBAAmB,CAAC,KAAK,CAAC,EAAE;MAC9B,OAAO,kBAAkB,CAAC,KAAK,EAAE,SAAS,CAAC;IAC5C;IACD,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;MACtB,OAAO,aAAa,CAAC,KAAK,EAAE,SAAS,CAAC;IACvC;IACD,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;MACpB,OAAO,eAAe,CAAC,KAAK,EAAE,SAAS,CAAC;IACzC;IACD,IAAI,eAAe,CAAC,KAAK,CAAC,EAAE;MAC1B,OAAO,qBAAqB,CAAC,KAAK,EAAE,SAAS,CAAC;IAC/C;IACD,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;MACrB,OAAO,gBAAgB,CAAC,KAAK,EAAE,SAAS,CAAC;IAC1C;IACD,IAAI,oBAAoB,CAAC,KAAK,CAAC,EAAE;MAC/B,OAAO,0BAA0B,CAAC,KAAK,EAAE,SAAS,CAAC;IACpD;EACF;EACD,MAAM,gCAAgC,CAAC,KAAK,CAAC;AAC/C","sourceRoot":"","sourcesContent":["import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n//# sourceMappingURL=scheduled.js.map"]},"metadata":{},"sourceType":"module"}