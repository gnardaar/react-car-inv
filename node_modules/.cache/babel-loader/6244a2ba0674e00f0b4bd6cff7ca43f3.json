{"ast":null,"code":"import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function retryWhen(notifier) {\n  return operate(function (source, subscriber) {\n    var innerSub;\n    var syncResub = false;\n    var errors$;\n    var subscribeForRetryWhen = function subscribeForRetryWhen() {\n      innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, undefined, function (err) {\n        if (!errors$) {\n          errors$ = new Subject();\n          innerFrom(notifier(errors$)).subscribe(createOperatorSubscriber(subscriber, function () {\n            return innerSub ? subscribeForRetryWhen() : syncResub = true;\n          }));\n        }\n        if (errors$) {\n          errors$.next(err);\n        }\n      }));\n      if (syncResub) {\n        innerSub.unsubscribe();\n        innerSub = null;\n        syncResub = false;\n        subscribeForRetryWhen();\n      }\n    };\n    subscribeForRetryWhen();\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/retryWhen.ts"],"names":[],"mappings":"AACA,SAAS,SAAS,QAAQ,yBAAyB;AACnD,SAAS,OAAO,QAAQ,YAAY;AAIpC,SAAS,OAAO,QAAQ,cAAc;AACtC,SAAS,wBAAwB,QAAQ,sBAAsB;AA2D/D,OAAM,SAAU,SAAS,CAAI,QAA2D,EAAA;EACtF,OAAO,OAAO,CAAC,UAAC,MAAM,EAAE,UAAU,EAAA;IAChC,IAAI,QAA6B;IACjC,IAAI,SAAS,GAAG,KAAK;IACrB,IAAI,OAAqB;IAEzB,IAAM,qBAAqB,GAAG,SAAxB,qBAAqB,GAAG;MAC5B,QAAQ,GAAG,MAAM,CAAC,SAAS,CACzB,wBAAwB,CAAC,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,UAAC,GAAG,EAAA;QAC7D,IAAI,CAAC,OAAO,EAAE;UACZ,OAAO,GAAG,IAAI,OAAO,EAAE;UACvB,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CACpC,wBAAwB,CAAC,UAAU,EAAE,YAAA;YAMnC,OAAA,QAAQ,GAAG,qBAAqB,EAAE,GAAI,SAAS,GAAG,IAAK;UAAvD,CAAuD,CACxD,CACF;QACF;QACD,IAAI,OAAO,EAAE;UAEX,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;QAClB;MACH,CAAC,CAAC,CACH;MAED,IAAI,SAAS,EAAE;QAKb,QAAQ,CAAC,WAAW,EAAE;QACtB,QAAQ,GAAG,IAAI;QAEf,SAAS,GAAG,KAAK;QAEjB,qBAAqB,EAAE;MACxB;IACH,CAAC;IAGD,qBAAqB,EAAE;EACzB,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["import { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function retryWhen(notifier) {\n    return operate(function (source, subscriber) {\n        var innerSub;\n        var syncResub = false;\n        var errors$;\n        var subscribeForRetryWhen = function () {\n            innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, undefined, function (err) {\n                if (!errors$) {\n                    errors$ = new Subject();\n                    innerFrom(notifier(errors$)).subscribe(createOperatorSubscriber(subscriber, function () {\n                        return innerSub ? subscribeForRetryWhen() : (syncResub = true);\n                    }));\n                }\n                if (errors$) {\n                    errors$.next(err);\n                }\n            }));\n            if (syncResub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                syncResub = false;\n                subscribeForRetryWhen();\n            }\n        };\n        subscribeForRetryWhen();\n    });\n}\n//# sourceMappingURL=retryWhen.js.map"]},"metadata":{},"sourceType":"module"}