{"ast":null,"code":"import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nexport function race() {\n  var sources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n  sources = argsOrArgArray(sources);\n  return sources.length === 1 ? innerFrom(sources[0]) : new Observable(raceInit(sources));\n}\nexport function raceInit(sources) {\n  return function (subscriber) {\n    var subscriptions = [];\n    var _loop_1 = function (i) {\n      subscriptions.push(innerFrom(sources[i]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n        if (subscriptions) {\n          for (var s = 0; s < subscriptions.length; s++) {\n            s !== i && subscriptions[s].unsubscribe();\n          }\n          subscriptions = null;\n        }\n        subscriber.next(value);\n      })));\n    };\n    for (var i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n      _loop_1(i);\n    }\n  };\n}","map":{"version":3,"sources":["../../../../src/internal/observable/race.ts"],"names":[],"mappings":"AAAA,SAAS,UAAU,QAAQ,eAAe;AAC1C,SAAS,SAAS,QAAQ,aAAa;AAGvC,SAAS,cAAc,QAAQ,wBAAwB;AACvD,SAAS,wBAAwB,QAAQ,iCAAiC;AA6C1E,OAAM,SAAU,IAAI,GAAA;EAAI,IAAA,OAAA,GAAA,EAAA;OAAA,IAAA,EAAA,GAAA,CAAyD,EAAzD,EAAA,GAAA,SAAA,CAAA,MAAyD,EAAzD,EAAA,EAAyD,EAAA;IAAzD,OAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;EACtB,OAAO,GAAG,cAAc,CAAC,OAAO,CAAC;EAEjC,OAAO,OAAO,CAAC,MAAM,KAAK,CAAC,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAuB,CAAC,GAAG,IAAI,UAAU,CAAI,QAAQ,CAAC,OAA+B,CAAC,CAAC;AAC1I;AAOA,OAAM,SAAU,QAAQ,CAAI,OAA6B,EAAA;EACvD,OAAO,UAAC,UAAyB,EAAA;IAC/B,IAAI,aAAa,GAAmB,EAAE;4BAM7B,CAAC,EAAA;MACR,aAAa,CAAC,IAAI,CAChB,SAAS,CAAC,OAAO,CAAC,CAAC,CAAuB,CAAC,CAAC,SAAS,CACnD,wBAAwB,CAAC,UAAU,EAAE,UAAC,KAAK,EAAA;QACzC,IAAI,aAAa,EAAE;UAGjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;UAC1C;UACD,aAAa,GAAG,IAAK;QACtB;QACD,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;MACxB,CAAC,CAAC,CACH,CACF;;IAfH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,aAAa,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAA;cAArE,CAAC,CAAA;IAgBT;EACH,CAAC;AACH","sourceRoot":"","sourcesContent":["import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nexport function race() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    sources = argsOrArgArray(sources);\n    return sources.length === 1 ? innerFrom(sources[0]) : new Observable(raceInit(sources));\n}\nexport function raceInit(sources) {\n    return function (subscriber) {\n        var subscriptions = [];\n        var _loop_1 = function (i) {\n            subscriptions.push(innerFrom(sources[i]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n                if (subscriptions) {\n                    for (var s = 0; s < subscriptions.length; s++) {\n                        s !== i && subscriptions[s].unsubscribe();\n                    }\n                    subscriptions = null;\n                }\n                subscriber.next(value);\n            })));\n        };\n        for (var i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {\n            _loop_1(i);\n        }\n    };\n}\n//# sourceMappingURL=race.js.map"]},"metadata":{},"sourceType":"module"}