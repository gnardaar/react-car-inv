{"ast":null,"code":"import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\nexport function repeat(countOrConfig) {\n  var _a;\n  var count = Infinity;\n  var delay;\n  if (countOrConfig != null) {\n    if (typeof countOrConfig === 'object') {\n      _a = countOrConfig.count, count = _a === void 0 ? Infinity : _a, delay = countOrConfig.delay;\n    } else {\n      count = countOrConfig;\n    }\n  }\n  return count <= 0 ? function () {\n    return EMPTY;\n  } : operate(function (source, subscriber) {\n    var soFar = 0;\n    var sourceSub;\n    var resubscribe = function () {\n      sourceSub === null || sourceSub === void 0 ? void 0 : sourceSub.unsubscribe();\n      sourceSub = null;\n      if (delay != null) {\n        var notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n        var notifierSubscriber_1 = createOperatorSubscriber(subscriber, function () {\n          notifierSubscriber_1.unsubscribe();\n          subscribeToSource();\n        });\n        notifier.subscribe(notifierSubscriber_1);\n      } else {\n        subscribeToSource();\n      }\n    };\n    var subscribeToSource = function () {\n      var syncUnsub = false;\n      sourceSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, function () {\n        if (++soFar < count) {\n          if (sourceSub) {\n            resubscribe();\n          } else {\n            syncUnsub = true;\n          }\n        } else {\n          subscriber.complete();\n        }\n      }));\n      if (syncUnsub) {\n        resubscribe();\n      }\n    };\n    subscribeToSource();\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/repeat.ts"],"names":[],"mappings":"AACA,SAAS,KAAK,QAAQ,qBAAqB;AAC3C,SAAS,OAAO,QAAQ,cAAc;AAEtC,SAAS,wBAAwB,QAAQ,sBAAsB;AAC/D,SAAS,SAAS,QAAQ,yBAAyB;AACnD,SAAS,KAAK,QAAQ,qBAAqB;AA6G3C,OAAM,SAAU,MAAM,CAAI,aAAqC,EAAA;;EAC7D,IAAI,KAAK,GAAG,QAAQ;EACpB,IAAI,KAA4B;EAEhC,IAAI,aAAa,IAAI,IAAI,EAAE;IACzB,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;MAClC,EAAA,GAA4B,aAAa,CAAA,KAAzB,EAAhB,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,QAAQ,GAAA,EAAA,EAAE,KAAK,GAAK,aAAa,CAAA,KAAlB;KAC3B,MAAM;MACL,KAAK,GAAG,aAAa;IACtB;EACF;EAED,OAAO,KAAK,IAAI,CAAC,GACb,YAAA;IAAM,OAAA,KAAK;EAAL,CAAK,GACX,OAAO,CAAC,UAAC,MAAM,EAAE,UAAU,EAAA;IACzB,IAAI,KAAK,GAAG,CAAC;IACb,IAAI,SAA8B;IAElC,IAAM,WAAW,GAAG,YAAA;MAClB,SAAS,KAAA,IAAA,IAAT,SAAS,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,SAAS,CAAE,WAAW,EAAE;MACxB,SAAS,GAAG,IAAI;MAChB,IAAI,KAAK,IAAI,IAAI,EAAE;QACjB,IAAM,QAAQ,GAAG,OAAO,KAAK,KAAK,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnF,IAAM,oBAAkB,GAAG,wBAAwB,CAAC,UAAU,EAAE,YAAA;UAC9D,oBAAkB,CAAC,WAAW,EAAE;UAChC,iBAAiB,EAAE;QACrB,CAAC,CAAC;QACF,QAAQ,CAAC,SAAS,CAAC,oBAAkB,CAAC;OACvC,MAAM;QACL,iBAAiB,EAAE;MACpB;IACH,CAAC;IAED,IAAM,iBAAiB,GAAG,YAAA;MACxB,IAAI,SAAS,GAAG,KAAK;MACrB,SAAS,GAAG,MAAM,CAAC,SAAS,CAC1B,wBAAwB,CAAC,UAAU,EAAE,SAAS,EAAE,YAAA;QAC9C,IAAI,EAAE,KAAK,GAAG,KAAK,EAAE;UACnB,IAAI,SAAS,EAAE;YACb,WAAW,EAAE;WACd,MAAM;YACL,SAAS,GAAG,IAAI;UACjB;SACF,MAAM;UACL,UAAU,CAAC,QAAQ,EAAE;QACtB;MACH,CAAC,CAAC,CACH;MAED,IAAI,SAAS,EAAE;QACb,WAAW,EAAE;MACd;IACH,CAAC;IAED,iBAAiB,EAAE;EACrB,CAAC,CAAC;AACR","sourceRoot":"","sourcesContent":["import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { timer } from '../observable/timer';\nexport function repeat(countOrConfig) {\n    var _a;\n    var count = Infinity;\n    var delay;\n    if (countOrConfig != null) {\n        if (typeof countOrConfig === 'object') {\n            (_a = countOrConfig.count, count = _a === void 0 ? Infinity : _a, delay = countOrConfig.delay);\n        }\n        else {\n            count = countOrConfig;\n        }\n    }\n    return count <= 0\n        ? function () { return EMPTY; }\n        : operate(function (source, subscriber) {\n            var soFar = 0;\n            var sourceSub;\n            var resubscribe = function () {\n                sourceSub === null || sourceSub === void 0 ? void 0 : sourceSub.unsubscribe();\n                sourceSub = null;\n                if (delay != null) {\n                    var notifier = typeof delay === 'number' ? timer(delay) : innerFrom(delay(soFar));\n                    var notifierSubscriber_1 = createOperatorSubscriber(subscriber, function () {\n                        notifierSubscriber_1.unsubscribe();\n                        subscribeToSource();\n                    });\n                    notifier.subscribe(notifierSubscriber_1);\n                }\n                else {\n                    subscribeToSource();\n                }\n            };\n            var subscribeToSource = function () {\n                var syncUnsub = false;\n                sourceSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, function () {\n                    if (++soFar < count) {\n                        if (sourceSub) {\n                            resubscribe();\n                        }\n                        else {\n                            syncUnsub = true;\n                        }\n                    }\n                    else {\n                        subscriber.complete();\n                    }\n                }));\n                if (syncUnsub) {\n                    resubscribe();\n                }\n            };\n            subscribeToSource();\n        });\n}\n//# sourceMappingURL=repeat.js.map"]},"metadata":{},"sourceType":"module"}