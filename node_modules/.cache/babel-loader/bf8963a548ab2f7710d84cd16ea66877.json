{"ast":null,"code":"import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable(function (subscriber) {\n    executeSchedule(subscriber, scheduler, function () {\n      var iterator = input[Symbol.asyncIterator]();\n      executeSchedule(subscriber, scheduler, function () {\n        iterator.next().then(function (result) {\n          if (result.done) {\n            subscriber.complete();\n          } else {\n            subscriber.next(result.value);\n          }\n        });\n      }, 0, true);\n    });\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/scheduled/scheduleAsyncIterable.ts"],"names":[],"mappings":"AACA,SAAS,UAAU,QAAQ,eAAe;AAC1C,SAAS,eAAe,QAAQ,yBAAyB;AAEzD,OAAM,SAAU,qBAAqB,CAAI,KAAuB,EAAE,SAAwB,EAAA;EACxF,IAAI,CAAC,KAAK,EAAE;IACV,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC;EAC3C;EACD,OAAO,IAAI,UAAU,CAAI,UAAC,UAAU,EAAA;IAClC,eAAe,CAAC,UAAU,EAAE,SAAS,EAAE,YAAA;MACrC,IAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE;MAC9C,eAAe,CACb,UAAU,EACV,SAAS,EACT,YAAA;QACE,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,UAAC,MAAM,EAAA;UAC1B,IAAI,MAAM,CAAC,IAAI,EAAE;YAGf,UAAU,CAAC,QAAQ,EAAE;WACtB,MAAM;YACL,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;UAC9B;QACH,CAAC,CAAC;MACJ,CAAC,EACD,CAAC,EACD,IAAI,CACL;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        executeSchedule(subscriber, scheduler, function () {\n            var iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                iterator.next().then(function (result) {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n//# sourceMappingURL=scheduleAsyncIterable.js.map"]},"metadata":{},"sourceType":"module"}