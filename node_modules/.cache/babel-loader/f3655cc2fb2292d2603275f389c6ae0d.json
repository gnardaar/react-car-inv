{"ast":null,"code":"import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nexport function forkJoin() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var resultSelector = popResultSelector(args);\n  var _a = argsArgArrayOrObject(args),\n    sources = _a.args,\n    keys = _a.keys;\n  var result = new Observable(function (subscriber) {\n    var length = sources.length;\n    if (!length) {\n      subscriber.complete();\n      return;\n    }\n    var values = new Array(length);\n    var remainingCompletions = length;\n    var remainingEmissions = length;\n    var _loop_1 = function _loop_1(sourceIndex) {\n      var hasValue = false;\n      innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n        if (!hasValue) {\n          hasValue = true;\n          remainingEmissions--;\n        }\n        values[sourceIndex] = value;\n      }, function () {\n        return remainingCompletions--;\n      }, undefined, function () {\n        if (!remainingCompletions || !hasValue) {\n          if (!remainingEmissions) {\n            subscriber.next(keys ? createObject(keys, values) : values);\n          }\n          subscriber.complete();\n        }\n      }));\n    };\n    for (var sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n      _loop_1(sourceIndex);\n    }\n  });\n  return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}","map":{"version":3,"sources":["../../../../src/internal/observable/forkJoin.ts"],"names":[],"mappings":"AAAA,SAAS,UAAU,QAAQ,eAAe;AAE1C,SAAS,oBAAoB,QAAQ,8BAA8B;AACnE,SAAS,SAAS,QAAQ,aAAa;AACvC,SAAS,iBAAiB,QAAQ,cAAc;AAChD,SAAS,wBAAwB,QAAQ,iCAAiC;AAC1E,SAAS,gBAAgB,QAAQ,0BAA0B;AAC3D,SAAS,YAAY,QAAQ,sBAAsB;AA2InD,OAAM,SAAU,QAAQ,GAAA;EAAC,IAAA,IAAA,GAAA,EAAA;OAAA,IAAA,EAAA,GAAA,CAAc,EAAd,EAAA,GAAA,SAAA,CAAA,MAAc,EAAd,EAAA,EAAc,EAAA;IAAd,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;EACvB,IAAM,cAAc,GAAG,iBAAiB,CAAC,IAAI,CAAC;EACxC,IAAA,EAAA,GAA0B,oBAAoB,CAAC,IAAI,CAAC;IAA5C,OAAO,GAAA,EAAA,CAAA,IAAA;IAAE,IAAI,GAAA,EAAA,CAAA,IAA+B;EAC1D,IAAM,MAAM,GAAG,IAAI,UAAU,CAAC,UAAC,UAAU,EAAA;IAC/B,IAAA,MAAM,GAAK,OAAO,CAAA,MAAZ;IACd,IAAI,CAAC,MAAM,EAAE;MACX,UAAU,CAAC,QAAQ,EAAE;MACrB;IACD;IACD,IAAM,MAAM,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC;IAChC,IAAI,oBAAoB,GAAG,MAAM;IACjC,IAAI,kBAAkB,GAAG,MAAM;mCACtB,WAAW,EAAA;MAClB,IAAI,QAAQ,GAAG,KAAK;MACpB,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CACvC,wBAAwB,CACtB,UAAU,EACV,UAAC,KAAK,EAAA;QACJ,IAAI,CAAC,QAAQ,EAAE;UACb,QAAQ,GAAG,IAAI;UACf,kBAAkB,EAAE;QACrB;QACD,MAAM,CAAC,WAAW,CAAC,GAAG,KAAK;MAC7B,CAAC,EACD,YAAA;QAAM,OAAA,oBAAoB,EAAE;MAAtB,CAAsB,EAC5B,SAAS,EACT,YAAA;QACE,IAAI,CAAC,oBAAoB,IAAI,CAAC,QAAQ,EAAE;UACtC,IAAI,CAAC,kBAAkB,EAAE;YACvB,UAAU,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC;UAC5D;UACD,UAAU,CAAC,QAAQ,EAAE;QACtB;MACH,CAAC,CACF,CACF;;IAvBH,KAAK,IAAI,WAAW,GAAG,CAAC,EAAE,WAAW,GAAG,MAAM,EAAE,WAAW,EAAE,EAAA;cAApD,WAAW,CAAA;IAwBnB;EACH,CAAC,CAAC;EACF,OAAO,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,GAAG,MAAM;AAChF","sourceRoot":"","sourcesContent":["import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { innerFrom } from './innerFrom';\nimport { popResultSelector } from '../util/args';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { createObject } from '../util/createObject';\nexport function forkJoin() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var resultSelector = popResultSelector(args);\n    var _a = argsArgArrayOrObject(args), sources = _a.args, keys = _a.keys;\n    var result = new Observable(function (subscriber) {\n        var length = sources.length;\n        if (!length) {\n            subscriber.complete();\n            return;\n        }\n        var values = new Array(length);\n        var remainingCompletions = length;\n        var remainingEmissions = length;\n        var _loop_1 = function (sourceIndex) {\n            var hasValue = false;\n            innerFrom(sources[sourceIndex]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n                if (!hasValue) {\n                    hasValue = true;\n                    remainingEmissions--;\n                }\n                values[sourceIndex] = value;\n            }, function () { return remainingCompletions--; }, undefined, function () {\n                if (!remainingCompletions || !hasValue) {\n                    if (!remainingEmissions) {\n                        subscriber.next(keys ? createObject(keys, values) : values);\n                    }\n                    subscriber.complete();\n                }\n            }));\n        };\n        for (var sourceIndex = 0; sourceIndex < length; sourceIndex++) {\n            _loop_1(sourceIndex);\n        }\n    });\n    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\n//# sourceMappingURL=forkJoin.js.map"]},"metadata":{},"sourceType":"module"}