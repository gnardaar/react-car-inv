{"ast":null,"code":"import { EmptyError } from '../util/EmptyError';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function single(predicate) {\n  return operate(function (source, subscriber) {\n    var hasValue = false;\n    var singleValue;\n    var seenValue = false;\n    var index = 0;\n    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n      seenValue = true;\n      if (!predicate || predicate(value, index++, source)) {\n        hasValue && subscriber.error(new SequenceError('Too many matching values'));\n        hasValue = true;\n        singleValue = value;\n      }\n    }, function () {\n      if (hasValue) {\n        subscriber.next(singleValue);\n        subscriber.complete();\n      } else {\n        subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n      }\n    }));\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/single.ts"],"names":[],"mappings":"AACA,SAAS,UAAU,QAAQ,oBAAoB;AAG/C,SAAS,aAAa,QAAQ,uBAAuB;AACrD,SAAS,aAAa,QAAQ,uBAAuB;AACrD,SAAS,OAAO,QAAQ,cAAc;AACtC,SAAS,wBAAwB,QAAQ,sBAAsB;AAiF/D,OAAM,SAAU,MAAM,CAAI,SAAuE,EAAA;EAC/F,OAAO,OAAO,CAAC,UAAC,MAAM,EAAE,UAAU,EAAA;IAChC,IAAI,QAAQ,GAAG,KAAK;IACpB,IAAI,WAAc;IAClB,IAAI,SAAS,GAAG,KAAK;IACrB,IAAI,KAAK,GAAG,CAAC;IACb,MAAM,CAAC,SAAS,CACd,wBAAwB,CACtB,UAAU,EACV,UAAC,KAAK,EAAA;MACJ,SAAS,GAAG,IAAI;MAChB,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC,EAAE;QACnD,QAAQ,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,0BAA0B,CAAC,CAAC;QAC3E,QAAQ,GAAG,IAAI;QACf,WAAW,GAAG,KAAK;MACpB;IACH,CAAC,EACD,YAAA;MACE,IAAI,QAAQ,EAAE;QACZ,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5B,UAAU,CAAC,QAAQ,EAAE;OACtB,MAAM;QACL,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC,oBAAoB,CAAC,GAAG,IAAI,UAAU,EAAE,CAAC;MACzF;IACH,CAAC,CACF,CACF;EACH,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["import { EmptyError } from '../util/EmptyError';\nimport { SequenceError } from '../util/SequenceError';\nimport { NotFoundError } from '../util/NotFoundError';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function single(predicate) {\n    return operate(function (source, subscriber) {\n        var hasValue = false;\n        var singleValue;\n        var seenValue = false;\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            seenValue = true;\n            if (!predicate || predicate(value, index++, source)) {\n                hasValue && subscriber.error(new SequenceError('Too many matching values'));\n                hasValue = true;\n                singleValue = value;\n            }\n        }, function () {\n            if (hasValue) {\n                subscriber.next(singleValue);\n                subscriber.complete();\n            }\n            else {\n                subscriber.error(seenValue ? new NotFoundError('No matching values') : new EmptyError());\n            }\n        }));\n    });\n}\n//# sourceMappingURL=single.js.map"]},"metadata":{},"sourceType":"module"}