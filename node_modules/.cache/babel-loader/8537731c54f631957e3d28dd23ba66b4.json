{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nvar VirtualTimeScheduler = function (_super) {\n  __extends(VirtualTimeScheduler, _super);\n  function VirtualTimeScheduler(schedulerActionCtor, maxFrames) {\n    if (schedulerActionCtor === void 0) {\n      schedulerActionCtor = VirtualAction;\n    }\n    if (maxFrames === void 0) {\n      maxFrames = Infinity;\n    }\n    var _this = _super.call(this, schedulerActionCtor, function () {\n      return _this.frame;\n    }) || this;\n    _this.maxFrames = maxFrames;\n    _this.frame = 0;\n    _this.index = -1;\n    return _this;\n  }\n  VirtualTimeScheduler.prototype.flush = function () {\n    var _a = this,\n      actions = _a.actions,\n      maxFrames = _a.maxFrames;\n    var error;\n    var action;\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  };\n  VirtualTimeScheduler.frameTimeFactor = 10;\n  return VirtualTimeScheduler;\n}(AsyncScheduler);\nexport { VirtualTimeScheduler };\nvar VirtualAction = function (_super) {\n  __extends(VirtualAction, _super);\n  function VirtualAction(scheduler, work, index) {\n    if (index === void 0) {\n      index = scheduler.index += 1;\n    }\n    var _this = _super.call(this, scheduler, work) || this;\n    _this.scheduler = scheduler;\n    _this.work = work;\n    _this.index = index;\n    _this.active = true;\n    _this.index = scheduler.index = index;\n    return _this;\n  }\n  VirtualAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    if (Number.isFinite(delay)) {\n      if (!this.id) {\n        return _super.prototype.schedule.call(this, state, delay);\n      }\n      this.active = false;\n      var action = new VirtualAction(this.scheduler, this.work);\n      this.add(action);\n      return action.schedule(state, delay);\n    } else {\n      return Subscription.EMPTY;\n    }\n  };\n  VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    this.delay = scheduler.frame + delay;\n    var actions = scheduler.actions;\n    actions.push(this);\n    actions.sort(VirtualAction.sortActions);\n    return 1;\n  };\n  VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    return undefined;\n  };\n  VirtualAction.prototype._execute = function (state, delay) {\n    if (this.active === true) {\n      return _super.prototype._execute.call(this, state, delay);\n    }\n  };\n  VirtualAction.sortActions = function (a, b) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  };\n  return VirtualAction;\n}(AsyncAction);\nexport { VirtualAction };","map":{"version":3,"sources":["../../../../src/internal/scheduler/VirtualTimeScheduler.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nvar VirtualTimeScheduler = (function (_super) {\n    __extends(VirtualTimeScheduler, _super);\n    function VirtualTimeScheduler(schedulerActionCtor, maxFrames) {\n        if (schedulerActionCtor === void 0) { schedulerActionCtor = VirtualAction; }\n        if (maxFrames === void 0) { maxFrames = Infinity; }\n        var _this = _super.call(this, schedulerActionCtor, function () { return _this.frame; }) || this;\n        _this.maxFrames = maxFrames;\n        _this.frame = 0;\n        _this.index = -1;\n        return _this;\n    }\n    VirtualTimeScheduler.prototype.flush = function () {\n        var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;\n        var error;\n        var action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        }\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    VirtualTimeScheduler.frameTimeFactor = 10;\n    return VirtualTimeScheduler;\n}(AsyncScheduler));\nexport { VirtualTimeScheduler };\nvar VirtualAction = (function (_super) {\n    __extends(VirtualAction, _super);\n    function VirtualAction(scheduler, work, index) {\n        if (index === void 0) { index = (scheduler.index += 1); }\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.index = index;\n        _this.active = true;\n        _this.index = scheduler.index = index;\n        return _this;\n    }\n    VirtualAction.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (Number.isFinite(delay)) {\n            if (!this.id) {\n                return _super.prototype.schedule.call(this, state, delay);\n            }\n            this.active = false;\n            var action = new VirtualAction(this.scheduler, this.work);\n            this.add(action);\n            return action.schedule(state, delay);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        this.delay = scheduler.frame + delay;\n        var actions = scheduler.actions;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return 1;\n    };\n    VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return undefined;\n    };\n    VirtualAction.prototype._execute = function (state, delay) {\n        if (this.active === true) {\n            return _super.prototype._execute.call(this, state, delay);\n        }\n    };\n    VirtualAction.sortActions = function (a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    return VirtualAction;\n}(AsyncAction));\nexport { VirtualAction };\n//# sourceMappingURL=VirtualTimeScheduler.js.map"]},"metadata":{},"sourceType":"module"}