{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nvar AsyncAction = function (_super) {\n  __extends(AsyncAction, _super);\n  function AsyncAction(scheduler, work) {\n    var _this = _super.call(this, scheduler, work) || this;\n    _this.scheduler = scheduler;\n    _this.work = work;\n    _this.pending = false;\n    return _this;\n  }\n  AsyncAction.prototype.schedule = function (state, delay) {\n    var _a;\n    if (delay === void 0) {\n      delay = 0;\n    }\n    if (this.closed) {\n      return this;\n    }\n    this.state = state;\n    var id = this.id;\n    var scheduler = this.scheduler;\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n    this.pending = true;\n    this.delay = delay;\n    this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n    return this;\n  };\n  AsyncAction.prototype.requestAsyncId = function (scheduler, _id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n  };\n  AsyncAction.prototype.recycleAsyncId = function (_scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n    if (delay != null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    if (id != null) {\n      intervalProvider.clearInterval(id);\n    }\n    return undefined;\n  };\n  AsyncAction.prototype.execute = function (state, delay) {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n    this.pending = false;\n    var error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  };\n  AsyncAction.prototype._execute = function (state, _delay) {\n    var errored = false;\n    var errorValue;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = e ? e : new Error('Scheduled action threw falsy error');\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  };\n  AsyncAction.prototype.unsubscribe = function () {\n    if (!this.closed) {\n      var _a = this,\n        id = _a.id,\n        scheduler = _a.scheduler;\n      var actions = scheduler.actions;\n      this.work = this.state = this.scheduler = null;\n      this.pending = false;\n      arrRemove(actions, this);\n      if (id != null) {\n        this.id = this.recycleAsyncId(scheduler, id, null);\n      }\n      this.delay = null;\n      _super.prototype.unsubscribe.call(this);\n    }\n  };\n  return AsyncAction;\n}(Action);\nexport { AsyncAction };","map":{"version":3,"sources":["../../../../src/internal/scheduler/AsyncAction.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        var _a;\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, _id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (_scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, _delay) {\n        var errored = false;\n        var errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            var _a = this, id = _a.id, scheduler = _a.scheduler;\n            var actions = scheduler.actions;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            _super.prototype.unsubscribe.call(this);\n        }\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map"]},"metadata":{},"sourceType":"module"}