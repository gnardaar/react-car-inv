{"ast":null,"code":"import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\nvar DEFAULT_CONFIG = {\n  connector: function connector() {\n    return new Subject();\n  },\n  resetOnDisconnect: true\n};\nexport function connectable(source, config) {\n  if (config === void 0) {\n    config = DEFAULT_CONFIG;\n  }\n  var connection = null;\n  var connector = config.connector,\n    _a = config.resetOnDisconnect,\n    resetOnDisconnect = _a === void 0 ? true : _a;\n  var subject = connector();\n  var result = new Observable(function (subscriber) {\n    return subject.subscribe(subscriber);\n  });\n  result.connect = function () {\n    if (!connection || connection.closed) {\n      connection = defer(function () {\n        return source;\n      }).subscribe(subject);\n      if (resetOnDisconnect) {\n        connection.add(function () {\n          return subject = connector();\n        });\n      }\n    }\n    return connection;\n  };\n  return result;\n}","map":{"version":3,"sources":["../../../../src/internal/observable/connectable.ts"],"names":[],"mappings":"AACA,SAAS,OAAO,QAAQ,YAAY;AAEpC,SAAS,UAAU,QAAQ,eAAe;AAC1C,SAAS,KAAK,QAAQ,SAAS;AAsB/B,IAAM,cAAc,GAA+B;EACjD,SAAS,EAAE,qBAAA;IAAM,OAAA,IAAI,OAAO,EAAW;EAAtB,CAAsB;EACvC,iBAAiB,EAAE;CACpB;AAUD,OAAM,SAAU,WAAW,CAAI,MAA0B,EAAE,MAA6C,EAAA;EAA7C,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA;IAAA,MAAA,GAAA,cAA6C;EAAA;EAEtG,IAAI,UAAU,GAAwB,IAAI;EAClC,IAAA,SAAS,GAA+B,MAAM,CAAA,SAArC;IAAE,EAAA,GAA6B,MAAM,CAAA,iBAAX;IAAxB,iBAAiB,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,IAAI,GAAA,EAAA;EAC3C,IAAI,OAAO,GAAG,SAAS,EAAE;EAEzB,IAAM,MAAM,GAAQ,IAAI,UAAU,CAAI,UAAC,UAAU,EAAA;IAC/C,OAAO,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC;EACtC,CAAC,CAAC;EAKF,MAAM,CAAC,OAAO,GAAG,YAAA;IACf,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,MAAM,EAAE;MACpC,UAAU,GAAG,KAAK,CAAC,YAAA;QAAM,OAAA,MAAM;MAAN,CAAM,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC;MACnD,IAAI,iBAAiB,EAAE;QACrB,UAAU,CAAC,GAAG,CAAC,YAAA;UAAM,OAAC,OAAO,GAAG,SAAS,EAAE;QAAtB,CAAuB,CAAC;MAC9C;IACF;IACD,OAAO,UAAU;EACnB,CAAC;EAED,OAAO,MAAM;AACf","sourceRoot":"","sourcesContent":["import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\nvar DEFAULT_CONFIG = {\n    connector: function () { return new Subject(); },\n    resetOnDisconnect: true,\n};\nexport function connectable(source, config) {\n    if (config === void 0) { config = DEFAULT_CONFIG; }\n    var connection = null;\n    var connector = config.connector, _a = config.resetOnDisconnect, resetOnDisconnect = _a === void 0 ? true : _a;\n    var subject = connector();\n    var result = new Observable(function (subscriber) {\n        return subject.subscribe(subscriber);\n    });\n    result.connect = function () {\n        if (!connection || connection.closed) {\n            connection = defer(function () { return source; }).subscribe(subject);\n            if (resetOnDisconnect) {\n                connection.add(function () { return (subject = connector()); });\n            }\n        }\n        return connection;\n    };\n    return result;\n}\n//# sourceMappingURL=connectable.js.map"]},"metadata":{},"sourceType":"module"}