{"ast":null,"code":"import _objectSpread from\"C:/Users/Andrew Krause/react-car-inv-6/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{useDispatch,useSelector,useStore}from'react-redux';import{useForm}from'react-hook-form';import{chooseMake,chooseModel,chooseCondition,chooseYear}from'../../redux/slices/RootSlice';import{Input}from'../SharedComponents/Input';import{Button}from'@material-ui/core';import{server_calls}from'../../api';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var CarForm=function CarForm(props){var dispatch=useDispatch();// let { carData, getData } = useGetData();\nvar store=useStore();var make=useSelector(function(state){return state.make;});var _useForm=useForm({}),register=_useForm.register,handleSubmit=_useForm.handleSubmit;var onSubmit=function onSubmit(data,event){console.log(props.id);// The ! is for strictly typed Typescript stuff\nif(props.id){server_calls.update(props.id,data);console.log(\"Updated:\".concat(data,\" \").concat(props.id));console.log(data);setTimeout(function(){window.location.reload();},1000);event.target.reset();}else{// Dispatch basically updates our state / Redux store\ndispatch(chooseMake(data.make));dispatch(chooseModel(data.model));dispatch(chooseCondition(data.condition));dispatch(chooseYear(data.year));server_calls.create(store.getState());setTimeout(function(){window.location.reload();},1000);}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit(onSubmit),children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"make\",children:\"Car Make\"}),/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({},register('make')),{},{name:\"make\",placeholder:\"make\"}))]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"model\",children:\"Model\"}),/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({},register('model')),{},{name:\"model\",placeholder:\"model\"}))]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"condition\",children:\"Condition\"}),/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({},register('condition')),{},{name:\"condition\",placeholder:\"car's condition\"}))]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"year\",children:\"Year\"}),/*#__PURE__*/_jsx(Input,_objectSpread(_objectSpread({},register('year')),{},{name:\"year\",placeholder:\"year\"}))]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\"Submit\"})]})});};","map":{"version":3,"names":["React","useDispatch","useSelector","useStore","useForm","chooseMake","chooseModel","chooseCondition","chooseYear","Input","Button","server_calls","CarForm","props","dispatch","store","make","state","register","handleSubmit","onSubmit","data","event","console","log","id","update","setTimeout","window","location","reload","target","reset","model","condition","year","create","getState"],"sources":["C:/Users/Andrew Krause/react-car-inv-6/src/components/CarForm/CarForm.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector, useStore } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport {chooseMake, chooseModel, chooseCondition, chooseYear  } from '../../redux/slices/RootSlice';\r\nimport { Input } from '../SharedComponents/Input';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { server_calls } from '../../api';\r\n\r\nimport { useGetData } from '../../custom-hooks';\r\n\r\n\r\ninterface CarFormProps {\r\n    id?:string;\r\n    data?:{}\r\n}\r\n\r\ninterface CarState {\r\n    make: string;\r\n    model: string;\r\n    condition: string;\r\n    year: string;\r\n}\r\n\r\nexport const CarForm = (props:CarFormProps) => {\r\n    const dispatch = useDispatch();\r\n    // let { carData, getData } = useGetData();\r\n    const store = useStore();\r\n    const make = useSelector<CarState>(state => state.make);\r\n    const { register, handleSubmit } = useForm({ })\r\n\r\n    const onSubmit = (data:any, event:any) => {\r\n        console.log(props.id)\r\n        // The ! is for strictly typed Typescript stuff\r\n        if(props.id!){\r\n            server_calls.update(props.id!, data);\r\n            console.log(`Updated:${data} ${props.id}`);\r\n            console.log(data);\r\n            setTimeout( () => {window.location.reload()}, 1000);\r\n            event.target.reset();\r\n        } else {\r\n            // Dispatch basically updates our state / Redux store\r\n            dispatch(chooseMake(data.make));\r\n            dispatch(chooseModel(data.model));\r\n            dispatch(chooseCondition(data.condition));\r\n            dispatch(chooseYear(data.year));\r\n            server_calls.create(store.getState());\r\n            setTimeout( () => {window.location.reload()}, 1000)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit = {handleSubmit(onSubmit)}>\r\n                <div>\r\n                    <label htmlFor=\"make\">Car Make</label>\r\n                    <Input {...register('make')} name=\"make\" placeholder='make'/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"model\">Model</label>\r\n                    <Input {...register('model')} name=\"model\" placeholder='model'/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"condition\">Condition</label>\r\n                    <Input {...register('condition')} name=\"condition\" placeholder=\"car's condition\"/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"year\">Year</label>\r\n                    <Input {...register('year')} name=\"year\" placeholder='year'/>\r\n                </div>\r\n                <Button type='submit'>Submit</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}