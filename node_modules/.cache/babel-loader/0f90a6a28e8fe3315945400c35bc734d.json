{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { operate } from '../util/lift';\nexport function share(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _a = options.connector,\n    connector = _a === void 0 ? function () {\n      return new Subject();\n    } : _a,\n    _b = options.resetOnError,\n    resetOnError = _b === void 0 ? true : _b,\n    _c = options.resetOnComplete,\n    resetOnComplete = _c === void 0 ? true : _c,\n    _d = options.resetOnRefCountZero,\n    resetOnRefCountZero = _d === void 0 ? true : _d;\n  return function (wrapperSource) {\n    var connection;\n    var resetConnection;\n    var subject;\n    var refCount = 0;\n    var hasCompleted = false;\n    var hasErrored = false;\n    var cancelReset = function cancelReset() {\n      resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n      resetConnection = undefined;\n    };\n    var reset = function reset() {\n      cancelReset();\n      connection = subject = undefined;\n      hasCompleted = hasErrored = false;\n    };\n    var resetAndUnsubscribe = function resetAndUnsubscribe() {\n      var conn = connection;\n      reset();\n      conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n    };\n    return operate(function (source, subscriber) {\n      refCount++;\n      if (!hasErrored && !hasCompleted) {\n        cancelReset();\n      }\n      var dest = subject = subject !== null && subject !== void 0 ? subject : connector();\n      subscriber.add(function () {\n        refCount--;\n        if (refCount === 0 && !hasErrored && !hasCompleted) {\n          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n        }\n      });\n      dest.subscribe(subscriber);\n      if (!connection && refCount > 0) {\n        connection = new SafeSubscriber({\n          next: function next(value) {\n            return dest.next(value);\n          },\n          error: function error(err) {\n            hasErrored = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnError, err);\n            dest.error(err);\n          },\n          complete: function complete() {\n            hasCompleted = true;\n            cancelReset();\n            resetConnection = handleReset(reset, resetOnComplete);\n            dest.complete();\n          }\n        });\n        innerFrom(source).subscribe(connection);\n      }\n    })(wrapperSource);\n  };\n}\nfunction handleReset(reset, on) {\n  var args = [];\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n  if (on === true) {\n    reset();\n    return;\n  }\n  if (on === false) {\n    return;\n  }\n  var onSubscriber = new SafeSubscriber({\n    next: function next() {\n      onSubscriber.unsubscribe();\n      reset();\n    }\n  });\n  return innerFrom(on.apply(void 0, __spreadArray([], __read(args)))).subscribe(onSubscriber);\n}","map":{"version":3,"sources":["../../../../src/internal/operators/share.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { operate } from '../util/lift';\nexport function share(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.connector, connector = _a === void 0 ? function () { return new Subject(); } : _a, _b = options.resetOnError, resetOnError = _b === void 0 ? true : _b, _c = options.resetOnComplete, resetOnComplete = _c === void 0 ? true : _c, _d = options.resetOnRefCountZero, resetOnRefCountZero = _d === void 0 ? true : _d;\n    return function (wrapperSource) {\n        var connection;\n        var resetConnection;\n        var subject;\n        var refCount = 0;\n        var hasCompleted = false;\n        var hasErrored = false;\n        var cancelReset = function () {\n            resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n            resetConnection = undefined;\n        };\n        var reset = function () {\n            cancelReset();\n            connection = subject = undefined;\n            hasCompleted = hasErrored = false;\n        };\n        var resetAndUnsubscribe = function () {\n            var conn = connection;\n            reset();\n            conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n        };\n        return operate(function (source, subscriber) {\n            refCount++;\n            if (!hasErrored && !hasCompleted) {\n                cancelReset();\n            }\n            var dest = (subject = subject !== null && subject !== void 0 ? subject : connector());\n            subscriber.add(function () {\n                refCount--;\n                if (refCount === 0 && !hasErrored && !hasCompleted) {\n                    resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n                }\n            });\n            dest.subscribe(subscriber);\n            if (!connection &&\n                refCount > 0) {\n                connection = new SafeSubscriber({\n                    next: function (value) { return dest.next(value); },\n                    error: function (err) {\n                        hasErrored = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnError, err);\n                        dest.error(err);\n                    },\n                    complete: function () {\n                        hasCompleted = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnComplete);\n                        dest.complete();\n                    },\n                });\n                innerFrom(source).subscribe(connection);\n            }\n        })(wrapperSource);\n    };\n}\nfunction handleReset(reset, on) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    if (on === true) {\n        reset();\n        return;\n    }\n    if (on === false) {\n        return;\n    }\n    var onSubscriber = new SafeSubscriber({\n        next: function () {\n            onSubscriber.unsubscribe();\n            reset();\n        },\n    });\n    return innerFrom(on.apply(void 0, __spreadArray([], __read(args)))).subscribe(onSubscriber);\n}\n//# sourceMappingURL=share.js.map"]},"metadata":{},"sourceType":"module"}