{"ast":null,"code":"import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { innerFrom } from './innerFrom';\nexport function partition(source, predicate, thisArg) {\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))];\n}","map":{"version":3,"sources":["../../../../src/internal/observable/partition.ts"],"names":[],"mappings":"AAAA,SAAS,GAAG,QAAQ,aAAa;AACjC,SAAS,MAAM,QAAQ,qBAAqB;AAG5C,SAAS,SAAS,QAAQ,aAAa;AA0EvC,OAAM,SAAU,SAAS,CACvB,MAA0B,EAC1B,SAA0D,EAC1D,OAAa,EAAA;EAEb,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAGxG;AACH","sourceRoot":"","sourcesContent":["import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { innerFrom } from './innerFrom';\nexport function partition(source, predicate, thisArg) {\n    return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))];\n}\n//# sourceMappingURL=partition.js.map"]},"metadata":{},"sourceType":"module"}