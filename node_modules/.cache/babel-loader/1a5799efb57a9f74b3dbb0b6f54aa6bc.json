{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { combineLatestInit } from '../observable/combineLatest';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\nexport function combineLatest() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var resultSelector = popResultSelector(args);\n  return resultSelector ? pipe(combineLatest.apply(void 0, __spreadArray([], __read(args))), mapOneOrManyArgs(resultSelector)) : operate(function (source, subscriber) {\n    combineLatestInit(__spreadArray([source], __read(argsOrArgArray(args))))(subscriber);\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/operators/combineLatest.ts"],"names":[],"mappings":";AAAA,SAAS,iBAAiB,QAAQ,6BAA6B;AAE/D,SAAS,OAAO,QAAQ,cAAc;AACtC,SAAS,cAAc,QAAQ,wBAAwB;AACvD,SAAS,gBAAgB,QAAQ,0BAA0B;AAC3D,SAAS,IAAI,QAAQ,cAAc;AACnC,SAAS,iBAAiB,QAAQ,cAAc;AAoBhD,OAAM,SAAU,aAAa,GAAA;EAAO,IAAA,IAAA,GAAA,EAAA;OAAA,IAAA,EAAA,GAAA,CAA6D,EAA7D,EAAA,GAAA,SAAA,CAAA,MAA6D,EAA7D,EAAA,EAA6D,EAAA;IAA7D,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;EAClC,IAAM,cAAc,GAAG,iBAAiB,CAAC,IAAI,CAAC;EAC9C,OAAO,cAAc,GACjB,IAAI,CAAC,aAAa,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,aAAA,CAAA,EAAA,EAAA,MAAA,CAAK,IAAoC,CAAA,CAAA,CAAA,EAAG,gBAAgB,CAAC,cAAc,CAAC,CAAC,GAC/F,OAAO,CAAC,UAAC,MAAM,EAAE,UAAU,EAAA;IACzB,iBAAiB,CAAA,aAAA,CAAA,CAAE,MAAM,CAAA,EAAA,MAAA,CAAK,cAAc,CAAC,IAAI,CAAC,CAAA,CAAA,CAAE,CAAC,UAAU,CAAC;EAClE,CAAC,CAAC;AACR","sourceRoot":"","sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport { combineLatestInit } from '../observable/combineLatest';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\nexport function combineLatest() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var resultSelector = popResultSelector(args);\n    return resultSelector\n        ? pipe(combineLatest.apply(void 0, __spreadArray([], __read(args))), mapOneOrManyArgs(resultSelector))\n        : operate(function (source, subscriber) {\n            combineLatestInit(__spreadArray([source], __read(argsOrArgArray(args))))(subscriber);\n        });\n}\n//# sourceMappingURL=combineLatest.js.map"]},"metadata":{},"sourceType":"module"}