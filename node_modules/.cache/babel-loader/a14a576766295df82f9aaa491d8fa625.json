{"ast":null,"code":"import { Observable, merge, from, of } from 'rxjs';\nimport { delay, map, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport { __assign, __spreadArray } from 'tslib';\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\nfunction fromRef(ref, event) {\n  return new Observable(function (subscriber) {\n    var fn = ref.on(event, function (snapshot, prevKey) {\n      subscriber.next({\n        snapshot: snapshot,\n        prevKey: prevKey,\n        event: event\n      });\n    }, subscriber.error.bind(subscriber));\n    return {\n      unsubscribe: function unsubscribe() {\n        ref.off(event, fn);\n      }\n    };\n  }).pipe(\n  // Ensures subscribe on observable is async. This handles\n  // a quirk in the SDK where on/once callbacks can happen\n  // synchronously.\n  delay(0));\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar ListenEvent;\n(function (ListenEvent) {\n  /* eslint-disable no-unused-vars */\n  ListenEvent[\"added\"] = \"child_added\";\n  ListenEvent[\"removed\"] = \"child_removed\";\n  ListenEvent[\"changed\"] = \"child_changed\";\n  ListenEvent[\"moved\"] = \"child_moved\";\n  ListenEvent[\"value\"] = \"value\";\n})(ListenEvent || (ListenEvent = {}));\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Check the length of the provided array. If it is empty return an array\n * that is populated with all the Realtime Database child events.\n * @param events\n */\nfunction validateEventsArray(events) {\n  if (events == null || events.length === 0) {\n    events = [ListenEvent.added, ListenEvent.removed, ListenEvent.changed, ListenEvent.moved];\n  }\n  return events;\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get the snapshot changes of an object\n * @param query\n */\nfunction object(query) {\n  return fromRef(query, ListenEvent.value);\n}\n/**\n * Get an array of object values, optionally with a mapped key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nfunction objectVal(query, keyField) {\n  return fromRef(query, ListenEvent.value).pipe(map(function (change) {\n    return changeToData(change, keyField);\n  }));\n}\nfunction changeToData(change, keyField) {\n  var _a;\n  var val = change.snapshot.val();\n  // match the behavior of the JS SDK when the snapshot doesn't exist\n  if (!change.snapshot.exists()) {\n    return val;\n  }\n  // val can be a primitive type\n  if (typeof val !== 'object') {\n    return val;\n  }\n  return __assign(__assign({}, val), keyField ? (_a = {}, _a[keyField] = change.snapshot.key, _a) : null);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction stateChanges(query, events) {\n  events = validateEventsArray(events);\n  var childEvent$ = events.map(function (event) {\n    return fromRef(query, event);\n  });\n  return merge.apply(void 0, childEvent$);\n}\nfunction fromOnce(query) {\n  return from(query.once(ListenEvent.value)).pipe(map(function (snapshot) {\n    var event = ListenEvent.value;\n    return {\n      snapshot: snapshot,\n      prevKey: null,\n      event: event\n    };\n  }));\n}\nfunction list(query, events) {\n  var eventsList = validateEventsArray(events);\n  return fromOnce(query).pipe(switchMap(function (change) {\n    // in case the list doesn't exist, match the RTDB SDK's default behavior\n    if (!change.snapshot.exists()) {\n      return of(change.snapshot.val());\n    }\n    var childEvent$ = [of(change)];\n    for (var _i = 0, eventsList_1 = eventsList; _i < eventsList_1.length; _i++) {\n      var event_1 = eventsList_1[_i];\n      childEvent$.push(fromRef(query, event_1));\n    }\n    return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n  }), distinctUntilChanged());\n}\n/**\n * Get an object mapped to its value, and optionally its key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nfunction listVal(query, keyField) {\n  return list(query).pipe(map(function (arr) {\n    // result can be null if query returns no data\n    if (arr === null) {\n      return arr;\n    }\n    return arr.map(function (change) {\n      return changeToData(change, keyField);\n    });\n  }));\n}\nfunction positionFor(changes, key) {\n  var len = changes.length;\n  for (var i = 0; i < len; i++) {\n    if (changes[i].snapshot.key === key) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction positionAfter(changes, prevKey) {\n  if (prevKey == null) {\n    return 0;\n  } else {\n    var i = positionFor(changes, prevKey);\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\nfunction buildView(current, change) {\n  var snapshot = change.snapshot,\n    prevKey = change.prevKey,\n    event = change.event;\n  var key = snapshot.key;\n  var currentKeyPosition = positionFor(current, key);\n  var afterPreviousKeyPosition = positionAfter(current, prevKey || undefined);\n  switch (event) {\n    case ListenEvent.value:\n      if (change.snapshot && change.snapshot.exists()) {\n        var prevKey_1 = null;\n        change.snapshot.forEach(function (snapshot) {\n          var action = {\n            snapshot: snapshot,\n            event: ListenEvent.value,\n            prevKey: prevKey_1\n          };\n          prevKey_1 = snapshot.key;\n          current = __spreadArray(__spreadArray([], current), [action]);\n          return false;\n        });\n      }\n      return current;\n    case ListenEvent.added:\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        var previous = current[currentKeyPosition - 1];\n        if ((previous && previous.snapshot.key || null) !== prevKey) {\n          current = current.filter(function (x) {\n            return x.snapshot.key !== snapshot.key;\n          });\n          current.splice(afterPreviousKeyPosition, 0, change);\n        }\n      } else if (prevKey == null) {\n        return __spreadArray([change], current);\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, change);\n      }\n      return current;\n    case ListenEvent.removed:\n      return current.filter(function (x) {\n        return x.snapshot.key !== snapshot.key;\n      });\n    case ListenEvent.changed:\n      return current.map(function (x) {\n        return x.snapshot.key === key ? change : x;\n      });\n    case ListenEvent.moved:\n      if (currentKeyPosition > -1) {\n        var data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n      return current;\n    // default will also remove null results\n    default:\n      return current;\n  }\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction auditTrail(query, events) {\n  var auditTrail$ = stateChanges(query, events).pipe(scan(function (current, changes) {\n    return __spreadArray(__spreadArray([], current), [changes]);\n  }, []));\n  return waitForLoaded(query, auditTrail$);\n}\nfunction loadedData(query) {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef(query, ListenEvent.value).pipe(map(function (data) {\n    // Store the last key in the data set\n    var lastKeyToLoad;\n    // Loop through loaded dataset to find the last key\n    data.snapshot.forEach(function (child) {\n      lastKeyToLoad = child.key;\n      return false;\n    });\n    // return data set and the current last key loaded\n    return {\n      data: data,\n      lastKeyToLoad: lastKeyToLoad\n    };\n  }));\n}\nfunction waitForLoaded(query, snap$) {\n  var loaded$ = loadedData(query);\n  return loaded$.pipe(withLatestFrom(snap$),\n  // Get the latest values from the \"loaded\" and \"child\" datasets\n  // We can use both datasets to form an array of the latest values.\n  map(function (_a) {\n    var loaded = _a[0],\n      changes = _a[1];\n    // Store the last key in the data set\n    var lastKeyToLoad = loaded.lastKeyToLoad;\n    // Store all child keys loaded at this point\n    var loadedKeys = changes.map(function (change) {\n      return change.snapshot.key;\n    });\n    return {\n      changes: changes,\n      lastKeyToLoad: lastKeyToLoad,\n      loadedKeys: loadedKeys\n    };\n  }),\n  // This is the magical part, only emit when the last load key\n  // in the dataset has been loaded by a child event. At this point\n  // we can assume the dataset is \"whole\".\n  skipWhile(function (meta) {\n    return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1;\n  }),\n  // Pluck off the meta data because the user only cares\n  // to iterate through the snapshots\n  map(function (meta) {\n    return meta.changes;\n  }));\n}\nexport { ListenEvent, auditTrail, changeToData, fromRef, list, listVal, object, objectVal, stateChanges };","map":{"version":3,"sources":["../../database/fromRef.ts","../../database/interfaces.ts","../../database/utils.ts","../../database/object/index.ts","../../database/list/index.ts","../../database/list/audit-trail.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\nexport function fromRef(ref, event) {\n    return new Observable(function (subscriber) {\n        var fn = ref.on(event, function (snapshot, prevKey) {\n            subscriber.next({ snapshot: snapshot, prevKey: prevKey, event: event });\n        }, subscriber.error.bind(subscriber));\n        return {\n            unsubscribe: function () {\n                ref.off(event, fn);\n            },\n        };\n    }).pipe(\n    // Ensures subscribe on observable is async. This handles\n    // a quirk in the SDK where on/once callbacks can happen\n    // synchronously.\n    delay(0));\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport var ListenEvent;\n(function (ListenEvent) {\n    /* eslint-disable no-unused-vars */\n    ListenEvent[\"added\"] = \"child_added\";\n    ListenEvent[\"removed\"] = \"child_removed\";\n    ListenEvent[\"changed\"] = \"child_changed\";\n    ListenEvent[\"moved\"] = \"child_moved\";\n    ListenEvent[\"value\"] = \"value\";\n})(ListenEvent || (ListenEvent = {}));\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ListenEvent } from './interfaces';\n/**\n * Check the length of the provided array. If it is empty return an array\n * that is populated with all the Realtime Database child events.\n * @param events\n */\nexport function validateEventsArray(events) {\n    if (events == null || events.length === 0) {\n        events = [\n            ListenEvent.added,\n            ListenEvent.removed,\n            ListenEvent.changed,\n            ListenEvent.moved,\n        ];\n    }\n    return events;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport { ListenEvent } from '../interfaces';\nimport { fromRef } from '../fromRef';\nimport { map } from 'rxjs/operators';\n/**\n * Get the snapshot changes of an object\n * @param query\n */\nexport function object(query) {\n    return fromRef(query, ListenEvent.value);\n}\n/**\n * Get an array of object values, optionally with a mapped key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nexport function objectVal(query, keyField) {\n    return fromRef(query, ListenEvent.value).pipe(map(function (change) { return changeToData(change, keyField); }));\n}\nexport function changeToData(change, keyField) {\n    var _a;\n    var val = change.snapshot.val();\n    // match the behavior of the JS SDK when the snapshot doesn't exist\n    if (!change.snapshot.exists()) {\n        return val;\n    }\n    // val can be a primitive type\n    if (typeof val !== 'object') {\n        return val;\n    }\n    return __assign(__assign({}, val), (keyField ? (_a = {}, _a[keyField] = change.snapshot.key, _a) : null));\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __spreadArray } from \"tslib\";\nimport { ListenEvent } from '../interfaces';\nimport { of, merge, from } from 'rxjs';\nimport { validateEventsArray } from '../utils';\nimport { fromRef } from '../fromRef';\nimport { switchMap, scan, distinctUntilChanged, map } from 'rxjs/operators';\nimport { changeToData } from '../object';\nexport function stateChanges(query, events) {\n    events = validateEventsArray(events);\n    var childEvent$ = events.map(function (event) { return fromRef(query, event); });\n    return merge.apply(void 0, childEvent$);\n}\nfunction fromOnce(query) {\n    return from(query.once(ListenEvent.value)).pipe(map(function (snapshot) {\n        var event = ListenEvent.value;\n        return { snapshot: snapshot, prevKey: null, event: event };\n    }));\n}\nexport function list(query, events) {\n    var eventsList = validateEventsArray(events);\n    return fromOnce(query).pipe(switchMap(function (change) {\n        // in case the list doesn't exist, match the RTDB SDK's default behavior\n        if (!change.snapshot.exists()) {\n            return of(change.snapshot.val());\n        }\n        var childEvent$ = [of(change)];\n        for (var _i = 0, eventsList_1 = eventsList; _i < eventsList_1.length; _i++) {\n            var event_1 = eventsList_1[_i];\n            childEvent$.push(fromRef(query, event_1));\n        }\n        return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\n/**\n * Get an object mapped to its value, and optionally its key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nexport function listVal(query, keyField) {\n    return list(query).pipe(map(function (arr) {\n        // result can be null if query returns no data\n        if (arr === null) {\n            return arr;\n        }\n        return arr.map(function (change) { return changeToData(change, keyField); });\n    }));\n}\nfunction positionFor(changes, key) {\n    var len = changes.length;\n    for (var i = 0; i < len; i++) {\n        if (changes[i].snapshot.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (prevKey == null) {\n        return 0;\n    }\n    else {\n        var i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, change) {\n    var snapshot = change.snapshot, prevKey = change.prevKey, event = change.event;\n    var key = snapshot.key;\n    var currentKeyPosition = positionFor(current, key);\n    var afterPreviousKeyPosition = positionAfter(current, prevKey || undefined);\n    switch (event) {\n        case ListenEvent.value:\n            if (change.snapshot && change.snapshot.exists()) {\n                var prevKey_1 = null;\n                change.snapshot.forEach(function (snapshot) {\n                    var action = {\n                        snapshot: snapshot,\n                        event: ListenEvent.value,\n                        prevKey: prevKey_1,\n                    };\n                    prevKey_1 = snapshot.key;\n                    current = __spreadArray(__spreadArray([], current), [action]);\n                    return false;\n                });\n            }\n            return current;\n        case ListenEvent.added:\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                var previous = current[currentKeyPosition - 1];\n                if (((previous && previous.snapshot.key) || null) !== prevKey) {\n                    current = current.filter(function (x) { return x.snapshot.key !== snapshot.key; });\n                    current.splice(afterPreviousKeyPosition, 0, change);\n                }\n            }\n            else if (prevKey == null) {\n                return __spreadArray([change], current);\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, change);\n            }\n            return current;\n        case ListenEvent.removed:\n            return current.filter(function (x) { return x.snapshot.key !== snapshot.key; });\n        case ListenEvent.changed:\n            return current.map(function (x) { return (x.snapshot.key === key ? change : x); });\n        case ListenEvent.moved:\n            if (currentKeyPosition > -1) {\n                var data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __spreadArray } from \"tslib\";\nimport { ListenEvent } from '../interfaces';\nimport { fromRef } from '../fromRef';\nimport { map, withLatestFrom, scan, skipWhile } from 'rxjs/operators';\nimport { stateChanges } from './index';\nexport function auditTrail(query, events) {\n    var auditTrail$ = stateChanges(query, events).pipe(scan(function (current, changes) { return __spreadArray(__spreadArray([], current), [changes]); }, []));\n    return waitForLoaded(query, auditTrail$);\n}\nfunction loadedData(query) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, ListenEvent.value).pipe(map(function (data) {\n        // Store the last key in the data set\n        var lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.snapshot.forEach(function (child) {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        // return data set and the current last key loaded\n        return { data: data, lastKeyToLoad: lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, snap$) {\n    var loaded$ = loadedData(query);\n    return loaded$.pipe(withLatestFrom(snap$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map(function (_a) {\n        var loaded = _a[0], changes = _a[1];\n        // Store the last key in the data set\n        var lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        var loadedKeys = changes.map(function (change) { return change.snapshot.key; });\n        return { changes: changes, lastKeyToLoad: lastKeyToLoad, loadedKeys: loadedKeys };\n    }), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile(function (meta) {\n        return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1;\n    }), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map(function (meta) { return meta.changes; }));\n}\n"]},"metadata":{},"sourceType":"module"}