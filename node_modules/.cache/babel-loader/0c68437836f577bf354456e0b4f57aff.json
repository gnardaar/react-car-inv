{"ast":null,"code":"import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function sequenceEqual(compareTo, comparator) {\n  if (comparator === void 0) {\n    comparator = function comparator(a, b) {\n      return a === b;\n    };\n  }\n  return operate(function (source, subscriber) {\n    var aState = createState();\n    var bState = createState();\n    var emit = function emit(isEqual) {\n      subscriber.next(isEqual);\n      subscriber.complete();\n    };\n    var createSubscriber = function createSubscriber(selfState, otherState) {\n      var sequenceEqualSubscriber = createOperatorSubscriber(subscriber, function (a) {\n        var buffer = otherState.buffer,\n          complete = otherState.complete;\n        if (buffer.length === 0) {\n          complete ? emit(false) : selfState.buffer.push(a);\n        } else {\n          !comparator(a, buffer.shift()) && emit(false);\n        }\n      }, function () {\n        selfState.complete = true;\n        var complete = otherState.complete,\n          buffer = otherState.buffer;\n        complete && emit(buffer.length === 0);\n        sequenceEqualSubscriber === null || sequenceEqualSubscriber === void 0 ? void 0 : sequenceEqualSubscriber.unsubscribe();\n      });\n      return sequenceEqualSubscriber;\n    };\n    source.subscribe(createSubscriber(aState, bState));\n    innerFrom(compareTo).subscribe(createSubscriber(bState, aState));\n  });\n}\nfunction createState() {\n  return {\n    buffer: [],\n    complete: false\n  };\n}","map":{"version":3,"sources":["../../../../src/internal/operators/sequenceEqual.ts"],"names":[],"mappings":"AACA,SAAS,OAAO,QAAQ,cAAc;AACtC,SAAS,wBAAwB,QAAQ,sBAAsB;AAC/D,SAAS,SAAS,QAAQ,yBAAyB;AA2DnD,OAAM,SAAU,aAAa,CAC3B,SAA6B,EAC7B,UAAuD,EAAA;EAAvD,IAAA,UAAA,KAAA,KAAA,CAAA,EAAA;IAAA,UAAA,GAAA,oBAAuC,CAAC,EAAE,CAAC,EAAA;MAAK,OAAA,CAAC,KAAK,CAAC;IAAP,CAAO;EAAA;EAEvD,OAAO,OAAO,CAAC,UAAC,MAAM,EAAE,UAAU,EAAA;IAEhC,IAAM,MAAM,GAAG,WAAW,EAAK;IAE/B,IAAM,MAAM,GAAG,WAAW,EAAK;IAG/B,IAAM,IAAI,GAAG,SAAP,IAAI,CAAI,OAAgB,EAAA;MAC5B,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC;MACxB,UAAU,CAAC,QAAQ,EAAE;IACvB,CAAC;IAOD,IAAM,gBAAgB,GAAG,SAAnB,gBAAgB,CAAI,SAA2B,EAAE,UAA4B,EAAA;MACjF,IAAM,uBAAuB,GAAG,wBAAwB,CACtD,UAAU,EACV,UAAC,CAAI,EAAA;QACK,IAAA,MAAM,GAAe,UAAU,CAAA,MAAzB;UAAE,QAAQ,GAAK,UAAU,CAAA,QAAf;QACxB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;UAOvB,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;SAClD,MAAM;UAIL,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;QAC/C;MACH,CAAC,EACD,YAAA;QAEE,SAAS,CAAC,QAAQ,GAAG,IAAI;QACjB,IAAA,QAAQ,GAAa,UAAU,CAAA,QAAvB;UAAE,MAAM,GAAK,UAAU,CAAA,MAAf;QAKxB,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;QAErC,uBAAuB,KAAA,IAAA,IAAvB,uBAAuB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAvB,uBAAuB,CAAE,WAAW,EAAE;MACxC,CAAC,CACF;MAED,OAAO,uBAAuB;IAChC,CAAC;IAGD,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAClD,SAAS,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;EAClE,CAAC,CAAC;AACJ;AAgBA,SAAS,WAAW,GAAA;EAClB,OAAO;IACL,MAAM,EAAE,EAAE;IACV,QAAQ,EAAE;GACX;AACH","sourceRoot":"","sourcesContent":["import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nexport function sequenceEqual(compareTo, comparator) {\n    if (comparator === void 0) { comparator = function (a, b) { return a === b; }; }\n    return operate(function (source, subscriber) {\n        var aState = createState();\n        var bState = createState();\n        var emit = function (isEqual) {\n            subscriber.next(isEqual);\n            subscriber.complete();\n        };\n        var createSubscriber = function (selfState, otherState) {\n            var sequenceEqualSubscriber = createOperatorSubscriber(subscriber, function (a) {\n                var buffer = otherState.buffer, complete = otherState.complete;\n                if (buffer.length === 0) {\n                    complete ? emit(false) : selfState.buffer.push(a);\n                }\n                else {\n                    !comparator(a, buffer.shift()) && emit(false);\n                }\n            }, function () {\n                selfState.complete = true;\n                var complete = otherState.complete, buffer = otherState.buffer;\n                complete && emit(buffer.length === 0);\n                sequenceEqualSubscriber === null || sequenceEqualSubscriber === void 0 ? void 0 : sequenceEqualSubscriber.unsubscribe();\n            });\n            return sequenceEqualSubscriber;\n        };\n        source.subscribe(createSubscriber(aState, bState));\n        innerFrom(compareTo).subscribe(createSubscriber(bState, aState));\n    });\n}\nfunction createState() {\n    return {\n        buffer: [],\n        complete: false,\n    };\n}\n//# sourceMappingURL=sequenceEqual.js.map"]},"metadata":{},"sourceType":"module"}