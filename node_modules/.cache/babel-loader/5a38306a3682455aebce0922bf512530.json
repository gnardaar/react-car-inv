{"ast":null,"code":"import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n  timeoutProvider.setTimeout(function () {\n    var onUnhandledError = config.onUnhandledError;\n    if (onUnhandledError) {\n      onUnhandledError(err);\n    } else {\n      throw err;\n    }\n  });\n}","map":{"version":3,"sources":["../../../../src/internal/util/reportUnhandledError.ts"],"names":[],"mappings":"AAAA,SAAS,MAAM,QAAQ,WAAW;AAClC,SAAS,eAAe,QAAQ,8BAA8B;AAW9D,OAAM,SAAU,oBAAoB,CAAC,GAAQ,EAAA;EAC3C,eAAe,CAAC,UAAU,CAAC,YAAA;IACjB,IAAA,gBAAgB,GAAK,MAAM,CAAA,gBAAX;IACxB,IAAI,gBAAgB,EAAE;MAEpB,gBAAgB,CAAC,GAAG,CAAC;KACtB,MAAM;MAEL,MAAM,GAAG;IACV;EACH,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(function () {\n        var onUnhandledError = config.onUnhandledError;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n//# sourceMappingURL=reportUnhandledError.js.map"]},"metadata":{},"sourceType":"module"}